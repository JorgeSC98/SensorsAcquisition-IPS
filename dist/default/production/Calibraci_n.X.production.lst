

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Nov 14 14:52:18 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.40
    63                           ; Generated 17/11/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4550 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  001EAA                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _Range_High
   103  001EAA  0302               	dw	770
   104                           
   105                           ;initializer for _Range_Low
   106  001EAC  02DA               	dw	730
   107                           
   108                           ;initializer for _CALIBRATION_START
   109  001EAE  48                 	db	72
   110  0000                     _EECON2	set	4007
   111  0000                     _EEDATA	set	4008
   112  0000                     _LATCbits	set	3979
   113  0000                     _LATDbits	set	3980
   114  0000                     _RCREG	set	4014
   115  0000                     _TXREG	set	4013
   116  0000                     _ADRESL	set	4035
   117  0000                     _ADRESH	set	4036
   118  0000                     _ADCON0bits	set	4034
   119  0000                     _LATE	set	3981
   120  0000                     _LATBbits	set	3978
   121  0000                     _TXEN	set	32101
   122  0000                     _FERR	set	32090
   123  0000                     _CREN	set	32092
   124  0000                     _OERR	set	32089
   125  0000                     _RCIF	set	31989
   126  0000                     _LATB	set	3978
   127  0000                     _OSCCON	set	4051
   128  0000                     _INTCONbits	set	4082
   129  0000                     _TRISBbits	set	3987
   130  0000                     _TRISDbits	set	3989
   131  0000                     _PIR1bits	set	3998
   132  0000                     _RCSTAbits	set	4011
   133  0000                     _TXSTAbits	set	4012
   134  0000                     _SPBRG	set	4015
   135  0000                     _TRISCbits	set	3988
   136  0000                     _ADCON2bits	set	4032
   137  0000                     _ADCON1bits	set	4033
   138  0000                     _PIR2bits	set	4001
   139  0000                     _EECON1bits	set	4006
   140  0000                     _EEADR	set	4009
   141                           
   142                           	psect	smallconst
   143  000800                     __psmallconst:
   144                           	callstack 0
   145  000800  00                 	db	0
   146  000801                     STR_11:
   147  000801  45                 	db	69	;'E'
   148  000802  34                 	db	52	;'4'
   149  000803  0A                 	db	10
   150  000804  00                 	db	0
   151  000805                     STR_12:
   152  000805  64                 	db	100	;'d'
   153  000806  0A                 	db	10
   154  000807  00                 	db	0
   155  000808                     STR_3:
   156  000808  73                 	db	115	;'s'
   157  000809  0A                 	db	10
   158  00080A  00                 	db	0
   159  00080B                     STR_1:
   160  00080B  73                 	db	115	;'s'
   161  00080C  3A                 	db	58	;':'
   162  00080D  00                 	db	0
   163  00080E                     STR_13:
   164  00080E  64                 	db	100	;'d'
   165  00080F  00                 	db	0
   166  000810                     STR_4:
   167  000810  2C                 	db	44
   168  000811  00                 	db	0
   169  000812  00                 	db	0	; dummy byte at the end
   170  0000                     
   171                           ; #config settings
   172                           
   173                           	psect	cinit
   174  001CA4                     __pcinit:
   175                           	callstack 0
   176  001CA4                     start_initialization:
   177                           	callstack 0
   178  001CA4                     __initialization:
   179                           	callstack 0
   180                           
   181                           ; Initialize objects allocated to COMRAM (5 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  001CA4  0EAA               	movlw	low __pidataCOMRAM
   184  001CA6  6EF6               	movwf	tblptrl,c
   185  001CA8  0E1E               	movlw	high __pidataCOMRAM
   186  001CAA  6EF7               	movwf	tblptrh,c
   187  001CAC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  001CAE  6EF8               	movwf	tblptru,c
   189  001CB0  EE00  F059         	lfsr	0,__pdataCOMRAM
   190  001CB4  EE10 F005          	lfsr	1,5
   191  001CB8                     copy_data0:
   192  001CB8  0009               	tblrd		*+
   193  001CBA  CFF5 FFEE          	movff	tablat,postinc0
   194  001CBE  50E5               	movf	postdec1,w,c
   195  001CC0  50E1               	movf	fsr1l,w,c
   196  001CC2  E1FA               	bnz	copy_data0
   197                           
   198                           ; Clear objects allocated to BANK0 (33 bytes)
   199  001CC4  EE00  F060         	lfsr	0,__pbssBANK0
   200  001CC8  0E21               	movlw	33
   201  001CCA                     clear_0:
   202  001CCA  6AEE               	clrf	postinc0,c
   203  001CCC  06E8               	decf	wreg,f,c
   204  001CCE  E1FD               	bnz	clear_0
   205                           
   206                           ; Clear objects allocated to COMRAM (49 bytes)
   207  001CD0  EE00  F001         	lfsr	0,__pbssCOMRAM
   208  001CD4  0E31               	movlw	49
   209  001CD6                     clear_1:
   210  001CD6  6AEE               	clrf	postinc0,c
   211  001CD8  06E8               	decf	wreg,f,c
   212  001CDA  E1FD               	bnz	clear_1
   213  001CDC                     end_of_initialization:
   214                           	callstack 0
   215  001CDC                     __end_of__initialization:
   216                           	callstack 0
   217  001CDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   218  001CDE  6EF8               	movwf	tblptru,c
   219  001CE0  0100               	movlb	0
   220  001CE2  EF0A  F004         	goto	_main	;jump to C main() function
   221                           
   222                           	psect	bssCOMRAM
   223  000001                     __pbssCOMRAM:
   224                           	callstack 0
   225  000001                     _Suma:
   226                           	callstack 0
   227  000001                     	ds	4
   228  000005                     _Calibration_value:
   229                           	callstack 0
   230  000005                     	ds	2
   231  000007                     _potenciometro:
   232                           	callstack 0
   233  000007                     	ds	2
   234  000009                     _Pot_Value_str:
   235                           	callstack 0
   236  000009                     	ds	2
   237  00000B                     _Pot_Value:
   238                           	callstack 0
   239  00000B                     	ds	2
   240  00000D                     _CALIBRATION_REFERENCE:
   241                           	callstack 0
   242  00000D                     	ds	2
   243  00000F                     _SENSOR_VALUE:
   244                           	callstack 0
   245  00000F                     	ds	2
   246  000011                     _LecturaFiltro:
   247                           	callstack 0
   248  000011                     	ds	2
   249  000013                     _Lectura:
   250                           	callstack 0
   251  000013                     	ds	2
   252  000015                     _SENSOR_7:
   253                           	callstack 0
   254  000015                     	ds	2
   255  000017                     _SENSOR_6:
   256                           	callstack 0
   257  000017                     	ds	2
   258  000019                     _SENSOR_5:
   259                           	callstack 0
   260  000019                     	ds	2
   261  00001B                     _SENSOR_4:
   262                           	callstack 0
   263  00001B                     	ds	2
   264  00001D                     _SENSOR_3:
   265                           	callstack 0
   266  00001D                     	ds	2
   267  00001F                     _SENSOR_2:
   268                           	callstack 0
   269  00001F                     	ds	2
   270  000021                     _SENSOR_1:
   271                           	callstack 0
   272  000021                     	ds	2
   273  000023                     _SENSOR_0:
   274                           	callstack 0
   275  000023                     	ds	2
   276  000025                     _data:
   277                           	callstack 0
   278  000025                     	ds	1
   279  000026                     _Direction:
   280                           	callstack 0
   281  000026                     	ds	1
   282  000027                     _SENSOR_I:
   283                           	callstack 0
   284  000027                     	ds	1
   285  000028                     _SENSOR_ID:
   286                           	callstack 0
   287  000028                     	ds	1
   288  000029                     _flag:
   289                           	callstack 0
   290  000029                     	ds	1
   291  00002A                     _CALIBRATION_RUN:
   292                           	callstack 0
   293  00002A                     	ds	1
   294  00002B                     _Conexion_perdida:
   295                           	callstack 0
   296  00002B                     	ds	1
   297  00002C                     _cadena:
   298                           	callstack 0
   299  00002C                     	ds	4
   300  000030                     _Pot:
   301                           	callstack 0
   302  000030                     	ds	2
   303                           
   304                           	psect	dataCOMRAM
   305  000059                     __pdataCOMRAM:
   306                           	callstack 0
   307  000059                     _Range_High:
   308                           	callstack 0
   309  000059                     	ds	2
   310  00005B                     _Range_Low:
   311                           	callstack 0
   312  00005B                     	ds	2
   313  00005D                     _CALIBRATION_START:
   314                           	callstack 0
   315  00005D                     	ds	1
   316                           
   317                           	psect	bssBANK0
   318  000060                     __pbssBANK0:
   319                           	callstack 0
   320  000060                     _result:
   321                           	callstack 0
   322  000060                     	ds	33
   323                           
   324                           	psect	cstackCOMRAM
   325  000032                     __pcstackCOMRAM:
   326                           	callstack 0
   327  000032                     ??_EEPROM_Decodificacion_Memoria:
   328  000032                     ??_Pot_Init:
   329  000032                     ?_strlen:
   330                           	callstack 0
   331  000032                     ?_isspace:
   332                           	callstack 0
   333  000032                     ?_isdigit:
   334                           	callstack 0
   335  000032                     ?_Leer_Canal_ADC:
   336                           	callstack 0
   337  000032                     ?___wmul:
   338                           	callstack 0
   339  000032                     ?___awdiv:
   340                           	callstack 0
   341  000032                     ?___awmod:
   342                           	callstack 0
   343  000032                     ?___aldiv:
   344                           	callstack 0
   345  000032                     ADC_Init@Vref:
   346                           	callstack 0
   347  000032                     Pot_Selector@status:
   348                           	callstack 0
   349  000032                     EEPROM_Rx@direccion:
   350                           	callstack 0
   351  000032                     EEPROM_Tx@dato:
   352                           	callstack 0
   353  000032                     strreverse@begin:
   354                           	callstack 0
   355  000032                     ___wmul@multiplier:
   356                           	callstack 0
   357  000032                     ___awdiv@dividend:
   358                           	callstack 0
   359  000032                     ___awmod@dividend:
   360                           	callstack 0
   361  000032                     isdigit@c:
   362                           	callstack 0
   363  000032                     isspace@c:
   364                           	callstack 0
   365  000032                     strlen@s:
   366                           	callstack 0
   367  000032                     ___aldiv@dividend:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x0
   371  000032                     	ds	1
   372  000033                     ??_Pot_Selector:
   373  000033                     ADC_Init@Clock:
   374                           	callstack 0
   375  000033                     EEPROM_Tx@direccion:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x1
   379  000033                     	ds	1
   380  000034                     ??_isspace:
   381  000034                     ??_isdigit:
   382  000034                     ??_Leer_Canal_ADC:
   383  000034                     ADC_Init@ADQT:
   384                           	callstack 0
   385  000034                     EEPROM_Decodificacion_Memoria@direccion:
   386                           	callstack 0
   387  000034                     strreverse@end:
   388                           	callstack 0
   389  000034                     Escritura_Memoria@string_pot:
   390                           	callstack 0
   391  000034                     ___wmul@multiplicand:
   392                           	callstack 0
   393  000034                     ___awdiv@divisor:
   394                           	callstack 0
   395  000034                     ___awmod@divisor:
   396                           	callstack 0
   397  000034                     strlen@a:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x2
   401  000034                     	ds	1
   402  000035                     ADC_Init@justificacion:
   403                           	callstack 0
   404  000035                     Leer_Canal_ADC@Canal:
   405                           	callstack 0
   406  000035                     Pot_Selector@sensor:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x3
   410  000035                     	ds	1
   411  000036                     ADC_Init@estado:
   412                           	callstack 0
   413  000036                     strreverse@aux:
   414                           	callstack 0
   415  000036                     Pot_Change@direction:
   416                           	callstack 0
   417  000036                     Pot_Change_Vref@amount:
   418                           	callstack 0
   419  000036                     Escritura_Memoria@direccion:
   420                           	callstack 0
   421  000036                     ___awdiv@counter:
   422                           	callstack 0
   423  000036                     ___awmod@counter:
   424                           	callstack 0
   425  000036                     Leer_Canal_ADC@ADC:
   426                           	callstack 0
   427  000036                     USART_TxS@str:
   428                           	callstack 0
   429  000036                     ___wmul@product:
   430                           	callstack 0
   431  000036                     strcpy@dest:
   432                           	callstack 0
   433  000036                     ___aldiv@divisor:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x4
   437  000036                     	ds	1
   438  000037                     ??_ADC_Init:
   439  000037                     ??_Pot_Change_Vref:
   440  000037                     Pot_Change@amount:
   441                           	callstack 0
   442  000037                     Escritura_Memoria@direccionFinal:
   443                           	callstack 0
   444  000037                     ___awdiv@sign:
   445                           	callstack 0
   446  000037                     ___awmod@sign:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x5
   450  000037                     	ds	1
   451  000038                     ??_USART_TxS:
   452  000038                     ??_Pot_Change:
   453  000038                     ADC_Init@entradas_analogicas:
   454                           	callstack 0
   455  000038                     Pot_Change_Vref@direction:
   456                           	callstack 0
   457  000038                     _isspace$1693:
   458                           	callstack 0
   459  000038                     Escritura_Memoria@i:
   460                           	callstack 0
   461  000038                     ___awdiv@quotient:
   462                           	callstack 0
   463  000038                     strcpy@src:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x6
   467  000038                     	ds	1
   468  000039                     ?_atoi:
   469                           	callstack 0
   470  000039                     Pot_Change@i:
   471                           	callstack 0
   472  000039                     Pot_Change_Vref@i:
   473                           	callstack 0
   474  000039                     atoi@s:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x7
   478  000039                     	ds	1
   479  00003A                     ??_strcpy:
   480  00003A                     Pot_Change@sensor:
   481                           	callstack 0
   482  00003A                     Pot_Increase_Vref@amount:
   483                           	callstack 0
   484  00003A                     Pot_Decrease_Vref@amount:
   485                           	callstack 0
   486  00003A                     ___aldiv@counter:
   487                           	callstack 0
   488  00003A                     changeInt@value:
   489                           	callstack 0
   490  00003A                     USART_TxS@length:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x8
   494  00003A                     	ds	1
   495  00003B                     ??_atoi:
   496  00003B                     Pot_Increase@amount:
   497                           	callstack 0
   498  00003B                     Pot_Decrease@amount:
   499                           	callstack 0
   500  00003B                     Pot_Set_Vref@amount:
   501                           	callstack 0
   502  00003B                     ___aldiv@sign:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x9
   506  00003B                     	ds	1
   507  00003C                     Pot_Increase@sensor:
   508                           	callstack 0
   509  00003C                     Pot_Decrease@sensor:
   510                           	callstack 0
   511  00003C                     changeInt@str:
   512                           	callstack 0
   513  00003C                     USART_TxS@i:
   514                           	callstack 0
   515  00003C                     strcpy@s:
   516                           	callstack 0
   517  00003C                     ___aldiv@quotient:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0xA
   521  00003C                     	ds	1
   522  00003D                     Pot_Reset@sensor:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0xB
   526  00003D                     	ds	1
   527  00003E                     USART_Overflow@temp:
   528                           	callstack 0
   529  00003E                     Pot_Set@amount:
   530                           	callstack 0
   531  00003E                     changeInt@sign:
   532                           	callstack 0
   533  00003E                     strcpy@d:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xC
   537  00003E                     	ds	1
   538  00003F                     Pot_Set@sensor:
   539                           	callstack 0
   540  00003F                     USART_RxS@pointer:
   541                           	callstack 0
   542  00003F                     atoi@neg:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0xD
   546  00003F                     	ds	1
   547  000040                     ?_ADC_LecturaFiltro:
   548                           	callstack 0
   549  000040                     ADC_LecturaFiltro@n:
   550                           	callstack 0
   551  000040                     changeInt@wstr:
   552                           	callstack 0
   553  000040                     strcat@dest:
   554                           	callstack 0
   555  000040                     USART_Init@BAUD:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0xE
   559  000040                     	ds	1
   560  000041                     ??_USART_RxS:
   561  000041                     atoi@n:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0xF
   565  000041                     	ds	1
   566  000042                     ADC_LecturaFiltro@Canal:
   567                           	callstack 0
   568  000042                     strcat@src:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x10
   572  000042                     	ds	1
   573  000043                     ??_ADC_LecturaFiltro:
   574  000043                     ?_Lectura_Memoria:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x11
   578  000043                     	ds	1
   579  000044                     USART_RxS@length:
   580                           	callstack 0
   581  000044                     Concat_Value@id:
   582                           	callstack 0
   583  000044                     _USART_Init$1929:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x12
   587  000044                     	ds	1
   588  000045                     Lectura_Memoria@direccion:
   589                           	callstack 0
   590  000045                     USART_RxS@count:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x13
   594  000045                     	ds	1
   595  000046                     Concat_Value@Lectura0:
   596                           	callstack 0
   597  000046                     Lectura_Memoria@potenciometro:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x14
   601  000046                     	ds	1
   602  000047                     ADC_LecturaFiltro@lectura:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x15
   606  000047                     	ds	1
   607  000048                     Lectura_Memoria@direccionX:
   608                           	callstack 0
   609  000048                     Concat_Value@Lectura1:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x16
   613  000048                     	ds	1
   614  000049                     Lectura_Memoria@counter:
   615                           	callstack 0
   616  000049                     ADC_LecturaFiltro@i:
   617                           	callstack 0
   618  000049                     USART_RxS@i:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x17
   622  000049                     	ds	1
   623  00004A                     Concat_Value@Lectura2:
   624                           	callstack 0
   625  00004A                     Lectura_Memoria@potenciometro_value:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x18
   629  00004A                     	ds	1
   630  00004B                     Calibration_Set@s:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x19
   634  00004B                     	ds	1
   635  00004C                     Concat_Value@Lectura3:
   636                           	callstack 0
   637  00004C                     Lectura_Memoria@i:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x1A
   641  00004C                     	ds	2
   642  00004E                     Concat_Value@Lectura4:
   643                           	callstack 0
   644  00004E                     Lectura_Memoria@i_1218:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x1C
   648  00004E                     	ds	2
   649  000050                     Calibration_Automatic@s:
   650                           	callstack 0
   651  000050                     Concat_Value@Lectura5:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1E
   655  000050                     	ds	1
   656  000051                     ??_Calibration_Run:
   657                           
   658                           ; 1 bytes @ 0x1F
   659  000051                     	ds	1
   660  000052                     Concat_Value@Lectura6:
   661                           	callstack 0
   662  000052                     Calibration_Run@i:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x20
   666  000052                     	ds	2
   667  000054                     Concat_Value@Lectura7:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x22
   671  000054                     	ds	2
   672  000056                     ??_main:
   673                           
   674                           ; 1 bytes @ 0x24
   675  000056                     	ds	2
   676  000058                     main@code:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x26
   680  000058                     	ds	1
   681                           
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 115 in file "newmain.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  code            1   38[COMRAM] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0       0       0       0       0
   703 ;;      Temps:          2       0       0       0       0       0       0       0       0
   704 ;;      Totals:         3       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:        3 bytes
   706 ;; Hardware stack levels required when called: 7
   707 ;; This function calls:
   708 ;;		_Calibration_Run
   709 ;;		_EEPROM_Decodificacion_Memoria
   710 ;;		_InitPort
   711 ;;		_Lectura_Memoria
   712 ;;		_Pot_Set_Vref
   713 ;;		_Run_Protocol
   714 ;;		_USART_RxC
   715 ;;		_USART_TxS
   716 ;; This function is called by:
   717 ;;		Startup code after reset
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text0
   722  000814                     __ptext0:
   723                           	callstack 0
   724  000814                     _main:
   725                           	callstack 24
   726  000814                     
   727                           ;newmain.c: 116:   InitPort();
   728  000814  EC2F  F00E         	call	_InitPort	;wreg free
   729                           
   730                           ;newmain.c: 117:   Pot_Set_Vref(40);
   731  000818  0E28               	movlw	40
   732  00081A  EC32  F00F         	call	_Pot_Set_Vref
   733  00081E                     
   734                           ;newmain.c: 119:   _delay((unsigned long)((100)*(8000000/4000.0)));
   735  00081E  0E02               	movlw	2
   736  000820  6E57               	movwf	(??_main+1)^0,c
   737  000822  0E04               	movlw	4
   738  000824  6E56               	movwf	??_main^0,c
   739  000826  0EBA               	movlw	186
   740  000828                     u1747:
   741  000828  2EE8               	decfsz	wreg,f,c
   742  00082A  D7FE               	bra	u1747
   743  00082C  2E56               	decfsz	??_main^0,f,c
   744  00082E  D7FC               	bra	u1747
   745  000830  2E57               	decfsz	(??_main+1)^0,f,c
   746  000832  D7FA               	bra	u1747
   747  000834  D000               	nop2	
   748  000836                     
   749                           ;newmain.c: 121:   char code =USART_RxC();
   750  000836  EC01  F00F         	call	_USART_RxC	;wreg free
   751  00083A  6E58               	movwf	main@code^0,c
   752  00083C                     
   753                           ;newmain.c: 122:   if (code=='c'){
   754  00083C  0E63               	movlw	99
   755  00083E  1858               	xorwf	main@code^0,w,c
   756  000840  A4D8               	btfss	status,2,c
   757  000842  EF25  F004         	goto	u1601
   758  000846  EF27  F004         	goto	u1600
   759  00084A                     u1601:
   760  00084A  EF45  F004         	goto	l2933
   761  00084E                     u1600:
   762  00084E                     
   763                           ;newmain.c: 123:      _delay((unsigned long)((100)*(8000000/4000.0)));
   764  00084E  0E02               	movlw	2
   765  000850  6E57               	movwf	(??_main+1)^0,c
   766  000852  0E04               	movlw	4
   767  000854  6E56               	movwf	??_main^0,c
   768  000856  0EBA               	movlw	186
   769  000858                     u1757:
   770  000858  2EE8               	decfsz	wreg,f,c
   771  00085A  D7FE               	bra	u1757
   772  00085C  2E56               	decfsz	??_main^0,f,c
   773  00085E  D7FC               	bra	u1757
   774  000860  2E57               	decfsz	(??_main+1)^0,f,c
   775  000862  D7FA               	bra	u1757
   776  000864  D000               	nop2	
   777  000866                     
   778                           ;newmain.c: 124:      Calibration_Run();
   779  000866  EC97  F009         	call	_Calibration_Run	;wreg free
   780  00086A                     
   781                           ;newmain.c: 125:      _delay((unsigned long)((100)*(8000000/4000.0)));
   782  00086A  0E02               	movlw	2
   783  00086C  6E57               	movwf	(??_main+1)^0,c
   784  00086E  0E04               	movlw	4
   785  000870  6E56               	movwf	??_main^0,c
   786  000872  0EBA               	movlw	186
   787  000874                     u1767:
   788  000874  2EE8               	decfsz	wreg,f,c
   789  000876  D7FE               	bra	u1767
   790  000878  2E56               	decfsz	??_main^0,f,c
   791  00087A  D7FC               	bra	u1767
   792  00087C  2E57               	decfsz	(??_main+1)^0,f,c
   793  00087E  D7FA               	bra	u1767
   794  000880  D000               	nop2	
   795  000882                     l2931:
   796                           
   797                           ;newmain.c: 126:      Run_Protocol();
   798  000882  EC6F  F007         	call	_Run_Protocol	;wreg free
   799                           
   800                           ;newmain.c: 127:     }else if(code=='r'){
   801  000886  EF03  F005         	goto	l3005
   802  00088A                     l2933:
   803  00088A  0E72               	movlw	114
   804  00088C  1858               	xorwf	main@code^0,w,c
   805  00088E  A4D8               	btfss	status,2,c
   806  000890  EF4C  F004         	goto	u1611
   807  000894  EF4E  F004         	goto	u1610
   808  000898                     u1611:
   809  000898  EF50  F004         	goto	l2937
   810  00089C                     u1610:
   811  00089C  EF41  F004         	goto	l2931
   812  0008A0                     l2937:
   813  0008A0  0E73               	movlw	115
   814  0008A2  1858               	xorwf	main@code^0,w,c
   815  0008A4  A4D8               	btfss	status,2,c
   816  0008A6  EF57  F004         	goto	u1621
   817  0008AA  EF59  F004         	goto	u1620
   818  0008AE                     u1621:
   819  0008AE  EF03  F005         	goto	l3005
   820  0008B2                     u1620:
   821  0008B2                     
   822                           ;newmain.c: 130:         USART_TxS("s\n");
   823  0008B2  0E08               	movlw	low STR_3
   824  0008B4  6E36               	movwf	USART_TxS@str^0,c
   825  0008B6  0E08               	movlw	high STR_3
   826  0008B8  6E37               	movwf	(USART_TxS@str+1)^0,c
   827  0008BA  EC24  F00C         	call	_USART_TxS	;wreg free
   828  0008BE                     
   829                           ;newmain.c: 132:         Direction=0;
   830  0008BE  0E00               	movlw	0
   831  0008C0  6E26               	movwf	_Direction^0,c
   832  0008C2                     
   833                           ;newmain.c: 133:         Direction=EEPROM_Decodificacion_Memoria(Direction);
   834  0008C2  5026               	movf	_Direction^0,w,c
   835  0008C4  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
   836  0008C8  6E26               	movwf	_Direction^0,c
   837  0008CA                     
   838                           ;newmain.c: 134:         Lectura_Memoria(Direction);
   839  0008CA  5026               	movf	_Direction^0,w,c
   840  0008CC  EC26  F00B         	call	_Lectura_Memoria
   841  0008D0                     
   842                           ;newmain.c: 135:         _delay((unsigned long)((10)*(8000000/4000.0)));
   843  0008D0  0E1A               	movlw	26
   844  0008D2  6E56               	movwf	??_main^0,c
   845  0008D4  0EF8               	movlw	248
   846  0008D6                     u1777:
   847  0008D6  2EE8               	decfsz	wreg,f,c
   848  0008D8  D7FE               	bra	u1777
   849  0008DA  2E56               	decfsz	??_main^0,f,c
   850  0008DC  D7FC               	bra	u1777
   851  0008DE  D000               	nop2	
   852  0008E0                     
   853                           ;newmain.c: 138:         Direction=1;
   854  0008E0  0E01               	movlw	1
   855  0008E2  6E26               	movwf	_Direction^0,c
   856  0008E4                     
   857                           ;newmain.c: 139:         Direction=EEPROM_Decodificacion_Memoria(Direction);
   858  0008E4  5026               	movf	_Direction^0,w,c
   859  0008E6  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
   860  0008EA  6E26               	movwf	_Direction^0,c
   861  0008EC                     
   862                           ;newmain.c: 140:         Lectura_Memoria(Direction);
   863  0008EC  5026               	movf	_Direction^0,w,c
   864  0008EE  EC26  F00B         	call	_Lectura_Memoria
   865  0008F2                     
   866                           ;newmain.c: 141:         _delay((unsigned long)((100)*(8000000/4000.0)));
   867  0008F2  0E02               	movlw	2
   868  0008F4  6E57               	movwf	(??_main+1)^0,c
   869  0008F6  0E04               	movlw	4
   870  0008F8  6E56               	movwf	??_main^0,c
   871  0008FA  0EBA               	movlw	186
   872  0008FC                     u1787:
   873  0008FC  2EE8               	decfsz	wreg,f,c
   874  0008FE  D7FE               	bra	u1787
   875  000900  2E56               	decfsz	??_main^0,f,c
   876  000902  D7FC               	bra	u1787
   877  000904  2E57               	decfsz	(??_main+1)^0,f,c
   878  000906  D7FA               	bra	u1787
   879  000908  D000               	nop2	
   880  00090A                     
   881                           ;newmain.c: 144:         Direction=2;
   882  00090A  0E02               	movlw	2
   883  00090C  6E26               	movwf	_Direction^0,c
   884  00090E                     
   885                           ;newmain.c: 145:         Direction=EEPROM_Decodificacion_Memoria(Direction);
   886  00090E  5026               	movf	_Direction^0,w,c
   887  000910  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
   888  000914  6E26               	movwf	_Direction^0,c
   889  000916                     
   890                           ;newmain.c: 146:         Lectura_Memoria(Direction);
   891  000916  5026               	movf	_Direction^0,w,c
   892  000918  EC26  F00B         	call	_Lectura_Memoria
   893  00091C                     
   894                           ;newmain.c: 147:         _delay((unsigned long)((100)*(8000000/4000.0)));
   895  00091C  0E02               	movlw	2
   896  00091E  6E57               	movwf	(??_main+1)^0,c
   897  000920  0E04               	movlw	4
   898  000922  6E56               	movwf	??_main^0,c
   899  000924  0EBA               	movlw	186
   900  000926                     u1797:
   901  000926  2EE8               	decfsz	wreg,f,c
   902  000928  D7FE               	bra	u1797
   903  00092A  2E56               	decfsz	??_main^0,f,c
   904  00092C  D7FC               	bra	u1797
   905  00092E  2E57               	decfsz	(??_main+1)^0,f,c
   906  000930  D7FA               	bra	u1797
   907  000932  D000               	nop2	
   908  000934                     
   909                           ;newmain.c: 149:         Direction=3;
   910  000934  0E03               	movlw	3
   911  000936  6E26               	movwf	_Direction^0,c
   912  000938                     
   913                           ;newmain.c: 150:         Direction=EEPROM_Decodificacion_Memoria(Direction);
   914  000938  5026               	movf	_Direction^0,w,c
   915  00093A  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
   916  00093E  6E26               	movwf	_Direction^0,c
   917  000940                     
   918                           ;newmain.c: 151:         Lectura_Memoria(Direction);
   919  000940  5026               	movf	_Direction^0,w,c
   920  000942  EC26  F00B         	call	_Lectura_Memoria
   921  000946                     
   922                           ;newmain.c: 152:         _delay((unsigned long)((100)*(8000000/4000.0)));
   923  000946  0E02               	movlw	2
   924  000948  6E57               	movwf	(??_main+1)^0,c
   925  00094A  0E04               	movlw	4
   926  00094C  6E56               	movwf	??_main^0,c
   927  00094E  0EBA               	movlw	186
   928  000950                     u1807:
   929  000950  2EE8               	decfsz	wreg,f,c
   930  000952  D7FE               	bra	u1807
   931  000954  2E56               	decfsz	??_main^0,f,c
   932  000956  D7FC               	bra	u1807
   933  000958  2E57               	decfsz	(??_main+1)^0,f,c
   934  00095A  D7FA               	bra	u1807
   935  00095C  D000               	nop2	
   936  00095E                     
   937                           ;newmain.c: 154:         Direction=4;
   938  00095E  0E04               	movlw	4
   939  000960  6E26               	movwf	_Direction^0,c
   940  000962                     
   941                           ;newmain.c: 155:         Direction=EEPROM_Decodificacion_Memoria(Direction);
   942  000962  5026               	movf	_Direction^0,w,c
   943  000964  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
   944  000968  6E26               	movwf	_Direction^0,c
   945  00096A                     
   946                           ;newmain.c: 156:         Lectura_Memoria(Direction);
   947  00096A  5026               	movf	_Direction^0,w,c
   948  00096C  EC26  F00B         	call	_Lectura_Memoria
   949  000970                     
   950                           ;newmain.c: 157:         _delay((unsigned long)((100)*(8000000/4000.0)));
   951  000970  0E02               	movlw	2
   952  000972  6E57               	movwf	(??_main+1)^0,c
   953  000974  0E04               	movlw	4
   954  000976  6E56               	movwf	??_main^0,c
   955  000978  0EBA               	movlw	186
   956  00097A                     u1817:
   957  00097A  2EE8               	decfsz	wreg,f,c
   958  00097C  D7FE               	bra	u1817
   959  00097E  2E56               	decfsz	??_main^0,f,c
   960  000980  D7FC               	bra	u1817
   961  000982  2E57               	decfsz	(??_main+1)^0,f,c
   962  000984  D7FA               	bra	u1817
   963  000986  D000               	nop2	
   964  000988                     
   965                           ;newmain.c: 159:         Direction=5;
   966  000988  0E05               	movlw	5
   967  00098A  6E26               	movwf	_Direction^0,c
   968  00098C                     
   969                           ;newmain.c: 160:         Direction=EEPROM_Decodificacion_Memoria(Direction);
   970  00098C  5026               	movf	_Direction^0,w,c
   971  00098E  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
   972  000992  6E26               	movwf	_Direction^0,c
   973  000994                     
   974                           ;newmain.c: 161:         Lectura_Memoria(Direction);
   975  000994  5026               	movf	_Direction^0,w,c
   976  000996  EC26  F00B         	call	_Lectura_Memoria
   977  00099A                     
   978                           ;newmain.c: 162:         _delay((unsigned long)((100)*(8000000/4000.0)));
   979  00099A  0E02               	movlw	2
   980  00099C  6E57               	movwf	(??_main+1)^0,c
   981  00099E  0E04               	movlw	4
   982  0009A0  6E56               	movwf	??_main^0,c
   983  0009A2  0EBA               	movlw	186
   984  0009A4                     u1827:
   985  0009A4  2EE8               	decfsz	wreg,f,c
   986  0009A6  D7FE               	bra	u1827
   987  0009A8  2E56               	decfsz	??_main^0,f,c
   988  0009AA  D7FC               	bra	u1827
   989  0009AC  2E57               	decfsz	(??_main+1)^0,f,c
   990  0009AE  D7FA               	bra	u1827
   991  0009B0  D000               	nop2	
   992  0009B2                     
   993                           ;newmain.c: 164:         Direction=6;
   994  0009B2  0E06               	movlw	6
   995  0009B4  6E26               	movwf	_Direction^0,c
   996  0009B6                     
   997                           ;newmain.c: 165:         Direction=EEPROM_Decodificacion_Memoria(Direction);
   998  0009B6  5026               	movf	_Direction^0,w,c
   999  0009B8  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
  1000  0009BC  6E26               	movwf	_Direction^0,c
  1001  0009BE                     
  1002                           ;newmain.c: 166:         Lectura_Memoria(Direction);
  1003  0009BE  5026               	movf	_Direction^0,w,c
  1004  0009C0  EC26  F00B         	call	_Lectura_Memoria
  1005  0009C4                     
  1006                           ;newmain.c: 167:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1007  0009C4  0E02               	movlw	2
  1008  0009C6  6E57               	movwf	(??_main+1)^0,c
  1009  0009C8  0E04               	movlw	4
  1010  0009CA  6E56               	movwf	??_main^0,c
  1011  0009CC  0EBA               	movlw	186
  1012  0009CE                     u1837:
  1013  0009CE  2EE8               	decfsz	wreg,f,c
  1014  0009D0  D7FE               	bra	u1837
  1015  0009D2  2E56               	decfsz	??_main^0,f,c
  1016  0009D4  D7FC               	bra	u1837
  1017  0009D6  2E57               	decfsz	(??_main+1)^0,f,c
  1018  0009D8  D7FA               	bra	u1837
  1019  0009DA  D000               	nop2	
  1020  0009DC                     
  1021                           ;newmain.c: 169:         Direction=7;
  1022  0009DC  0E07               	movlw	7
  1023  0009DE  6E26               	movwf	_Direction^0,c
  1024  0009E0                     
  1025                           ;newmain.c: 170:         Direction=EEPROM_Decodificacion_Memoria(Direction);
  1026  0009E0  5026               	movf	_Direction^0,w,c
  1027  0009E2  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
  1028  0009E6  6E26               	movwf	_Direction^0,c
  1029  0009E8                     
  1030                           ;newmain.c: 171:         Lectura_Memoria(Direction);
  1031  0009E8  5026               	movf	_Direction^0,w,c
  1032  0009EA  EC26  F00B         	call	_Lectura_Memoria
  1033  0009EE                     
  1034                           ;newmain.c: 172:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1035  0009EE  0E02               	movlw	2
  1036  0009F0  6E57               	movwf	(??_main+1)^0,c
  1037  0009F2  0E04               	movlw	4
  1038  0009F4  6E56               	movwf	??_main^0,c
  1039  0009F6  0EBA               	movlw	186
  1040  0009F8                     u1847:
  1041  0009F8  2EE8               	decfsz	wreg,f,c
  1042  0009FA  D7FE               	bra	u1847
  1043  0009FC  2E56               	decfsz	??_main^0,f,c
  1044  0009FE  D7FC               	bra	u1847
  1045  000A00  2E57               	decfsz	(??_main+1)^0,f,c
  1046  000A02  D7FA               	bra	u1847
  1047  000A04  D000               	nop2	
  1048  000A06                     l3005:
  1049                           
  1050                           ;newmain.c: 175:       _delay((unsigned long)((1000)*(8000000/4000.0)));
  1051  000A06  0E0B               	movlw	11
  1052  000A08  6E57               	movwf	(??_main+1)^0,c
  1053  000A0A  0E26               	movlw	38
  1054  000A0C  6E56               	movwf	??_main^0,c
  1055  000A0E  0E5E               	movlw	94
  1056  000A10                     u1857:
  1057  000A10  2EE8               	decfsz	wreg,f,c
  1058  000A12  D7FE               	bra	u1857
  1059  000A14  2E56               	decfsz	??_main^0,f,c
  1060  000A16  D7FC               	bra	u1857
  1061  000A18  2E57               	decfsz	(??_main+1)^0,f,c
  1062  000A1A  D7FA               	bra	u1857
  1063  000A1C  EF00  F000         	goto	start
  1064  000A20                     __end_of_main:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _Run_Protocol *****************
  1068 ;; Defined at:
  1069 ;;		line 45 in file "newmain.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1086 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1087 ;;Total ram usage:        0 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 3
  1090 ;; This function calls:
  1091 ;;		_ADC_LecturaFiltro
  1092 ;;		_Concat_Value
  1093 ;;		_USART_TxS
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text1
  1100  000EDE                     __ptext1:
  1101                           	callstack 0
  1102  000EDE                     _Run_Protocol:
  1103                           	callstack 27
  1104  000EDE                     l106:
  1105  000EDE                     
  1106                           ;newmain.c: 47:     SENSOR_0=ADC_LecturaFiltro(10,0);
  1107  000EDE  0E00               	movlw	0
  1108  000EE0  6E41               	movwf	(ADC_LecturaFiltro@n+1)^0,c
  1109  000EE2  0E0A               	movlw	10
  1110  000EE4  6E40               	movwf	ADC_LecturaFiltro@n^0,c
  1111  000EE6  0E00               	movlw	0
  1112  000EE8  6E42               	movwf	ADC_LecturaFiltro@Canal^0,c
  1113  000EEA  EC7E  F00B         	call	_ADC_LecturaFiltro	;wreg free
  1114  000EEE  C040  F023         	movff	?_ADC_LecturaFiltro,_SENSOR_0
  1115  000EF2  C041  F024         	movff	?_ADC_LecturaFiltro+1,_SENSOR_0+1
  1116                           
  1117                           ;newmain.c: 48:     SENSOR_1=ADC_LecturaFiltro(10,1);
  1118  000EF6  0E00               	movlw	0
  1119  000EF8  6E41               	movwf	(ADC_LecturaFiltro@n+1)^0,c
  1120  000EFA  0E0A               	movlw	10
  1121  000EFC  6E40               	movwf	ADC_LecturaFiltro@n^0,c
  1122  000EFE  0E01               	movlw	1
  1123  000F00  6E42               	movwf	ADC_LecturaFiltro@Canal^0,c
  1124  000F02  EC7E  F00B         	call	_ADC_LecturaFiltro	;wreg free
  1125  000F06  C040  F021         	movff	?_ADC_LecturaFiltro,_SENSOR_1
  1126  000F0A  C041  F022         	movff	?_ADC_LecturaFiltro+1,_SENSOR_1+1
  1127                           
  1128                           ;newmain.c: 49:     SENSOR_2=ADC_LecturaFiltro(10,4);
  1129  000F0E  0E00               	movlw	0
  1130  000F10  6E41               	movwf	(ADC_LecturaFiltro@n+1)^0,c
  1131  000F12  0E0A               	movlw	10
  1132  000F14  6E40               	movwf	ADC_LecturaFiltro@n^0,c
  1133  000F16  0E04               	movlw	4
  1134  000F18  6E42               	movwf	ADC_LecturaFiltro@Canal^0,c
  1135  000F1A  EC7E  F00B         	call	_ADC_LecturaFiltro	;wreg free
  1136  000F1E  C040  F01F         	movff	?_ADC_LecturaFiltro,_SENSOR_2
  1137  000F22  C041  F020         	movff	?_ADC_LecturaFiltro+1,_SENSOR_2+1
  1138                           
  1139                           ;newmain.c: 50:     SENSOR_3=ADC_LecturaFiltro(10,5);
  1140  000F26  0E00               	movlw	0
  1141  000F28  6E41               	movwf	(ADC_LecturaFiltro@n+1)^0,c
  1142  000F2A  0E0A               	movlw	10
  1143  000F2C  6E40               	movwf	ADC_LecturaFiltro@n^0,c
  1144  000F2E  0E05               	movlw	5
  1145  000F30  6E42               	movwf	ADC_LecturaFiltro@Canal^0,c
  1146  000F32  EC7E  F00B         	call	_ADC_LecturaFiltro	;wreg free
  1147  000F36  C040  F01D         	movff	?_ADC_LecturaFiltro,_SENSOR_3
  1148  000F3A  C041  F01E         	movff	?_ADC_LecturaFiltro+1,_SENSOR_3+1
  1149                           
  1150                           ;newmain.c: 51:     SENSOR_4=ADC_LecturaFiltro(10,6);
  1151  000F3E  0E00               	movlw	0
  1152  000F40  6E41               	movwf	(ADC_LecturaFiltro@n+1)^0,c
  1153  000F42  0E0A               	movlw	10
  1154  000F44  6E40               	movwf	ADC_LecturaFiltro@n^0,c
  1155  000F46  0E06               	movlw	6
  1156  000F48  6E42               	movwf	ADC_LecturaFiltro@Canal^0,c
  1157  000F4A  EC7E  F00B         	call	_ADC_LecturaFiltro	;wreg free
  1158  000F4E  C040  F01B         	movff	?_ADC_LecturaFiltro,_SENSOR_4
  1159  000F52  C041  F01C         	movff	?_ADC_LecturaFiltro+1,_SENSOR_4+1
  1160                           
  1161                           ;newmain.c: 52:     SENSOR_5=ADC_LecturaFiltro(10,7);
  1162  000F56  0E00               	movlw	0
  1163  000F58  6E41               	movwf	(ADC_LecturaFiltro@n+1)^0,c
  1164  000F5A  0E0A               	movlw	10
  1165  000F5C  6E40               	movwf	ADC_LecturaFiltro@n^0,c
  1166  000F5E  0E07               	movlw	7
  1167  000F60  6E42               	movwf	ADC_LecturaFiltro@Canal^0,c
  1168  000F62  EC7E  F00B         	call	_ADC_LecturaFiltro	;wreg free
  1169  000F66  C040  F019         	movff	?_ADC_LecturaFiltro,_SENSOR_5
  1170  000F6A  C041  F01A         	movff	?_ADC_LecturaFiltro+1,_SENSOR_5+1
  1171                           
  1172                           ;newmain.c: 53:     SENSOR_6=ADC_LecturaFiltro(10,8);
  1173  000F6E  0E00               	movlw	0
  1174  000F70  6E41               	movwf	(ADC_LecturaFiltro@n+1)^0,c
  1175  000F72  0E0A               	movlw	10
  1176  000F74  6E40               	movwf	ADC_LecturaFiltro@n^0,c
  1177  000F76  0E08               	movlw	8
  1178  000F78  6E42               	movwf	ADC_LecturaFiltro@Canal^0,c
  1179  000F7A  EC7E  F00B         	call	_ADC_LecturaFiltro	;wreg free
  1180  000F7E  C040  F017         	movff	?_ADC_LecturaFiltro,_SENSOR_6
  1181  000F82  C041  F018         	movff	?_ADC_LecturaFiltro+1,_SENSOR_6+1
  1182                           
  1183                           ;newmain.c: 54:     SENSOR_7=ADC_LecturaFiltro(10,9);
  1184  000F86  0E00               	movlw	0
  1185  000F88  6E41               	movwf	(ADC_LecturaFiltro@n+1)^0,c
  1186  000F8A  0E0A               	movlw	10
  1187  000F8C  6E40               	movwf	ADC_LecturaFiltro@n^0,c
  1188  000F8E  0E09               	movlw	9
  1189  000F90  6E42               	movwf	ADC_LecturaFiltro@Canal^0,c
  1190  000F92  EC7E  F00B         	call	_ADC_LecturaFiltro	;wreg free
  1191  000F96  C040  F015         	movff	?_ADC_LecturaFiltro,_SENSOR_7
  1192  000F9A  C041  F016         	movff	?_ADC_LecturaFiltro+1,_SENSOR_7+1
  1193  000F9E                     
  1194                           ;newmain.c: 55:     Concat_Value("s:",SENSOR_0,SENSOR_1,SENSOR_2,SENSOR_3,SENSOR_4,SENSO
      +                          R_5,SENSOR_6,SENSOR_7);
  1195  000F9E  0E0B               	movlw	low STR_1
  1196  000FA0  6E44               	movwf	Concat_Value@id^0,c
  1197  000FA2  0E08               	movlw	high STR_1
  1198  000FA4  6E45               	movwf	(Concat_Value@id+1)^0,c
  1199  000FA6  C023  F046         	movff	_SENSOR_0,Concat_Value@Lectura0
  1200  000FAA  C024  F047         	movff	_SENSOR_0+1,Concat_Value@Lectura0+1
  1201  000FAE  C021  F048         	movff	_SENSOR_1,Concat_Value@Lectura1
  1202  000FB2  C022  F049         	movff	_SENSOR_1+1,Concat_Value@Lectura1+1
  1203  000FB6  C01F  F04A         	movff	_SENSOR_2,Concat_Value@Lectura2
  1204  000FBA  C020  F04B         	movff	_SENSOR_2+1,Concat_Value@Lectura2+1
  1205  000FBE  C01D  F04C         	movff	_SENSOR_3,Concat_Value@Lectura3
  1206  000FC2  C01E  F04D         	movff	_SENSOR_3+1,Concat_Value@Lectura3+1
  1207  000FC6  C01B  F04E         	movff	_SENSOR_4,Concat_Value@Lectura4
  1208  000FCA  C01C  F04F         	movff	_SENSOR_4+1,Concat_Value@Lectura4+1
  1209  000FCE  C019  F050         	movff	_SENSOR_5,Concat_Value@Lectura5
  1210  000FD2  C01A  F051         	movff	_SENSOR_5+1,Concat_Value@Lectura5+1
  1211  000FD6  C017  F052         	movff	_SENSOR_6,Concat_Value@Lectura6
  1212  000FDA  C018  F053         	movff	_SENSOR_6+1,Concat_Value@Lectura6+1
  1213  000FDE  C015  F054         	movff	_SENSOR_7,Concat_Value@Lectura7
  1214  000FE2  C016  F055         	movff	_SENSOR_7+1,Concat_Value@Lectura7+1
  1215  000FE6  EC10  F005         	call	_Concat_Value	;wreg free
  1216  000FEA                     
  1217                           ;newmain.c: 56:     USART_TxS(result);
  1218  000FEA  0E60               	movlw	low _result
  1219  000FEC  6E36               	movwf	USART_TxS@str^0,c
  1220  000FEE  0E00               	movlw	high _result
  1221  000FF0  6E37               	movwf	(USART_TxS@str+1)^0,c
  1222  000FF2  EC24  F00C         	call	_USART_TxS	;wreg free
  1223  000FF6                     
  1224                           ;newmain.c: 57:     USART_TxS("\n");
  1225  000FF6  0E03               	movlw	low (STR_11+2)
  1226  000FF8  6E36               	movwf	USART_TxS@str^0,c
  1227  000FFA  0E08               	movlw	high (STR_11+2)
  1228  000FFC  6E37               	movwf	(USART_TxS@str+1)^0,c
  1229  000FFE  EC24  F00C         	call	_USART_TxS	;wreg free
  1230  001002  EF6F  F007         	goto	l106
  1231  001006  0012               	return		;funcret
  1232  001008                     __end_of_Run_Protocol:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _Concat_Value *****************
  1236 ;; Defined at:
  1237 ;;		line 190 in file "ADC.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  id              2   18[COMRAM] PTR unsigned char 
  1240 ;;		 -> STR_1(3), 
  1241 ;;  Lectura0        2   20[COMRAM] int 
  1242 ;;  Lectura1        2   22[COMRAM] int 
  1243 ;;  Lectura2        2   24[COMRAM] int 
  1244 ;;  Lectura3        2   26[COMRAM] int 
  1245 ;;  Lectura4        2   28[COMRAM] int 
  1246 ;;  Lectura5        2   30[COMRAM] int 
  1247 ;;  Lectura6        2   32[COMRAM] int 
  1248 ;;  Lectura7        2   34[COMRAM] int 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:        18       0       0       0       0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1263 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1264 ;;Total ram usage:       18 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 2
  1267 ;; This function calls:
  1268 ;;		_changeInt
  1269 ;;		_strcat
  1270 ;;		_strcpy
  1271 ;; This function is called by:
  1272 ;;		_Run_Protocol
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text2
  1277  000A20                     __ptext2:
  1278                           	callstack 0
  1279  000A20                     _Concat_Value:
  1280                           	callstack 27
  1281  000A20                     
  1282                           ;ADC.c: 191:  strcpy( result,id);
  1283  000A20  0E60               	movlw	low _result
  1284  000A22  6E36               	movwf	strcpy@dest^0,c
  1285  000A24  0E00               	movlw	high _result
  1286  000A26  6E37               	movwf	(strcpy@dest+1)^0,c
  1287  000A28  C044  F038         	movff	Concat_Value@id,strcpy@src
  1288  000A2C  C045  F039         	movff	Concat_Value@id+1,strcpy@src+1
  1289  000A30  EC9C  F00C         	call	_strcpy	;wreg free
  1290  000A34                     
  1291                           ;ADC.c: 192:  changeInt(Lectura0,cadena);
  1292  000A34  C046  F03A         	movff	Concat_Value@Lectura0,changeInt@value
  1293  000A38  C047  F03B         	movff	Concat_Value@Lectura0+1,changeInt@value+1
  1294  000A3C  0E2C               	movlw	low _cadena
  1295  000A3E  6E3C               	movwf	changeInt@str^0,c
  1296  000A40  0E00               	movlw	high _cadena
  1297  000A42  6E3D               	movwf	(changeInt@str+1)^0,c
  1298  000A44  EC6F  F00A         	call	_changeInt	;wreg free
  1299  000A48                     
  1300                           ;ADC.c: 193:  strcat( result,cadena );
  1301  000A48  0E60               	movlw	low _result
  1302  000A4A  6E40               	movwf	strcat@dest^0,c
  1303  000A4C  0E00               	movlw	high _result
  1304  000A4E  6E41               	movwf	(strcat@dest+1)^0,c
  1305  000A50  0E2C               	movlw	low _cadena
  1306  000A52  6E42               	movwf	strcat@src^0,c
  1307  000A54  0E00               	movlw	high _cadena
  1308  000A56  6E43               	movwf	(strcat@src+1)^0,c
  1309  000A58  ECC9  F00E         	call	_strcat	;wreg free
  1310  000A5C                     
  1311                           ;ADC.c: 194:  strcat( result,"," );
  1312  000A5C  0E60               	movlw	low _result
  1313  000A5E  6E40               	movwf	strcat@dest^0,c
  1314  000A60  0E00               	movlw	high _result
  1315  000A62  6E41               	movwf	(strcat@dest+1)^0,c
  1316  000A64  0E10               	movlw	low STR_4
  1317  000A66  6E42               	movwf	strcat@src^0,c
  1318  000A68  0E08               	movlw	high STR_4
  1319  000A6A  6E43               	movwf	(strcat@src+1)^0,c
  1320  000A6C  ECC9  F00E         	call	_strcat	;wreg free
  1321  000A70                     
  1322                           ;ADC.c: 195:  changeInt(Lectura1,cadena);
  1323  000A70  C048  F03A         	movff	Concat_Value@Lectura1,changeInt@value
  1324  000A74  C049  F03B         	movff	Concat_Value@Lectura1+1,changeInt@value+1
  1325  000A78  0E2C               	movlw	low _cadena
  1326  000A7A  6E3C               	movwf	changeInt@str^0,c
  1327  000A7C  0E00               	movlw	high _cadena
  1328  000A7E  6E3D               	movwf	(changeInt@str+1)^0,c
  1329  000A80  EC6F  F00A         	call	_changeInt	;wreg free
  1330                           
  1331                           ;ADC.c: 196:  strcat( result,cadena );
  1332  000A84  0E60               	movlw	low _result
  1333  000A86  6E40               	movwf	strcat@dest^0,c
  1334  000A88  0E00               	movlw	high _result
  1335  000A8A  6E41               	movwf	(strcat@dest+1)^0,c
  1336  000A8C  0E2C               	movlw	low _cadena
  1337  000A8E  6E42               	movwf	strcat@src^0,c
  1338  000A90  0E00               	movlw	high _cadena
  1339  000A92  6E43               	movwf	(strcat@src+1)^0,c
  1340  000A94  ECC9  F00E         	call	_strcat	;wreg free
  1341                           
  1342                           ;ADC.c: 197:  strcat( result,"," );
  1343  000A98  0E60               	movlw	low _result
  1344  000A9A  6E40               	movwf	strcat@dest^0,c
  1345  000A9C  0E00               	movlw	high _result
  1346  000A9E  6E41               	movwf	(strcat@dest+1)^0,c
  1347  000AA0  0E10               	movlw	low STR_4
  1348  000AA2  6E42               	movwf	strcat@src^0,c
  1349  000AA4  0E08               	movlw	high STR_4
  1350  000AA6  6E43               	movwf	(strcat@src+1)^0,c
  1351  000AA8  ECC9  F00E         	call	_strcat	;wreg free
  1352  000AAC                     
  1353                           ;ADC.c: 198:  changeInt(Lectura2,cadena);
  1354  000AAC  C04A  F03A         	movff	Concat_Value@Lectura2,changeInt@value
  1355  000AB0  C04B  F03B         	movff	Concat_Value@Lectura2+1,changeInt@value+1
  1356  000AB4  0E2C               	movlw	low _cadena
  1357  000AB6  6E3C               	movwf	changeInt@str^0,c
  1358  000AB8  0E00               	movlw	high _cadena
  1359  000ABA  6E3D               	movwf	(changeInt@str+1)^0,c
  1360  000ABC  EC6F  F00A         	call	_changeInt	;wreg free
  1361  000AC0                     
  1362                           ;ADC.c: 199:  strcat( result,cadena );
  1363  000AC0  0E60               	movlw	low _result
  1364  000AC2  6E40               	movwf	strcat@dest^0,c
  1365  000AC4  0E00               	movlw	high _result
  1366  000AC6  6E41               	movwf	(strcat@dest+1)^0,c
  1367  000AC8  0E2C               	movlw	low _cadena
  1368  000ACA  6E42               	movwf	strcat@src^0,c
  1369  000ACC  0E00               	movlw	high _cadena
  1370  000ACE  6E43               	movwf	(strcat@src+1)^0,c
  1371  000AD0  ECC9  F00E         	call	_strcat	;wreg free
  1372  000AD4                     
  1373                           ;ADC.c: 200:  strcat( result,"," );
  1374  000AD4  0E60               	movlw	low _result
  1375  000AD6  6E40               	movwf	strcat@dest^0,c
  1376  000AD8  0E00               	movlw	high _result
  1377  000ADA  6E41               	movwf	(strcat@dest+1)^0,c
  1378  000ADC  0E10               	movlw	low STR_4
  1379  000ADE  6E42               	movwf	strcat@src^0,c
  1380  000AE0  0E08               	movlw	high STR_4
  1381  000AE2  6E43               	movwf	(strcat@src+1)^0,c
  1382  000AE4  ECC9  F00E         	call	_strcat	;wreg free
  1383  000AE8                     
  1384                           ;ADC.c: 201:  changeInt(Lectura3,cadena);
  1385  000AE8  C04C  F03A         	movff	Concat_Value@Lectura3,changeInt@value
  1386  000AEC  C04D  F03B         	movff	Concat_Value@Lectura3+1,changeInt@value+1
  1387  000AF0  0E2C               	movlw	low _cadena
  1388  000AF2  6E3C               	movwf	changeInt@str^0,c
  1389  000AF4  0E00               	movlw	high _cadena
  1390  000AF6  6E3D               	movwf	(changeInt@str+1)^0,c
  1391  000AF8  EC6F  F00A         	call	_changeInt	;wreg free
  1392                           
  1393                           ;ADC.c: 202:  strcat( result,cadena );
  1394  000AFC  0E60               	movlw	low _result
  1395  000AFE  6E40               	movwf	strcat@dest^0,c
  1396  000B00  0E00               	movlw	high _result
  1397  000B02  6E41               	movwf	(strcat@dest+1)^0,c
  1398  000B04  0E2C               	movlw	low _cadena
  1399  000B06  6E42               	movwf	strcat@src^0,c
  1400  000B08  0E00               	movlw	high _cadena
  1401  000B0A  6E43               	movwf	(strcat@src+1)^0,c
  1402  000B0C  ECC9  F00E         	call	_strcat	;wreg free
  1403                           
  1404                           ;ADC.c: 203:  strcat( result,"," );
  1405  000B10  0E60               	movlw	low _result
  1406  000B12  6E40               	movwf	strcat@dest^0,c
  1407  000B14  0E00               	movlw	high _result
  1408  000B16  6E41               	movwf	(strcat@dest+1)^0,c
  1409  000B18  0E10               	movlw	low STR_4
  1410  000B1A  6E42               	movwf	strcat@src^0,c
  1411  000B1C  0E08               	movlw	high STR_4
  1412  000B1E  6E43               	movwf	(strcat@src+1)^0,c
  1413  000B20  ECC9  F00E         	call	_strcat	;wreg free
  1414  000B24                     
  1415                           ;ADC.c: 204:  changeInt(Lectura4,cadena);
  1416  000B24  C04E  F03A         	movff	Concat_Value@Lectura4,changeInt@value
  1417  000B28  C04F  F03B         	movff	Concat_Value@Lectura4+1,changeInt@value+1
  1418  000B2C  0E2C               	movlw	low _cadena
  1419  000B2E  6E3C               	movwf	changeInt@str^0,c
  1420  000B30  0E00               	movlw	high _cadena
  1421  000B32  6E3D               	movwf	(changeInt@str+1)^0,c
  1422  000B34  EC6F  F00A         	call	_changeInt	;wreg free
  1423  000B38                     
  1424                           ;ADC.c: 205:  strcat( result,cadena );
  1425  000B38  0E60               	movlw	low _result
  1426  000B3A  6E40               	movwf	strcat@dest^0,c
  1427  000B3C  0E00               	movlw	high _result
  1428  000B3E  6E41               	movwf	(strcat@dest+1)^0,c
  1429  000B40  0E2C               	movlw	low _cadena
  1430  000B42  6E42               	movwf	strcat@src^0,c
  1431  000B44  0E00               	movlw	high _cadena
  1432  000B46  6E43               	movwf	(strcat@src+1)^0,c
  1433  000B48  ECC9  F00E         	call	_strcat	;wreg free
  1434  000B4C                     
  1435                           ;ADC.c: 206:  strcat( result,"," );
  1436  000B4C  0E60               	movlw	low _result
  1437  000B4E  6E40               	movwf	strcat@dest^0,c
  1438  000B50  0E00               	movlw	high _result
  1439  000B52  6E41               	movwf	(strcat@dest+1)^0,c
  1440  000B54  0E10               	movlw	low STR_4
  1441  000B56  6E42               	movwf	strcat@src^0,c
  1442  000B58  0E08               	movlw	high STR_4
  1443  000B5A  6E43               	movwf	(strcat@src+1)^0,c
  1444  000B5C  ECC9  F00E         	call	_strcat	;wreg free
  1445  000B60                     
  1446                           ;ADC.c: 207:  changeInt(Lectura5,cadena);
  1447  000B60  C050  F03A         	movff	Concat_Value@Lectura5,changeInt@value
  1448  000B64  C051  F03B         	movff	Concat_Value@Lectura5+1,changeInt@value+1
  1449  000B68  0E2C               	movlw	low _cadena
  1450  000B6A  6E3C               	movwf	changeInt@str^0,c
  1451  000B6C  0E00               	movlw	high _cadena
  1452  000B6E  6E3D               	movwf	(changeInt@str+1)^0,c
  1453  000B70  EC6F  F00A         	call	_changeInt	;wreg free
  1454                           
  1455                           ;ADC.c: 208:  strcat( result,cadena );
  1456  000B74  0E60               	movlw	low _result
  1457  000B76  6E40               	movwf	strcat@dest^0,c
  1458  000B78  0E00               	movlw	high _result
  1459  000B7A  6E41               	movwf	(strcat@dest+1)^0,c
  1460  000B7C  0E2C               	movlw	low _cadena
  1461  000B7E  6E42               	movwf	strcat@src^0,c
  1462  000B80  0E00               	movlw	high _cadena
  1463  000B82  6E43               	movwf	(strcat@src+1)^0,c
  1464  000B84  ECC9  F00E         	call	_strcat	;wreg free
  1465                           
  1466                           ;ADC.c: 209:  strcat( result,"," );
  1467  000B88  0E60               	movlw	low _result
  1468  000B8A  6E40               	movwf	strcat@dest^0,c
  1469  000B8C  0E00               	movlw	high _result
  1470  000B8E  6E41               	movwf	(strcat@dest+1)^0,c
  1471  000B90  0E10               	movlw	low STR_4
  1472  000B92  6E42               	movwf	strcat@src^0,c
  1473  000B94  0E08               	movlw	high STR_4
  1474  000B96  6E43               	movwf	(strcat@src+1)^0,c
  1475  000B98  ECC9  F00E         	call	_strcat	;wreg free
  1476  000B9C                     
  1477                           ;ADC.c: 210:  changeInt(Lectura6,cadena);
  1478  000B9C  C052  F03A         	movff	Concat_Value@Lectura6,changeInt@value
  1479  000BA0  C053  F03B         	movff	Concat_Value@Lectura6+1,changeInt@value+1
  1480  000BA4  0E2C               	movlw	low _cadena
  1481  000BA6  6E3C               	movwf	changeInt@str^0,c
  1482  000BA8  0E00               	movlw	high _cadena
  1483  000BAA  6E3D               	movwf	(changeInt@str+1)^0,c
  1484  000BAC  EC6F  F00A         	call	_changeInt	;wreg free
  1485  000BB0                     
  1486                           ;ADC.c: 211:  strcat( result,cadena );
  1487  000BB0  0E60               	movlw	low _result
  1488  000BB2  6E40               	movwf	strcat@dest^0,c
  1489  000BB4  0E00               	movlw	high _result
  1490  000BB6  6E41               	movwf	(strcat@dest+1)^0,c
  1491  000BB8  0E2C               	movlw	low _cadena
  1492  000BBA  6E42               	movwf	strcat@src^0,c
  1493  000BBC  0E00               	movlw	high _cadena
  1494  000BBE  6E43               	movwf	(strcat@src+1)^0,c
  1495  000BC0  ECC9  F00E         	call	_strcat	;wreg free
  1496  000BC4                     
  1497                           ;ADC.c: 212:  strcat( result,"," );
  1498  000BC4  0E60               	movlw	low _result
  1499  000BC6  6E40               	movwf	strcat@dest^0,c
  1500  000BC8  0E00               	movlw	high _result
  1501  000BCA  6E41               	movwf	(strcat@dest+1)^0,c
  1502  000BCC  0E10               	movlw	low STR_4
  1503  000BCE  6E42               	movwf	strcat@src^0,c
  1504  000BD0  0E08               	movlw	high STR_4
  1505  000BD2  6E43               	movwf	(strcat@src+1)^0,c
  1506  000BD4  ECC9  F00E         	call	_strcat	;wreg free
  1507  000BD8                     
  1508                           ;ADC.c: 213:  changeInt(Lectura7,cadena);
  1509  000BD8  C054  F03A         	movff	Concat_Value@Lectura7,changeInt@value
  1510  000BDC  C055  F03B         	movff	Concat_Value@Lectura7+1,changeInt@value+1
  1511  000BE0  0E2C               	movlw	low _cadena
  1512  000BE2  6E3C               	movwf	changeInt@str^0,c
  1513  000BE4  0E00               	movlw	high _cadena
  1514  000BE6  6E3D               	movwf	(changeInt@str+1)^0,c
  1515  000BE8  EC6F  F00A         	call	_changeInt	;wreg free
  1516                           
  1517                           ;ADC.c: 214:  strcat( result,cadena );
  1518  000BEC  0E60               	movlw	low _result
  1519  000BEE  6E40               	movwf	strcat@dest^0,c
  1520  000BF0  0E00               	movlw	high _result
  1521  000BF2  6E41               	movwf	(strcat@dest+1)^0,c
  1522  000BF4  0E2C               	movlw	low _cadena
  1523  000BF6  6E42               	movwf	strcat@src^0,c
  1524  000BF8  0E00               	movlw	high _cadena
  1525  000BFA  6E43               	movwf	(strcat@src+1)^0,c
  1526  000BFC  ECC9  F00E         	call	_strcat	;wreg free
  1527  000C00  0012               	return		;funcret
  1528  000C02                     __end_of_Concat_Value:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _strcat *****************
  1532 ;; Defined at:
  1533 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strcat.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  dest            2   14[COMRAM] PTR unsigned char 
  1536 ;;		 -> result(33), 
  1537 ;;  src             2   16[COMRAM] PTR const unsigned char 
  1538 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1539 ;;		 -> STR_6(2), STR_5(2), STR_4(2), cadena(4), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  2   14[COMRAM] PTR unsigned char 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1551 ;;      Params:         4       0       0       0       0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1554 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1555 ;;Total ram usage:        4 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 1
  1558 ;; This function calls:
  1559 ;;		_strcpy
  1560 ;;		_strlen
  1561 ;; This function is called by:
  1562 ;;		_Concat_Value
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text3
  1567  001D92                     __ptext3:
  1568                           	callstack 0
  1569  001D92                     _strcat:
  1570                           	callstack 27
  1571  001D92  C040  F032         	movff	strcat@dest,strlen@s
  1572  001D96  C041  F033         	movff	strcat@dest+1,strlen@s+1
  1573  001D9A  ECE4  F00D         	call	_strlen	;wreg free
  1574  001D9E  5032               	movf	?_strlen^0,w,c
  1575  001DA0  2440               	addwf	strcat@dest^0,w,c
  1576  001DA2  6E36               	movwf	strcpy@dest^0,c
  1577  001DA4  5033               	movf	(?_strlen+1)^0,w,c
  1578  001DA6  2041               	addwfc	(strcat@dest+1)^0,w,c
  1579  001DA8  6E37               	movwf	(strcpy@dest+1)^0,c
  1580  001DAA  C042  F038         	movff	strcat@src,strcpy@src
  1581  001DAE  C043  F039         	movff	strcat@src+1,strcpy@src+1
  1582  001DB2  EC9C  F00C         	call	_strcpy	;wreg free
  1583  001DB6  0012               	return		;funcret
  1584  001DB8                     __end_of_strcat:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _strcpy *****************
  1588 ;; Defined at:
  1589 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strcpy.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  dest            2    4[COMRAM] PTR unsigned char 
  1592 ;;		 -> result(33), 
  1593 ;;  src             2    6[COMRAM] PTR const unsigned char 
  1594 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1595 ;;		 -> STR_6(2), STR_5(2), STR_4(2), cadena(4), 
  1596 ;;		 -> STR_1(3), 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  d               2   12[COMRAM] PTR unsigned char 
  1599 ;;		 -> result(33), 
  1600 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1601 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1602 ;;		 -> STR_6(2), STR_5(2), STR_4(2), cadena(4), 
  1603 ;;		 -> STR_1(3), 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  2    4[COMRAM] PTR unsigned char 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1613 ;;      Params:         4       0       0       0       0       0       0       0       0
  1614 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1615 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1616 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1617 ;;Total ram usage:       10 bytes
  1618 ;; Hardware stack levels used: 1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_Concat_Value
  1623 ;;		_strcat
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text4
  1628  001938                     __ptext4:
  1629                           	callstack 0
  1630  001938                     _strcpy:
  1631                           	callstack 28
  1632  001938  C038  F03C         	movff	strcpy@src,strcpy@s
  1633  00193C  C039  F03D         	movff	strcpy@src+1,strcpy@s+1
  1634  001940  C036  F03E         	movff	strcpy@dest,strcpy@d
  1635  001944  C037  F03F         	movff	strcpy@dest+1,strcpy@d+1
  1636  001948                     l2407:
  1637  001948  503C               	movf	strcpy@s^0,w,c
  1638  00194A  6E3A               	movwf	??_strcpy^0,c
  1639  00194C  503D               	movf	(strcpy@s+1)^0,w,c
  1640  00194E  6E3B               	movwf	(??_strcpy+1)^0,c
  1641  001950  4A3C               	infsnz	strcpy@s^0,f,c
  1642  001952  2A3D               	incf	(strcpy@s+1)^0,f,c
  1643  001954  C03A  FFF6         	movff	??_strcpy,tblptrl
  1644  001958  C03B  FFF7         	movff	??_strcpy+1,tblptrh
  1645  00195C  6AF8               	clrf	tblptru,c
  1646  00195E  C03E  FFD9         	movff	strcpy@d,fsr2l
  1647  001962  C03F  FFDA         	movff	strcpy@d+1,fsr2h
  1648  001966  4A3E               	infsnz	strcpy@d^0,f,c
  1649  001968  2A3F               	incf	(strcpy@d+1)^0,f,c
  1650  00196A  0E07               	movlw	(high __ramtop+-1)
  1651  00196C  64F7               	cpfsgt	tblptrh,c
  1652  00196E  D003               	bra	u1107
  1653  001970  0008               	tblrd		*
  1654  001972  50F5               	movf	tablat,w,c
  1655  001974  D005               	bra	u1100
  1656  001976                     u1107:
  1657  001976  CFF6 FFE9          	movff	tblptrl,fsr0l
  1658  00197A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1659  00197E  50EF               	movf	indf0,w,c
  1660  001980                     u1100:
  1661  001980  6EDF               	movwf	indf2,c
  1662  001982  50DF               	movf	indf2,w,c
  1663  001984  A4D8               	btfss	status,2,c
  1664  001986  EFC7  F00C         	goto	u1111
  1665  00198A  EFC9  F00C         	goto	u1110
  1666  00198E                     u1111:
  1667  00198E  EFA4  F00C         	goto	l2407
  1668  001992                     u1110:
  1669  001992  0012               	return		;funcret
  1670  001994                     __end_of_strcpy:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _changeInt *****************
  1674 ;; Defined at:
  1675 ;;		line 173 in file "ADC.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  value           2    8[COMRAM] int 
  1678 ;;  str             2   10[COMRAM] PTR unsigned char 
  1679 ;;		 -> cadena(4), 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  res             4    0        struct .
  1682 ;;  wstr            2   14[COMRAM] PTR unsigned char 
  1683 ;;		 -> cadena(4), 
  1684 ;;  sign            2   12[COMRAM] int 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1694 ;;      Params:         4       0       0       0       0       0       0       0       0
  1695 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1697 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1698 ;;Total ram usage:        8 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 1
  1701 ;; This function calls:
  1702 ;;		___awdiv
  1703 ;;		___awmod
  1704 ;;		_strreverse
  1705 ;; This function is called by:
  1706 ;;		_Concat_Value
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text5
  1711  0014DE                     __ptext5:
  1712                           	callstack 0
  1713  0014DE                     _changeInt:
  1714                           	callstack 27
  1715  0014DE                     
  1716                           ;ADC.c: 173: void changeInt(int value, char *str);ADC.c: 174: {;ADC.c: 175:     char* ws
      +                          tr=str;
  1717  0014DE  C03C  F040         	movff	changeInt@str,changeInt@wstr
  1718  0014E2  C03D  F041         	movff	changeInt@str+1,changeInt@wstr+1
  1719                           
  1720                           ;ADC.c: 176:     int sign;;ADC.c: 177:     div_t res;;ADC.c: 179:     if ((sign=value) <
      +                           0) value = -value;
  1721  0014E6  C03A  F03E         	movff	changeInt@value,changeInt@sign
  1722  0014EA  C03B  F03F         	movff	changeInt@value+1,changeInt@sign+1
  1723  0014EE  BE3F               	btfsc	(changeInt@sign+1)^0,7,c
  1724  0014F0  EF7E  F00A         	goto	u1360
  1725  0014F4  EF7C  F00A         	goto	u1361
  1726  0014F8                     u1361:
  1727  0014F8  EF82  F00A         	goto	l2603
  1728  0014FC                     u1360:
  1729  0014FC  6C3A               	negf	changeInt@value^0,c
  1730  0014FE  1E3B               	comf	(changeInt@value+1)^0,f,c
  1731  001500  B0D8               	btfsc	status,0,c
  1732  001502  2A3B               	incf	(changeInt@value+1)^0,f,c
  1733  001504                     l2603:
  1734                           
  1735                           ;ADC.c: 182:       *wstr++ = (value%10)+'0';
  1736  001504  C03A  F032         	movff	changeInt@value,___awmod@dividend
  1737  001508  C03B  F033         	movff	changeInt@value+1,___awmod@dividend+1
  1738  00150C  0E00               	movlw	0
  1739  00150E  6E35               	movwf	(___awmod@divisor+1)^0,c
  1740  001510  0E0A               	movlw	10
  1741  001512  6E34               	movwf	___awmod@divisor^0,c
  1742  001514  ECCE  F00A         	call	___awmod	;wreg free
  1743  001518  5032               	movf	?___awmod^0,w,c
  1744  00151A  0F30               	addlw	48
  1745  00151C  C040  FFD9         	movff	changeInt@wstr,fsr2l
  1746  001520  C041  FFDA         	movff	changeInt@wstr+1,fsr2h
  1747  001524  6EDF               	movwf	indf2,c
  1748  001526  4A40               	infsnz	changeInt@wstr^0,f,c
  1749  001528  2A41               	incf	(changeInt@wstr+1)^0,f,c
  1750  00152A                     
  1751                           ;ADC.c: 183:     }while(value=value/10);
  1752  00152A  C03A  F032         	movff	changeInt@value,___awdiv@dividend
  1753  00152E  C03B  F033         	movff	changeInt@value+1,___awdiv@dividend+1
  1754  001532  0E00               	movlw	0
  1755  001534  6E35               	movwf	(___awdiv@divisor+1)^0,c
  1756  001536  0E0A               	movlw	10
  1757  001538  6E34               	movwf	___awdiv@divisor^0,c
  1758  00153A  EC0D  F00A         	call	___awdiv	;wreg free
  1759  00153E  C032  F03A         	movff	?___awdiv,changeInt@value
  1760  001542  C033  F03B         	movff	?___awdiv+1,changeInt@value+1
  1761  001546  503A               	movf	changeInt@value^0,w,c
  1762  001548  103B               	iorwf	(changeInt@value+1)^0,w,c
  1763  00154A  A4D8               	btfss	status,2,c
  1764  00154C  EFAA  F00A         	goto	u1371
  1765  001550  EFAC  F00A         	goto	u1370
  1766  001554                     u1371:
  1767  001554  EF82  F00A         	goto	l2603
  1768  001558                     u1370:
  1769  001558                     
  1770                           ;ADC.c: 185:     if(sign<0) *wstr++='-';
  1771  001558  BE3F               	btfsc	(changeInt@sign+1)^0,7,c
  1772  00155A  EFB3  F00A         	goto	u1380
  1773  00155E  EFB1  F00A         	goto	u1381
  1774  001562                     u1381:
  1775  001562  EFBB  F00A         	goto	l2615
  1776  001566                     u1380:
  1777  001566  C040  FFD9         	movff	changeInt@wstr,fsr2l
  1778  00156A  C041  FFDA         	movff	changeInt@wstr+1,fsr2h
  1779  00156E  0E2D               	movlw	45
  1780  001570  6EDF               	movwf	indf2,c
  1781  001572  4A40               	infsnz	changeInt@wstr^0,f,c
  1782  001574  2A41               	incf	(changeInt@wstr+1)^0,f,c
  1783  001576                     l2615:
  1784                           
  1785                           ;ADC.c: 186:     *wstr='\0';
  1786  001576  C040  FFD9         	movff	changeInt@wstr,fsr2l
  1787  00157A  C041  FFDA         	movff	changeInt@wstr+1,fsr2h
  1788  00157E  0E00               	movlw	0
  1789  001580  6EDF               	movwf	indf2,c
  1790  001582                     
  1791                           ;ADC.c: 188:     strreverse(str,wstr-1);
  1792  001582  C03C  F032         	movff	changeInt@str,strreverse@begin
  1793  001586  C03D  F033         	movff	changeInt@str+1,strreverse@begin+1
  1794  00158A  0EFF               	movlw	255
  1795  00158C  2440               	addwf	changeInt@wstr^0,w,c
  1796  00158E  6E34               	movwf	strreverse@end^0,c
  1797  001590  0EFF               	movlw	255
  1798  001592  2041               	addwfc	(changeInt@wstr+1)^0,w,c
  1799  001594  6E35               	movwf	(strreverse@end+1)^0,c
  1800  001596  ECCA  F00C         	call	_strreverse	;wreg free
  1801  00159A  0012               	return		;funcret
  1802  00159C                     __end_of_changeInt:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _strreverse *****************
  1806 ;; Defined at:
  1807 ;;		line 167 in file "ADC.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  begin           2    0[COMRAM] PTR unsigned char 
  1810 ;;		 -> cadena(4), 
  1811 ;;  end             2    2[COMRAM] PTR unsigned char 
  1812 ;;		 -> cadena(4), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  aux             1    4[COMRAM] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1824 ;;      Params:         4       0       0       0       0       0       0       0       0
  1825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1827 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1828 ;;Total ram usage:        5 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_changeInt
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text6
  1838  001994                     __ptext6:
  1839                           	callstack 0
  1840  001994                     _strreverse:
  1841                           	callstack 27
  1842  001994                     
  1843                           ;ADC.c: 167: void strreverse(char* begin, char* end);ADC.c: 168: {;ADC.c: 169:     char 
      +                          aux;;ADC.c: 170:     while(end>begin)
  1844  001994  EFE7  F00C         	goto	l2403
  1845  001998                     l2393:
  1846                           
  1847                           ;ADC.c: 171:         aux=*end, *end--=*begin, *begin++=aux;
  1848  001998  C034  FFD9         	movff	strreverse@end,fsr2l
  1849  00199C  C035  FFDA         	movff	strreverse@end+1,fsr2h
  1850  0019A0  50DF               	movf	indf2,w,c
  1851  0019A2  6E36               	movwf	strreverse@aux^0,c
  1852  0019A4  C032  FFD9         	movff	strreverse@begin,fsr2l
  1853  0019A8  C033  FFDA         	movff	strreverse@begin+1,fsr2h
  1854  0019AC  C034  FFE1         	movff	strreverse@end,fsr1l
  1855  0019B0  C035  FFE2         	movff	strreverse@end+1,fsr1h
  1856  0019B4  CFDF FFE7          	movff	indf2,indf1
  1857  0019B8  0634               	decf	strreverse@end^0,f,c
  1858  0019BA  A0D8               	btfss	status,0,c
  1859  0019BC  0635               	decf	(strreverse@end+1)^0,f,c
  1860  0019BE  C032  FFD9         	movff	strreverse@begin,fsr2l
  1861  0019C2  C033  FFDA         	movff	strreverse@begin+1,fsr2h
  1862  0019C6  C036  FFDF         	movff	strreverse@aux,indf2
  1863  0019CA  4A32               	infsnz	strreverse@begin^0,f,c
  1864  0019CC  2A33               	incf	(strreverse@begin+1)^0,f,c
  1865  0019CE                     l2403:
  1866                           
  1867                           ;ADC.c: 170:     while(end>begin)
  1868  0019CE  5034               	movf	strreverse@end^0,w,c
  1869  0019D0  5C32               	subwf	strreverse@begin^0,w,c
  1870  0019D2  5035               	movf	(strreverse@end+1)^0,w,c
  1871  0019D4  5833               	subwfb	(strreverse@begin+1)^0,w,c
  1872  0019D6  A0D8               	btfss	status,0,c
  1873  0019D8  EFF0  F00C         	goto	u1091
  1874  0019DC  EFF2  F00C         	goto	u1090
  1875  0019E0                     u1091:
  1876  0019E0  EFCC  F00C         	goto	l2393
  1877  0019E4                     u1090:
  1878  0019E4  0012               	return		;funcret
  1879  0019E6                     __end_of_strreverse:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function ___awmod *****************
  1883 ;; Defined at:
  1884 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awmod.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  dividend        2    0[COMRAM] int 
  1887 ;;  divisor         2    2[COMRAM] int 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  sign            1    5[COMRAM] unsigned char 
  1890 ;;  counter         1    4[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2    0[COMRAM] int 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1900 ;;      Params:         4       0       0       0       0       0       0       0       0
  1901 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1903 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1904 ;;Total ram usage:        6 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_changeInt
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text7
  1914  00159C                     __ptext7:
  1915                           	callstack 0
  1916  00159C                     ___awmod:
  1917                           	callstack 27
  1918  00159C  0E00               	movlw	0
  1919  00159E  6E37               	movwf	___awmod@sign^0,c
  1920  0015A0  BE33               	btfsc	(___awmod@dividend+1)^0,7,c
  1921  0015A2  EFD7  F00A         	goto	u1270
  1922  0015A6  EFD5  F00A         	goto	u1271
  1923  0015AA                     u1271:
  1924  0015AA  EFDD  F00A         	goto	l2521
  1925  0015AE                     u1270:
  1926  0015AE  6C32               	negf	___awmod@dividend^0,c
  1927  0015B0  1E33               	comf	(___awmod@dividend+1)^0,f,c
  1928  0015B2  B0D8               	btfsc	status,0,c
  1929  0015B4  2A33               	incf	(___awmod@dividend+1)^0,f,c
  1930  0015B6  0E01               	movlw	1
  1931  0015B8  6E37               	movwf	___awmod@sign^0,c
  1932  0015BA                     l2521:
  1933  0015BA  BE35               	btfsc	(___awmod@divisor+1)^0,7,c
  1934  0015BC  EFE4  F00A         	goto	u1280
  1935  0015C0  EFE2  F00A         	goto	u1281
  1936  0015C4                     u1281:
  1937  0015C4  EFE8  F00A         	goto	l2525
  1938  0015C8                     u1280:
  1939  0015C8  6C34               	negf	___awmod@divisor^0,c
  1940  0015CA  1E35               	comf	(___awmod@divisor+1)^0,f,c
  1941  0015CC  B0D8               	btfsc	status,0,c
  1942  0015CE  2A35               	incf	(___awmod@divisor+1)^0,f,c
  1943  0015D0                     l2525:
  1944  0015D0  5034               	movf	___awmod@divisor^0,w,c
  1945  0015D2  1035               	iorwf	(___awmod@divisor+1)^0,w,c
  1946  0015D4  B4D8               	btfsc	status,2,c
  1947  0015D6  EFEF  F00A         	goto	u1291
  1948  0015DA  EFF1  F00A         	goto	u1290
  1949  0015DE                     u1291:
  1950  0015DE  EF15  F00B         	goto	l2541
  1951  0015E2                     u1290:
  1952  0015E2  0E01               	movlw	1
  1953  0015E4  6E36               	movwf	___awmod@counter^0,c
  1954  0015E6  EFF9  F00A         	goto	l2531
  1955  0015EA                     l2529:
  1956  0015EA  90D8               	bcf	status,0,c
  1957  0015EC  3634               	rlcf	___awmod@divisor^0,f,c
  1958  0015EE  3635               	rlcf	(___awmod@divisor+1)^0,f,c
  1959  0015F0  2A36               	incf	___awmod@counter^0,f,c
  1960  0015F2                     l2531:
  1961  0015F2  AE35               	btfss	(___awmod@divisor+1)^0,7,c
  1962  0015F4  EFFE  F00A         	goto	u1301
  1963  0015F8  EF00  F00B         	goto	u1300
  1964  0015FC                     u1301:
  1965  0015FC  EFF5  F00A         	goto	l2529
  1966  001600                     u1300:
  1967  001600                     l2533:
  1968  001600  5034               	movf	___awmod@divisor^0,w,c
  1969  001602  5C32               	subwf	___awmod@dividend^0,w,c
  1970  001604  5035               	movf	(___awmod@divisor+1)^0,w,c
  1971  001606  5833               	subwfb	(___awmod@dividend+1)^0,w,c
  1972  001608  A0D8               	btfss	status,0,c
  1973  00160A  EF09  F00B         	goto	u1311
  1974  00160E  EF0B  F00B         	goto	u1310
  1975  001612                     u1311:
  1976  001612  EF0F  F00B         	goto	l2537
  1977  001616                     u1310:
  1978  001616  5034               	movf	___awmod@divisor^0,w,c
  1979  001618  5E32               	subwf	___awmod@dividend^0,f,c
  1980  00161A  5035               	movf	(___awmod@divisor+1)^0,w,c
  1981  00161C  5A33               	subwfb	(___awmod@dividend+1)^0,f,c
  1982  00161E                     l2537:
  1983  00161E  90D8               	bcf	status,0,c
  1984  001620  3235               	rrcf	(___awmod@divisor+1)^0,f,c
  1985  001622  3234               	rrcf	___awmod@divisor^0,f,c
  1986  001624  2E36               	decfsz	___awmod@counter^0,f,c
  1987  001626  EF00  F00B         	goto	l2533
  1988  00162A                     l2541:
  1989  00162A  5037               	movf	___awmod@sign^0,w,c
  1990  00162C  B4D8               	btfsc	status,2,c
  1991  00162E  EF1B  F00B         	goto	u1321
  1992  001632  EF1D  F00B         	goto	u1320
  1993  001636                     u1321:
  1994  001636  EF21  F00B         	goto	l2545
  1995  00163A                     u1320:
  1996  00163A  6C32               	negf	___awmod@dividend^0,c
  1997  00163C  1E33               	comf	(___awmod@dividend+1)^0,f,c
  1998  00163E  B0D8               	btfsc	status,0,c
  1999  001640  2A33               	incf	(___awmod@dividend+1)^0,f,c
  2000  001642                     l2545:
  2001  001642  C032  F032         	movff	___awmod@dividend,?___awmod
  2002  001646  C033  F033         	movff	___awmod@dividend+1,?___awmod+1
  2003  00164A  0012               	return		;funcret
  2004  00164C                     __end_of___awmod:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function ___awdiv *****************
  2008 ;; Defined at:
  2009 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  dividend        2    0[COMRAM] int 
  2012 ;;  divisor         2    2[COMRAM] int 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  quotient        2    6[COMRAM] int 
  2015 ;;  sign            1    5[COMRAM] unsigned char 
  2016 ;;  counter         1    4[COMRAM] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  2    0[COMRAM] int 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2026 ;;      Params:         4       0       0       0       0       0       0       0       0
  2027 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2029 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2030 ;;Total ram usage:        8 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_changeInt
  2036 ;;		_ADC_Lectura_Sensores
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text8
  2041  00141A                     __ptext8:
  2042                           	callstack 0
  2043  00141A                     ___awdiv:
  2044                           	callstack 27
  2045  00141A  0E00               	movlw	0
  2046  00141C  6E37               	movwf	___awdiv@sign^0,c
  2047  00141E  BE35               	btfsc	(___awdiv@divisor+1)^0,7,c
  2048  001420  EF16  F00A         	goto	u1210
  2049  001424  EF14  F00A         	goto	u1211
  2050  001428                     u1211:
  2051  001428  EF1C  F00A         	goto	l2477
  2052  00142C                     u1210:
  2053  00142C  6C34               	negf	___awdiv@divisor^0,c
  2054  00142E  1E35               	comf	(___awdiv@divisor+1)^0,f,c
  2055  001430  B0D8               	btfsc	status,0,c
  2056  001432  2A35               	incf	(___awdiv@divisor+1)^0,f,c
  2057  001434  0E01               	movlw	1
  2058  001436  6E37               	movwf	___awdiv@sign^0,c
  2059  001438                     l2477:
  2060  001438  BE33               	btfsc	(___awdiv@dividend+1)^0,7,c
  2061  00143A  EF23  F00A         	goto	u1220
  2062  00143E  EF21  F00A         	goto	u1221
  2063  001442                     u1221:
  2064  001442  EF29  F00A         	goto	l2483
  2065  001446                     u1220:
  2066  001446  6C32               	negf	___awdiv@dividend^0,c
  2067  001448  1E33               	comf	(___awdiv@dividend+1)^0,f,c
  2068  00144A  B0D8               	btfsc	status,0,c
  2069  00144C  2A33               	incf	(___awdiv@dividend+1)^0,f,c
  2070  00144E  0E01               	movlw	1
  2071  001450  1A37               	xorwf	___awdiv@sign^0,f,c
  2072  001452                     l2483:
  2073  001452  0E00               	movlw	0
  2074  001454  6E39               	movwf	(___awdiv@quotient+1)^0,c
  2075  001456  0E00               	movlw	0
  2076  001458  6E38               	movwf	___awdiv@quotient^0,c
  2077  00145A  5034               	movf	___awdiv@divisor^0,w,c
  2078  00145C  1035               	iorwf	(___awdiv@divisor+1)^0,w,c
  2079  00145E  B4D8               	btfsc	status,2,c
  2080  001460  EF34  F00A         	goto	u1231
  2081  001464  EF36  F00A         	goto	u1230
  2082  001468                     u1231:
  2083  001468  EF5E  F00A         	goto	l2505
  2084  00146C                     u1230:
  2085  00146C  0E01               	movlw	1
  2086  00146E  6E36               	movwf	___awdiv@counter^0,c
  2087  001470  EF3E  F00A         	goto	l2491
  2088  001474                     l2489:
  2089  001474  90D8               	bcf	status,0,c
  2090  001476  3634               	rlcf	___awdiv@divisor^0,f,c
  2091  001478  3635               	rlcf	(___awdiv@divisor+1)^0,f,c
  2092  00147A  2A36               	incf	___awdiv@counter^0,f,c
  2093  00147C                     l2491:
  2094  00147C  AE35               	btfss	(___awdiv@divisor+1)^0,7,c
  2095  00147E  EF43  F00A         	goto	u1241
  2096  001482  EF45  F00A         	goto	u1240
  2097  001486                     u1241:
  2098  001486  EF3A  F00A         	goto	l2489
  2099  00148A                     u1240:
  2100  00148A                     l2493:
  2101  00148A  90D8               	bcf	status,0,c
  2102  00148C  3638               	rlcf	___awdiv@quotient^0,f,c
  2103  00148E  3639               	rlcf	(___awdiv@quotient+1)^0,f,c
  2104  001490  5034               	movf	___awdiv@divisor^0,w,c
  2105  001492  5C32               	subwf	___awdiv@dividend^0,w,c
  2106  001494  5035               	movf	(___awdiv@divisor+1)^0,w,c
  2107  001496  5833               	subwfb	(___awdiv@dividend+1)^0,w,c
  2108  001498  A0D8               	btfss	status,0,c
  2109  00149A  EF51  F00A         	goto	u1251
  2110  00149E  EF53  F00A         	goto	u1250
  2111  0014A2                     u1251:
  2112  0014A2  EF58  F00A         	goto	l2501
  2113  0014A6                     u1250:
  2114  0014A6  5034               	movf	___awdiv@divisor^0,w,c
  2115  0014A8  5E32               	subwf	___awdiv@dividend^0,f,c
  2116  0014AA  5035               	movf	(___awdiv@divisor+1)^0,w,c
  2117  0014AC  5A33               	subwfb	(___awdiv@dividend+1)^0,f,c
  2118  0014AE  8038               	bsf	___awdiv@quotient^0,0,c
  2119  0014B0                     l2501:
  2120  0014B0  90D8               	bcf	status,0,c
  2121  0014B2  3235               	rrcf	(___awdiv@divisor+1)^0,f,c
  2122  0014B4  3234               	rrcf	___awdiv@divisor^0,f,c
  2123  0014B6  2E36               	decfsz	___awdiv@counter^0,f,c
  2124  0014B8  EF45  F00A         	goto	l2493
  2125  0014BC                     l2505:
  2126  0014BC  5037               	movf	___awdiv@sign^0,w,c
  2127  0014BE  B4D8               	btfsc	status,2,c
  2128  0014C0  EF64  F00A         	goto	u1261
  2129  0014C4  EF66  F00A         	goto	u1260
  2130  0014C8                     u1261:
  2131  0014C8  EF6A  F00A         	goto	l2509
  2132  0014CC                     u1260:
  2133  0014CC  6C38               	negf	___awdiv@quotient^0,c
  2134  0014CE  1E39               	comf	(___awdiv@quotient+1)^0,f,c
  2135  0014D0  B0D8               	btfsc	status,0,c
  2136  0014D2  2A39               	incf	(___awdiv@quotient+1)^0,f,c
  2137  0014D4                     l2509:
  2138  0014D4  C038  F032         	movff	___awdiv@quotient,?___awdiv
  2139  0014D8  C039  F033         	movff	___awdiv@quotient+1,?___awdiv+1
  2140  0014DC  0012               	return		;funcret
  2141  0014DE                     __end_of___awdiv:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _ADC_LecturaFiltro *****************
  2145 ;; Defined at:
  2146 ;;		line 128 in file "ADC.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  n               2   14[COMRAM] int 
  2149 ;;  Canal           1   16[COMRAM] unsigned char 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  i               2   23[COMRAM] int 
  2152 ;;  lectura         2   21[COMRAM] int 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2   14[COMRAM] int 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2162 ;;      Params:         3       0       0       0       0       0       0       0       0
  2163 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2164 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2165 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2166 ;;Total ram usage:       11 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 1
  2169 ;; This function calls:
  2170 ;;		_Leer_Canal_ADC
  2171 ;;		___aldiv
  2172 ;; This function is called by:
  2173 ;;		_Run_Protocol
  2174 ;;		_Calibration_Auto
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text9
  2179  0016FC                     __ptext9:
  2180                           	callstack 0
  2181  0016FC                     _ADC_LecturaFiltro:
  2182                           	callstack 28
  2183  0016FC                     
  2184                           ;ADC.c: 130:     Suma = 0;
  2185  0016FC  0E00               	movlw	0
  2186  0016FE  6E01               	movwf	_Suma^0,c
  2187  001700  0E00               	movlw	0
  2188  001702  6E02               	movwf	(_Suma+1)^0,c
  2189  001704  0E00               	movlw	0
  2190  001706  6E03               	movwf	(_Suma+2)^0,c
  2191  001708  0E00               	movlw	0
  2192  00170A  6E04               	movwf	(_Suma+3)^0,c
  2193                           
  2194                           ;ADC.c: 131:     for (int i = 0; i < n; i++) {
  2195  00170C  0E00               	movlw	0
  2196  00170E  6E4A               	movwf	(ADC_LecturaFiltro@i+1)^0,c
  2197  001710  0E00               	movlw	0
  2198  001712  6E49               	movwf	ADC_LecturaFiltro@i^0,c
  2199  001714  EFAA  F00B         	goto	l2741
  2200  001718                     l2735:
  2201                           
  2202                           ;ADC.c: 132:         lectura=Leer_Canal_ADC(Canal);
  2203  001718  5042               	movf	ADC_LecturaFiltro@Canal^0,w,c
  2204  00171A  EC73  F00E         	call	_Leer_Canal_ADC
  2205  00171E  C032  F047         	movff	?_Leer_Canal_ADC,ADC_LecturaFiltro@lectura
  2206  001722  C033  F048         	movff	?_Leer_Canal_ADC+1,ADC_LecturaFiltro@lectura+1
  2207  001726                     
  2208                           ;ADC.c: 134:         Suma = Suma + lectura;
  2209  001726  C047  F043         	movff	ADC_LecturaFiltro@lectura,??_ADC_LecturaFiltro
  2210  00172A  C048  F044         	movff	ADC_LecturaFiltro@lectura+1,??_ADC_LecturaFiltro+1
  2211  00172E  0E00               	movlw	0
  2212  001730  BE44               	btfsc	(??_ADC_LecturaFiltro+1)^0,7,c
  2213  001732  0EFF               	movlw	255
  2214  001734  6E45               	movwf	(??_ADC_LecturaFiltro+2)^0,c
  2215  001736  6E46               	movwf	(??_ADC_LecturaFiltro+3)^0,c
  2216  001738  5001               	movf	_Suma^0,w,c
  2217  00173A  2443               	addwf	??_ADC_LecturaFiltro^0,w,c
  2218  00173C  6E01               	movwf	_Suma^0,c
  2219  00173E  5002               	movf	(_Suma+1)^0,w,c
  2220  001740  2044               	addwfc	(??_ADC_LecturaFiltro+1)^0,w,c
  2221  001742  6E02               	movwf	(_Suma+1)^0,c
  2222  001744  5003               	movf	(_Suma+2)^0,w,c
  2223  001746  2045               	addwfc	(??_ADC_LecturaFiltro+2)^0,w,c
  2224  001748  6E03               	movwf	(_Suma+2)^0,c
  2225  00174A  5004               	movf	(_Suma+3)^0,w,c
  2226  00174C  2046               	addwfc	(??_ADC_LecturaFiltro+3)^0,w,c
  2227  00174E  6E04               	movwf	(_Suma+3)^0,c
  2228  001750                     
  2229                           ;ADC.c: 136:     }
  2230  001750  4A49               	infsnz	ADC_LecturaFiltro@i^0,f,c
  2231  001752  2A4A               	incf	(ADC_LecturaFiltro@i+1)^0,f,c
  2232  001754                     l2741:
  2233  001754  5040               	movf	ADC_LecturaFiltro@n^0,w,c
  2234  001756  5C49               	subwf	ADC_LecturaFiltro@i^0,w,c
  2235  001758  504A               	movf	(ADC_LecturaFiltro@i+1)^0,w,c
  2236  00175A  0A80               	xorlw	128
  2237  00175C  6E43               	movwf	??_ADC_LecturaFiltro^0,c
  2238  00175E  5041               	movf	(ADC_LecturaFiltro@n+1)^0,w,c
  2239  001760  0A80               	xorlw	128
  2240  001762  5843               	subwfb	??_ADC_LecturaFiltro^0,w,c
  2241  001764  A0D8               	btfss	status,0,c
  2242  001766  EFB7  F00B         	goto	u1511
  2243  00176A  EFB9  F00B         	goto	u1510
  2244  00176E                     u1511:
  2245  00176E  EF8C  F00B         	goto	l2735
  2246  001772                     u1510:
  2247  001772                     
  2248                           ;ADC.c: 137:     return (Suma / n);
  2249  001772  C001  F032         	movff	_Suma,___aldiv@dividend
  2250  001776  C002  F033         	movff	_Suma+1,___aldiv@dividend+1
  2251  00177A  C003  F034         	movff	_Suma+2,___aldiv@dividend+2
  2252  00177E  C004  F035         	movff	_Suma+3,___aldiv@dividend+3
  2253  001782  C040  F036         	movff	ADC_LecturaFiltro@n,___aldiv@divisor
  2254  001786  C041  F037         	movff	ADC_LecturaFiltro@n+1,___aldiv@divisor+1
  2255  00178A  0E00               	movlw	0
  2256  00178C  BE37               	btfsc	(___aldiv@divisor+1)^0,7,c
  2257  00178E  0EFF               	movlw	-1
  2258  001790  6E38               	movwf	(___aldiv@divisor+2)^0,c
  2259  001792  6E39               	movwf	(___aldiv@divisor+3)^0,c
  2260  001794  EC96  F008         	call	___aldiv	;wreg free
  2261  001798  C032  F040         	movff	?___aldiv,?_ADC_LecturaFiltro
  2262  00179C  C033  F041         	movff	?___aldiv+1,?_ADC_LecturaFiltro+1
  2263  0017A0  0012               	return		;funcret
  2264  0017A2                     __end_of_ADC_LecturaFiltro:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _Leer_Canal_ADC *****************
  2268 ;; Defined at:
  2269 ;;		line 87 in file "ADC.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  Canal           1    wreg     unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  Canal           1    3[COMRAM] unsigned char 
  2274 ;;  ADC             2    4[COMRAM] int 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2    0[COMRAM] int 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2284 ;;      Params:         2       0       0       0       0       0       0       0       0
  2285 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2286 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2287 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2288 ;;Total ram usage:        6 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_ADC_LecturaFiltro
  2294 ;;		_ADC_Lectura_Sensores
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text10
  2299  001CE6                     __ptext10:
  2300                           	callstack 0
  2301  001CE6                     _Leer_Canal_ADC:
  2302                           	callstack 28
  2303                           
  2304                           ;incstack = 0
  2305                           ;Leer_Canal_ADC@Canal stored from wreg
  2306  001CE6  6E35               	movwf	Leer_Canal_ADC@Canal^0,c
  2307  001CE8                     
  2308                           ;ADC.c: 87: int Leer_Canal_ADC(uint8_t Canal);ADC.c: 88: {;ADC.c: 89:     int ADC;;ADC.c
      +                          : 90:     ADCON0bits.CHS=Canal;
  2309  001CE8  C035  F034         	movff	Leer_Canal_ADC@Canal,??_Leer_Canal_ADC
  2310  001CEC  4634               	rlncf	??_Leer_Canal_ADC^0,f,c
  2311  001CEE  4634               	rlncf	??_Leer_Canal_ADC^0,f,c
  2312  001CF0  50C2               	movf	194,w,c	;volatile
  2313  001CF2  1834               	xorwf	??_Leer_Canal_ADC^0,w,c
  2314  001CF4  0BC3               	andlw	-61
  2315  001CF6  1834               	xorwf	??_Leer_Canal_ADC^0,w,c
  2316  001CF8  6EC2               	movwf	194,c	;volatile
  2317  001CFA                     
  2318                           ;ADC.c: 107:     ADCON0bits.ADON=1;
  2319  001CFA  80C2               	bsf	194,0,c	;volatile
  2320  001CFC                     
  2321                           ;ADC.c: 108:     ADCON0bits.GO_DONE=1;
  2322  001CFC  82C2               	bsf	194,1,c	;volatile
  2323  001CFE                     l168:
  2324  001CFE  B2C2               	btfsc	194,1,c	;volatile
  2325  001D00  EF84  F00E         	goto	u1351
  2326  001D04  EF86  F00E         	goto	u1350
  2327  001D08                     u1351:
  2328  001D08  EF7F  F00E         	goto	l168
  2329  001D0C                     u1350:
  2330  001D0C                     
  2331                           ;ADC.c: 110:     ADCON0bits.ADON=0;
  2332  001D0C  90C2               	bcf	194,0,c	;volatile
  2333                           
  2334                           ;ADC.c: 111:     ADC=ADRESH;
  2335  001D0E  CFC4 F036          	movff	4036,Leer_Canal_ADC@ADC	;volatile
  2336  001D12  6A37               	clrf	(Leer_Canal_ADC@ADC+1)^0,c
  2337  001D14                     
  2338                           ;ADC.c: 112:     ADC=ADC<<8;
  2339  001D14  5036               	movf	Leer_Canal_ADC@ADC^0,w,c
  2340  001D16  6E37               	movwf	(Leer_Canal_ADC@ADC+1)^0,c
  2341  001D18  6A36               	clrf	Leer_Canal_ADC@ADC^0,c
  2342  001D1A                     
  2343                           ;ADC.c: 113:     ADC|=ADRESL;
  2344  001D1A  50C3               	movf	195,w,c	;volatile
  2345  001D1C  1236               	iorwf	Leer_Canal_ADC@ADC^0,f,c
  2346  001D1E                     
  2347                           ;ADC.c: 115:     return ADC;
  2348  001D1E  C036  F032         	movff	Leer_Canal_ADC@ADC,?_Leer_Canal_ADC
  2349  001D22  C037  F033         	movff	Leer_Canal_ADC@ADC+1,?_Leer_Canal_ADC+1
  2350  001D26  0012               	return		;funcret
  2351  001D28                     __end_of_Leer_Canal_ADC:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _Pot_Set_Vref *****************
  2355 ;; Defined at:
  2356 ;;		line 155 in file "Pot.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  amount          1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  amount          1    9[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0
  2371 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2373 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2374 ;;Total ram usage:        1 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; Hardware stack levels required when called: 4
  2377 ;; This function calls:
  2378 ;;		_Pot_Increase_Vref
  2379 ;;		_Pot_Reset_Vref
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;;		_Checar_PCB
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text11
  2387  001E64                     __ptext11:
  2388                           	callstack 0
  2389  001E64                     _Pot_Set_Vref:
  2390                           	callstack 26
  2391                           
  2392                           ;incstack = 0
  2393                           ;Pot_Set_Vref@amount stored from wreg
  2394  001E64  6E3B               	movwf	Pot_Set_Vref@amount^0,c
  2395  001E66                     
  2396                           ;Pot.c: 156:    Pot_Reset_Vref();
  2397  001E66  EC4E  F00F         	call	_Pot_Reset_Vref	;wreg free
  2398                           
  2399                           ;Pot.c: 157:    Pot_Increase_Vref(amount);
  2400  001E6A  503B               	movf	Pot_Set_Vref@amount^0,w,c
  2401  001E6C  EC40  F00F         	call	_Pot_Increase_Vref
  2402  001E70  0012               	return		;funcret
  2403  001E72                     __end_of_Pot_Set_Vref:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _Pot_Reset_Vref *****************
  2407 ;; Defined at:
  2408 ;;		line 140 in file "Pot.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 3
  2429 ;; This function calls:
  2430 ;;		_Pot_Decrease_Vref
  2431 ;; This function is called by:
  2432 ;;		_Pot_Set_Vref
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text12
  2437  001E9C                     __ptext12:
  2438                           	callstack 0
  2439  001E9C                     _Pot_Reset_Vref:
  2440                           	callstack 26
  2441  001E9C                     
  2442                           ;Pot.c: 141:     Pot_Decrease_Vref(99);
  2443  001E9C  0E63               	movlw	99
  2444  001E9E  EC39  F00F         	call	_Pot_Decrease_Vref
  2445  001EA2  0012               	return		;funcret
  2446  001EA4                     __end_of_Pot_Reset_Vref:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _Pot_Decrease_Vref *****************
  2450 ;; Defined at:
  2451 ;;		line 137 in file "Pot.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  amount          1    wreg     unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  amount          1    8[COMRAM] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2465 ;;      Params:         0       0       0       0       0       0       0       0       0
  2466 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2468 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2469 ;;Total ram usage:        1 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 2
  2472 ;; This function calls:
  2473 ;;		_Pot_Change_Vref
  2474 ;; This function is called by:
  2475 ;;		_Pot_Reset_Vref
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text13
  2480  001E72                     __ptext13:
  2481                           	callstack 0
  2482  001E72                     _Pot_Decrease_Vref:
  2483                           	callstack 26
  2484                           
  2485                           ;incstack = 0
  2486                           ;Pot_Decrease_Vref@amount stored from wreg
  2487  001E72  6E3A               	movwf	Pot_Decrease_Vref@amount^0,c
  2488  001E74                     
  2489                           ;Pot.c: 138:     Pot_Change_Vref(0, amount);
  2490  001E74  C03A  F036         	movff	Pot_Decrease_Vref@amount,Pot_Change_Vref@amount
  2491  001E78  0E00               	movlw	0
  2492  001E7A  ECF3  F00C         	call	_Pot_Change_Vref
  2493  001E7E  0012               	return		;funcret
  2494  001E80                     __end_of_Pot_Decrease_Vref:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _Pot_Increase_Vref *****************
  2498 ;; Defined at:
  2499 ;;		line 134 in file "Pot.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  amount          1    wreg     unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  amount          1    8[COMRAM] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0
  2514 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2516 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2517 ;;Total ram usage:        1 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 2
  2520 ;; This function calls:
  2521 ;;		_Pot_Change_Vref
  2522 ;; This function is called by:
  2523 ;;		_Pot_Set_Vref
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text14
  2528  001E80                     __ptext14:
  2529                           	callstack 0
  2530  001E80                     _Pot_Increase_Vref:
  2531                           	callstack 27
  2532                           
  2533                           ;incstack = 0
  2534                           ;Pot_Increase_Vref@amount stored from wreg
  2535  001E80  6E3A               	movwf	Pot_Increase_Vref@amount^0,c
  2536  001E82                     
  2537                           ;Pot.c: 135:     Pot_Change_Vref(1, amount);
  2538  001E82  C03A  F036         	movff	Pot_Increase_Vref@amount,Pot_Change_Vref@amount
  2539  001E86  0E01               	movlw	1
  2540  001E88  ECF3  F00C         	call	_Pot_Change_Vref
  2541  001E8C  0012               	return		;funcret
  2542  001E8E                     __end_of_Pot_Increase_Vref:
  2543                           	callstack 0
  2544                           
  2545 ;; *************** function _Pot_Change_Vref *****************
  2546 ;; Defined at:
  2547 ;;		line 143 in file "Pot.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  direction       1    wreg     _Bool 
  2550 ;;  amount          1    4[COMRAM] unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  direction       1    6[COMRAM] _Bool 
  2553 ;;  i               1    7[COMRAM] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2563 ;;      Params:         1       0       0       0       0       0       0       0       0
  2564 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2565 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2566 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2567 ;;Total ram usage:        4 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 1
  2570 ;; This function calls:
  2571 ;;		_Pot_Selector
  2572 ;; This function is called by:
  2573 ;;		_Pot_Increase_Vref
  2574 ;;		_Pot_Decrease_Vref
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text15
  2579  0019E6                     __ptext15:
  2580                           	callstack 0
  2581  0019E6                     _Pot_Change_Vref:
  2582                           	callstack 26
  2583                           
  2584                           ;incstack = 0
  2585                           ;Pot_Change_Vref@direction stored from wreg
  2586  0019E6  6E38               	movwf	Pot_Change_Vref@direction^0,c
  2587  0019E8                     
  2588                           ;Pot.c: 144:     LATBbits.LATB7 = direction;
  2589  0019E8  B038               	btfsc	Pot_Change_Vref@direction^0,0,c
  2590  0019EA  D002               	bra	u1195
  2591  0019EC  9E8A               	bcf	138,7,c	;volatile
  2592  0019EE  D001               	bra	u1196
  2593  0019F0                     u1195:
  2594  0019F0  8E8A               	bsf	138,7,c	;volatile
  2595  0019F2                     u1196:
  2596  0019F2  888A               	bsf	138,4,c	;volatile
  2597  0019F4                     
  2598                           ;Pot.c: 146:     Pot_Selector(8,0);
  2599  0019F4  0E00               	movlw	0
  2600  0019F6  6E32               	movwf	Pot_Selector@status^0,c
  2601  0019F8  0E08               	movlw	8
  2602  0019FA  EC1C  F009         	call	_Pot_Selector
  2603  0019FE                     
  2604                           ;Pot.c: 147:     for (uint8_t i=0; i<amount; i++) {
  2605  0019FE  0E00               	movlw	0
  2606  001A00  6E39               	movwf	Pot_Change_Vref@i^0,c
  2607  001A02  EF0D  F00D         	goto	l567
  2608  001A06                     l569:
  2609  001A06  988A               	bcf	138,4,c	;volatile
  2610  001A08                     
  2611                           ;Pot.c: 149:         _delay((unsigned long)((5)*(8000000/4000.0)));
  2612  001A08  0E0D               	movlw	13
  2613  001A0A  6E37               	movwf	??_Pot_Change_Vref^0,c
  2614  001A0C  0EFC               	movlw	252
  2615  001A0E                     u1867:
  2616  001A0E  2EE8               	decfsz	wreg,f,c
  2617  001A10  D7FE               	bra	u1867
  2618  001A12  2E37               	decfsz	??_Pot_Change_Vref^0,f,c
  2619  001A14  D7FC               	bra	u1867
  2620  001A16  888A               	bsf	138,4,c	;volatile
  2621  001A18                     
  2622                           ;Pot.c: 152:     }
  2623  001A18  2A39               	incf	Pot_Change_Vref@i^0,f,c
  2624  001A1A                     l567:
  2625  001A1A  5036               	movf	Pot_Change_Vref@amount^0,w,c
  2626  001A1C  5C39               	subwf	Pot_Change_Vref@i^0,w,c
  2627  001A1E  A0D8               	btfss	status,0,c
  2628  001A20  EF14  F00D         	goto	u1201
  2629  001A24  EF16  F00D         	goto	u1200
  2630  001A28                     u1201:
  2631  001A28  EF03  F00D         	goto	l569
  2632  001A2C                     u1200:
  2633  001A2C                     
  2634                           ;Pot.c: 153:     Pot_Selector(8,1);
  2635  001A2C  0E01               	movlw	1
  2636  001A2E  6E32               	movwf	Pot_Selector@status^0,c
  2637  001A30  0E08               	movlw	8
  2638  001A32  EC1C  F009         	call	_Pot_Selector
  2639  001A36  0012               	return		;funcret
  2640  001A38                     __end_of_Pot_Change_Vref:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _InitPort *****************
  2644 ;; Defined at:
  2645 ;;		line 28 in file "newmain.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2662 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2663 ;;Total ram usage:        0 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 2
  2666 ;; This function calls:
  2667 ;;		_ADC_Init
  2668 ;;		_Calibration_Init
  2669 ;;		_USART_Init
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text16
  2676  001C5E                     __ptext16:
  2677                           	callstack 0
  2678  001C5E                     _InitPort:
  2679                           	callstack 28
  2680  001C5E                     
  2681                           ;newmain.c: 30:  OSCCON=0x72;
  2682  001C5E  0E72               	movlw	114
  2683  001C60  6ED3               	movwf	211,c	;volatile
  2684  001C62                     
  2685                           ;newmain.c: 31:  USART_Init(9600);
  2686  001C62  0E80               	movlw	128
  2687  001C64  6E40               	movwf	USART_Init@BAUD^0,c
  2688  001C66  0E25               	movlw	37
  2689  001C68  6E41               	movwf	(USART_Init@BAUD+1)^0,c
  2690  001C6A  0E00               	movlw	0
  2691  001C6C  6E42               	movwf	(USART_Init@BAUD+2)^0,c
  2692  001C6E  0E00               	movlw	0
  2693  001C70  6E43               	movwf	(USART_Init@BAUD+3)^0,c
  2694  001C72  EC64  F00C         	call	_USART_Init	;wreg free
  2695  001C76                     
  2696                           ;newmain.c: 32:  LATB=0;
  2697  001C76  0E00               	movlw	0
  2698  001C78  6E8A               	movwf	138,c	;volatile
  2699  001C7A                     
  2700                           ;newmain.c: 33:  LATE=0;
  2701  001C7A  0E00               	movlw	0
  2702  001C7C  6E8D               	movwf	141,c	;volatile
  2703  001C7E                     
  2704                           ;newmain.c: 34:  ADC_Init(5,0,4,4,1,0);
  2705  001C7E  0E00               	movlw	0
  2706  001C80  6E32               	movwf	ADC_Init@Vref^0,c
  2707  001C82  0E04               	movlw	4
  2708  001C84  6E33               	movwf	ADC_Init@Clock^0,c
  2709  001C86  0E04               	movlw	4
  2710  001C88  6E34               	movwf	ADC_Init@ADQT^0,c
  2711  001C8A  0E01               	movlw	1
  2712  001C8C  6E35               	movwf	ADC_Init@justificacion^0,c
  2713  001C8E  0E00               	movlw	0
  2714  001C90  6E36               	movwf	ADC_Init@estado^0,c
  2715  001C92  0E05               	movlw	5
  2716  001C94  EC6E  F00D         	call	_ADC_Init
  2717  001C98  9C93               	bcf	147,6,c	;volatile
  2718  001C9A  9893               	bcf	147,4,c	;volatile
  2719  001C9C  9E93               	bcf	147,7,c	;volatile
  2720  001C9E                     
  2721                           ;newmain.c: 41:  Calibration_Init();
  2722  001C9E  EC52  F00F         	call	_Calibration_Init	;wreg free
  2723  001CA2  0012               	return		;funcret
  2724  001CA4                     __end_of_InitPort:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _USART_Init *****************
  2728 ;; Defined at:
  2729 ;;		line 14 in file "UART.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  BAUD            4   14[COMRAM] long 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2743 ;;      Params:         4       0       0       0       0       0       0       0       0
  2744 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2746 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        8 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 1
  2750 ;; This function calls:
  2751 ;;		___aldiv
  2752 ;; This function is called by:
  2753 ;;		_InitPort
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text17
  2758  0018C8                     __ptext17:
  2759                           	callstack 0
  2760  0018C8                     _USART_Init:
  2761                           	callstack 28
  2762  0018C8                     
  2763                           ;UART.c: 15:     TRISCbits.RC6 = 0;
  2764  0018C8  9C94               	bcf	148,6,c	;volatile
  2765                           
  2766                           ;UART.c: 16:     TRISCbits.RC7 = 1;
  2767  0018CA  8E94               	bsf	148,7,c	;volatile
  2768  0018CC                     
  2769                           ;UART.c: 19:     SPBRG = (unsigned char)(((8000000/BAUD)/64)-1);
  2770  0018CC  C040  F036         	movff	USART_Init@BAUD,___aldiv@divisor
  2771  0018D0  C041  F037         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
  2772  0018D4  C042  F038         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
  2773  0018D8  C043  F039         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
  2774  0018DC  0E00               	movlw	0
  2775  0018DE  6E32               	movwf	___aldiv@dividend^0,c
  2776  0018E0  0E12               	movlw	18
  2777  0018E2  6E33               	movwf	(___aldiv@dividend+1)^0,c
  2778  0018E4  0E7A               	movlw	122
  2779  0018E6  6E34               	movwf	(___aldiv@dividend+2)^0,c
  2780  0018E8  0E00               	movlw	0
  2781  0018EA  6E35               	movwf	(___aldiv@dividend+3)^0,c
  2782  0018EC  EC96  F008         	call	___aldiv	;wreg free
  2783  0018F0  C032  F044         	movff	?___aldiv,_USART_Init$1929
  2784  0018F4  C033  F045         	movff	?___aldiv+1,_USART_Init$1929+1
  2785  0018F8  C034  F046         	movff	?___aldiv+2,_USART_Init$1929+2
  2786  0018FC  C035  F047         	movff	?___aldiv+3,_USART_Init$1929+3
  2787                           
  2788                           ;UART.c: 19:     SPBRG = (unsigned char)(((8000000/BAUD)/64)-1);
  2789  001900  C044  F032         	movff	_USART_Init$1929,___aldiv@dividend
  2790  001904  C045  F033         	movff	_USART_Init$1929+1,___aldiv@dividend+1
  2791  001908  C046  F034         	movff	_USART_Init$1929+2,___aldiv@dividend+2
  2792  00190C  C047  F035         	movff	_USART_Init$1929+3,___aldiv@dividend+3
  2793  001910  0E40               	movlw	64
  2794  001912  6E36               	movwf	___aldiv@divisor^0,c
  2795  001914  0E00               	movlw	0
  2796  001916  6E37               	movwf	(___aldiv@divisor+1)^0,c
  2797  001918  0E00               	movlw	0
  2798  00191A  6E38               	movwf	(___aldiv@divisor+2)^0,c
  2799  00191C  0E00               	movlw	0
  2800  00191E  6E39               	movwf	(___aldiv@divisor+3)^0,c
  2801  001920  EC96  F008         	call	___aldiv	;wreg free
  2802  001924  0432               	decf	?___aldiv^0,w,c
  2803  001926  6EAF               	movwf	175,c	;volatile
  2804  001928                     
  2805                           ;UART.c: 21:     TXSTAbits.BRGH = 0;
  2806  001928  94AC               	bcf	172,2,c	;volatile
  2807  00192A                     
  2808                           ;UART.c: 22:     TXSTAbits.SYNC = 0;
  2809  00192A  98AC               	bcf	172,4,c	;volatile
  2810  00192C                     
  2811                           ;UART.c: 23:     RCSTAbits.SPEN = 1;
  2812  00192C  8EAB               	bsf	171,7,c	;volatile
  2813  00192E                     
  2814                           ;UART.c: 25:     TXSTAbits.TX9 = 0;
  2815  00192E  9CAC               	bcf	172,6,c	;volatile
  2816  001930                     
  2817                           ;UART.c: 26:     TXSTAbits.TXEN = 1;
  2818  001930  8AAC               	bsf	172,5,c	;volatile
  2819  001932                     
  2820                           ;UART.c: 29:     RCSTAbits.RC9 = 0;
  2821  001932  9CAB               	bcf	171,6,c	;volatile
  2822  001934                     
  2823                           ;UART.c: 30:     RCSTAbits.CREN = 1;
  2824  001934  88AB               	bsf	171,4,c	;volatile
  2825  001936  0012               	return		;funcret
  2826  001938                     __end_of_USART_Init:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function ___aldiv *****************
  2830 ;; Defined at:
  2831 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aldiv.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  dividend        4    0[COMRAM] long 
  2834 ;;  divisor         4    4[COMRAM] long 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  quotient        4   10[COMRAM] long 
  2837 ;;  sign            1    9[COMRAM] unsigned char 
  2838 ;;  counter         1    8[COMRAM] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  4    0[COMRAM] long 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2848 ;;      Params:         8       0       0       0       0       0       0       0       0
  2849 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2851 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2852 ;;Total ram usage:       14 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_ADC_LecturaFiltro
  2858 ;;		_USART_Init
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text18
  2863  00112C                     __ptext18:
  2864                           	callstack 0
  2865  00112C                     ___aldiv:
  2866                           	callstack 28
  2867  00112C  0E00               	movlw	0
  2868  00112E  6E3B               	movwf	___aldiv@sign^0,c
  2869  001130  BE39               	btfsc	(___aldiv@divisor+3)^0,7,c
  2870  001132  EF9F  F008         	goto	u1430
  2871  001136  EF9D  F008         	goto	u1431
  2872  00113A                     u1431:
  2873  00113A  EFA9  F008         	goto	l2673
  2874  00113E                     u1430:
  2875  00113E  1E39               	comf	(___aldiv@divisor+3)^0,f,c
  2876  001140  1E38               	comf	(___aldiv@divisor+2)^0,f,c
  2877  001142  1E37               	comf	(___aldiv@divisor+1)^0,f,c
  2878  001144  6C36               	negf	___aldiv@divisor^0,c
  2879  001146  0E00               	movlw	0
  2880  001148  2237               	addwfc	(___aldiv@divisor+1)^0,f,c
  2881  00114A  2238               	addwfc	(___aldiv@divisor+2)^0,f,c
  2882  00114C  2239               	addwfc	(___aldiv@divisor+3)^0,f,c
  2883  00114E  0E01               	movlw	1
  2884  001150  6E3B               	movwf	___aldiv@sign^0,c
  2885  001152                     l2673:
  2886  001152  BE35               	btfsc	(___aldiv@dividend+3)^0,7,c
  2887  001154  EFB0  F008         	goto	u1440
  2888  001158  EFAE  F008         	goto	u1441
  2889  00115C                     u1441:
  2890  00115C  EFBA  F008         	goto	l2679
  2891  001160                     u1440:
  2892  001160  1E35               	comf	(___aldiv@dividend+3)^0,f,c
  2893  001162  1E34               	comf	(___aldiv@dividend+2)^0,f,c
  2894  001164  1E33               	comf	(___aldiv@dividend+1)^0,f,c
  2895  001166  6C32               	negf	___aldiv@dividend^0,c
  2896  001168  0E00               	movlw	0
  2897  00116A  2233               	addwfc	(___aldiv@dividend+1)^0,f,c
  2898  00116C  2234               	addwfc	(___aldiv@dividend+2)^0,f,c
  2899  00116E  2235               	addwfc	(___aldiv@dividend+3)^0,f,c
  2900  001170  0E01               	movlw	1
  2901  001172  1A3B               	xorwf	___aldiv@sign^0,f,c
  2902  001174                     l2679:
  2903  001174  0E00               	movlw	0
  2904  001176  6E3C               	movwf	___aldiv@quotient^0,c
  2905  001178  0E00               	movlw	0
  2906  00117A  6E3D               	movwf	(___aldiv@quotient+1)^0,c
  2907  00117C  0E00               	movlw	0
  2908  00117E  6E3E               	movwf	(___aldiv@quotient+2)^0,c
  2909  001180  0E00               	movlw	0
  2910  001182  6E3F               	movwf	(___aldiv@quotient+3)^0,c
  2911  001184  5036               	movf	___aldiv@divisor^0,w,c
  2912  001186  1037               	iorwf	(___aldiv@divisor+1)^0,w,c
  2913  001188  1038               	iorwf	(___aldiv@divisor+2)^0,w,c
  2914  00118A  1039               	iorwf	(___aldiv@divisor+3)^0,w,c
  2915  00118C  B4D8               	btfsc	status,2,c
  2916  00118E  EFCB  F008         	goto	u1451
  2917  001192  EFCD  F008         	goto	u1450
  2918  001196                     u1451:
  2919  001196  EF03  F009         	goto	l2701
  2920  00119A                     u1450:
  2921  00119A  0E01               	movlw	1
  2922  00119C  6E3A               	movwf	___aldiv@counter^0,c
  2923  00119E  EFD7  F008         	goto	l2687
  2924  0011A2                     l2685:
  2925  0011A2  90D8               	bcf	status,0,c
  2926  0011A4  3636               	rlcf	___aldiv@divisor^0,f,c
  2927  0011A6  3637               	rlcf	(___aldiv@divisor+1)^0,f,c
  2928  0011A8  3638               	rlcf	(___aldiv@divisor+2)^0,f,c
  2929  0011AA  3639               	rlcf	(___aldiv@divisor+3)^0,f,c
  2930  0011AC  2A3A               	incf	___aldiv@counter^0,f,c
  2931  0011AE                     l2687:
  2932  0011AE  AE39               	btfss	(___aldiv@divisor+3)^0,7,c
  2933  0011B0  EFDC  F008         	goto	u1461
  2934  0011B4  EFDE  F008         	goto	u1460
  2935  0011B8                     u1461:
  2936  0011B8  EFD1  F008         	goto	l2685
  2937  0011BC                     u1460:
  2938  0011BC                     l2689:
  2939  0011BC  90D8               	bcf	status,0,c
  2940  0011BE  363C               	rlcf	___aldiv@quotient^0,f,c
  2941  0011C0  363D               	rlcf	(___aldiv@quotient+1)^0,f,c
  2942  0011C2  363E               	rlcf	(___aldiv@quotient+2)^0,f,c
  2943  0011C4  363F               	rlcf	(___aldiv@quotient+3)^0,f,c
  2944  0011C6  5036               	movf	___aldiv@divisor^0,w,c
  2945  0011C8  5C32               	subwf	___aldiv@dividend^0,w,c
  2946  0011CA  5037               	movf	(___aldiv@divisor+1)^0,w,c
  2947  0011CC  5833               	subwfb	(___aldiv@dividend+1)^0,w,c
  2948  0011CE  5038               	movf	(___aldiv@divisor+2)^0,w,c
  2949  0011D0  5834               	subwfb	(___aldiv@dividend+2)^0,w,c
  2950  0011D2  5039               	movf	(___aldiv@divisor+3)^0,w,c
  2951  0011D4  5835               	subwfb	(___aldiv@dividend+3)^0,w,c
  2952  0011D6  A0D8               	btfss	status,0,c
  2953  0011D8  EFF0  F008         	goto	u1471
  2954  0011DC  EFF2  F008         	goto	u1470
  2955  0011E0                     u1471:
  2956  0011E0  EFFB  F008         	goto	l2697
  2957  0011E4                     u1470:
  2958  0011E4  5036               	movf	___aldiv@divisor^0,w,c
  2959  0011E6  5E32               	subwf	___aldiv@dividend^0,f,c
  2960  0011E8  5037               	movf	(___aldiv@divisor+1)^0,w,c
  2961  0011EA  5A33               	subwfb	(___aldiv@dividend+1)^0,f,c
  2962  0011EC  5038               	movf	(___aldiv@divisor+2)^0,w,c
  2963  0011EE  5A34               	subwfb	(___aldiv@dividend+2)^0,f,c
  2964  0011F0  5039               	movf	(___aldiv@divisor+3)^0,w,c
  2965  0011F2  5A35               	subwfb	(___aldiv@dividend+3)^0,f,c
  2966  0011F4  803C               	bsf	___aldiv@quotient^0,0,c
  2967  0011F6                     l2697:
  2968  0011F6  90D8               	bcf	status,0,c
  2969  0011F8  3239               	rrcf	(___aldiv@divisor+3)^0,f,c
  2970  0011FA  3238               	rrcf	(___aldiv@divisor+2)^0,f,c
  2971  0011FC  3237               	rrcf	(___aldiv@divisor+1)^0,f,c
  2972  0011FE  3236               	rrcf	___aldiv@divisor^0,f,c
  2973  001200  2E3A               	decfsz	___aldiv@counter^0,f,c
  2974  001202  EFDE  F008         	goto	l2689
  2975  001206                     l2701:
  2976  001206  503B               	movf	___aldiv@sign^0,w,c
  2977  001208  B4D8               	btfsc	status,2,c
  2978  00120A  EF09  F009         	goto	u1481
  2979  00120E  EF0B  F009         	goto	u1480
  2980  001212                     u1481:
  2981  001212  EF13  F009         	goto	l2705
  2982  001216                     u1480:
  2983  001216  1E3F               	comf	(___aldiv@quotient+3)^0,f,c
  2984  001218  1E3E               	comf	(___aldiv@quotient+2)^0,f,c
  2985  00121A  1E3D               	comf	(___aldiv@quotient+1)^0,f,c
  2986  00121C  6C3C               	negf	___aldiv@quotient^0,c
  2987  00121E  0E00               	movlw	0
  2988  001220  223D               	addwfc	(___aldiv@quotient+1)^0,f,c
  2989  001222  223E               	addwfc	(___aldiv@quotient+2)^0,f,c
  2990  001224  223F               	addwfc	(___aldiv@quotient+3)^0,f,c
  2991  001226                     l2705:
  2992  001226  C03C  F032         	movff	___aldiv@quotient,?___aldiv
  2993  00122A  C03D  F033         	movff	___aldiv@quotient+1,?___aldiv+1
  2994  00122E  C03E  F034         	movff	___aldiv@quotient+2,?___aldiv+2
  2995  001232  C03F  F035         	movff	___aldiv@quotient+3,?___aldiv+3
  2996  001236  0012               	return		;funcret
  2997  001238                     __end_of___aldiv:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _Calibration_Init *****************
  3001 ;; Defined at:
  3002 ;;		line 22 in file "Calibration.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 1
  3023 ;; This function calls:
  3024 ;;		_Pot_Init
  3025 ;; This function is called by:
  3026 ;;		_InitPort
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text19
  3031  001EA4                     __ptext19:
  3032                           	callstack 0
  3033  001EA4                     _Calibration_Init:
  3034                           	callstack 28
  3035  001EA4                     
  3036                           ;Calibration.c: 39:     Pot_Init();
  3037  001EA4  EC01  F006         	call	_Pot_Init	;wreg free
  3038  001EA8  0012               	return		;funcret
  3039  001EAA                     __end_of_Calibration_Init:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _Pot_Init *****************
  3043 ;; Defined at:
  3044 ;;		line 19 in file "Pot.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3060 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3061 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3062 ;;Total ram usage:        2 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_Calibration_Init
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text20
  3072  000C02                     __ptext20:
  3073                           	callstack 0
  3074  000C02                     _Pot_Init:
  3075                           	callstack 28
  3076  000C02  9094               	bcf	148,0,c	;volatile
  3077  000C04                     
  3078                           ;Pot.c: 22:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3079  000C04  0E1A               	movlw	26
  3080  000C06  6E32               	movwf	??_Pot_Init^0,c
  3081  000C08  0EF8               	movlw	248
  3082  000C0A                     u1877:
  3083  000C0A  2EE8               	decfsz	wreg,f,c
  3084  000C0C  D7FE               	bra	u1877
  3085  000C0E  2E32               	decfsz	??_Pot_Init^0,f,c
  3086  000C10  D7FC               	bra	u1877
  3087  000C12  D000               	nop2	
  3088  000C14  9294               	bcf	148,1,c	;volatile
  3089  000C16                     
  3090                           ;Pot.c: 24:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3091  000C16  0E02               	movlw	2
  3092  000C18  6E33               	movwf	(??_Pot_Init+1)^0,c
  3093  000C1A  0E04               	movlw	4
  3094  000C1C  6E32               	movwf	??_Pot_Init^0,c
  3095  000C1E  0EBA               	movlw	186
  3096  000C20                     u1887:
  3097  000C20  2EE8               	decfsz	wreg,f,c
  3098  000C22  D7FE               	bra	u1887
  3099  000C24  2E32               	decfsz	??_Pot_Init^0,f,c
  3100  000C26  D7FC               	bra	u1887
  3101  000C28  2E33               	decfsz	(??_Pot_Init+1)^0,f,c
  3102  000C2A  D7FA               	bra	u1887
  3103  000C2C  D000               	nop2	
  3104  000C2E  9893               	bcf	147,4,c	;volatile
  3105  000C30                     
  3106                           ;Pot.c: 27:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3107  000C30  0E02               	movlw	2
  3108  000C32  6E33               	movwf	(??_Pot_Init+1)^0,c
  3109  000C34  0E04               	movlw	4
  3110  000C36  6E32               	movwf	??_Pot_Init^0,c
  3111  000C38  0EBA               	movlw	186
  3112  000C3A                     u1897:
  3113  000C3A  2EE8               	decfsz	wreg,f,c
  3114  000C3C  D7FE               	bra	u1897
  3115  000C3E  2E32               	decfsz	??_Pot_Init^0,f,c
  3116  000C40  D7FC               	bra	u1897
  3117  000C42  2E33               	decfsz	(??_Pot_Init+1)^0,f,c
  3118  000C44  D7FA               	bra	u1897
  3119  000C46  D000               	nop2	
  3120  000C48  9E93               	bcf	147,7,c	;volatile
  3121  000C4A                     
  3122                           ;Pot.c: 31:      _delay((unsigned long)((100)*(8000000/4000.0)));
  3123  000C4A  0E02               	movlw	2
  3124  000C4C  6E33               	movwf	(??_Pot_Init+1)^0,c
  3125  000C4E  0E04               	movlw	4
  3126  000C50  6E32               	movwf	??_Pot_Init^0,c
  3127  000C52  0EBA               	movlw	186
  3128  000C54                     u1907:
  3129  000C54  2EE8               	decfsz	wreg,f,c
  3130  000C56  D7FE               	bra	u1907
  3131  000C58  2E32               	decfsz	??_Pot_Init^0,f,c
  3132  000C5A  D7FC               	bra	u1907
  3133  000C5C  2E33               	decfsz	(??_Pot_Init+1)^0,f,c
  3134  000C5E  D7FA               	bra	u1907
  3135  000C60  D000               	nop2	
  3136  000C62  9095               	bcf	149,0,c	;volatile
  3137  000C64                     
  3138                           ;Pot.c: 33:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3139  000C64  0E1A               	movlw	26
  3140  000C66  6E32               	movwf	??_Pot_Init^0,c
  3141  000C68  0EF8               	movlw	248
  3142  000C6A                     u1917:
  3143  000C6A  2EE8               	decfsz	wreg,f,c
  3144  000C6C  D7FE               	bra	u1917
  3145  000C6E  2E32               	decfsz	??_Pot_Init^0,f,c
  3146  000C70  D7FC               	bra	u1917
  3147  000C72  D000               	nop2	
  3148  000C74  9295               	bcf	149,1,c	;volatile
  3149  000C76                     
  3150                           ;Pot.c: 35:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3151  000C76  0E1A               	movlw	26
  3152  000C78  6E32               	movwf	??_Pot_Init^0,c
  3153  000C7A  0EF8               	movlw	248
  3154  000C7C                     u1927:
  3155  000C7C  2EE8               	decfsz	wreg,f,c
  3156  000C7E  D7FE               	bra	u1927
  3157  000C80  2E32               	decfsz	??_Pot_Init^0,f,c
  3158  000C82  D7FC               	bra	u1927
  3159  000C84  D000               	nop2	
  3160  000C86  9495               	bcf	149,2,c	;volatile
  3161  000C88                     
  3162                           ;Pot.c: 37:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3163  000C88  0E1A               	movlw	26
  3164  000C8A  6E32               	movwf	??_Pot_Init^0,c
  3165  000C8C  0EF8               	movlw	248
  3166  000C8E                     u1937:
  3167  000C8E  2EE8               	decfsz	wreg,f,c
  3168  000C90  D7FE               	bra	u1937
  3169  000C92  2E32               	decfsz	??_Pot_Init^0,f,c
  3170  000C94  D7FC               	bra	u1937
  3171  000C96  D000               	nop2	
  3172  000C98  9695               	bcf	149,3,c	;volatile
  3173  000C9A                     
  3174                           ;Pot.c: 39:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3175  000C9A  0E1A               	movlw	26
  3176  000C9C  6E32               	movwf	??_Pot_Init^0,c
  3177  000C9E  0EF8               	movlw	248
  3178  000CA0                     u1947:
  3179  000CA0  2EE8               	decfsz	wreg,f,c
  3180  000CA2  D7FE               	bra	u1947
  3181  000CA4  2E32               	decfsz	??_Pot_Init^0,f,c
  3182  000CA6  D7FC               	bra	u1947
  3183  000CA8  D000               	nop2	
  3184  000CAA  9C95               	bcf	149,6,c	;volatile
  3185  000CAC                     
  3186                           ;Pot.c: 41:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3187  000CAC  0E1A               	movlw	26
  3188  000CAE  6E32               	movwf	??_Pot_Init^0,c
  3189  000CB0  0EF8               	movlw	248
  3190  000CB2                     u1957:
  3191  000CB2  2EE8               	decfsz	wreg,f,c
  3192  000CB4  D7FE               	bra	u1957
  3193  000CB6  2E32               	decfsz	??_Pot_Init^0,f,c
  3194  000CB8  D7FC               	bra	u1957
  3195  000CBA  D000               	nop2	
  3196  000CBC  9E95               	bcf	149,7,c	;volatile
  3197  000CBE                     
  3198                           ;Pot.c: 43:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3199  000CBE  0E1A               	movlw	26
  3200  000CC0  6E32               	movwf	??_Pot_Init^0,c
  3201  000CC2  0EF8               	movlw	248
  3202  000CC4                     u1967:
  3203  000CC4  2EE8               	decfsz	wreg,f,c
  3204  000CC6  D7FE               	bra	u1967
  3205  000CC8  2E32               	decfsz	??_Pot_Init^0,f,c
  3206  000CCA  D7FC               	bra	u1967
  3207  000CCC  D000               	nop2	
  3208  000CCE  9895               	bcf	149,4,c	;volatile
  3209  000CD0                     
  3210                           ;Pot.c: 45:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3211  000CD0  0E1A               	movlw	26
  3212  000CD2  6E32               	movwf	??_Pot_Init^0,c
  3213  000CD4  0EF8               	movlw	248
  3214  000CD6                     u1977:
  3215  000CD6  2EE8               	decfsz	wreg,f,c
  3216  000CD8  D7FE               	bra	u1977
  3217  000CDA  2E32               	decfsz	??_Pot_Init^0,f,c
  3218  000CDC  D7FC               	bra	u1977
  3219  000CDE  D000               	nop2	
  3220  000CE0  9A95               	bcf	149,5,c	;volatile
  3221  000CE2                     
  3222                           ;Pot.c: 47:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3223  000CE2  0E1A               	movlw	26
  3224  000CE4  6E32               	movwf	??_Pot_Init^0,c
  3225  000CE6  0EF8               	movlw	248
  3226  000CE8                     u1987:
  3227  000CE8  2EE8               	decfsz	wreg,f,c
  3228  000CEA  D7FE               	bra	u1987
  3229  000CEC  2E32               	decfsz	??_Pot_Init^0,f,c
  3230  000CEE  D7FC               	bra	u1987
  3231  000CF0  D000               	nop2	
  3232                           
  3233                           ;Pot.c: 49:      _delay((unsigned long)((100)*(8000000/4000.0)));
  3234  000CF2  0E02               	movlw	2
  3235  000CF4  6E33               	movwf	(??_Pot_Init+1)^0,c
  3236  000CF6  0E04               	movlw	4
  3237  000CF8  6E32               	movwf	??_Pot_Init^0,c
  3238  000CFA  0EBA               	movlw	186
  3239  000CFC                     u1997:
  3240  000CFC  2EE8               	decfsz	wreg,f,c
  3241  000CFE  D7FE               	bra	u1997
  3242  000D00  2E32               	decfsz	??_Pot_Init^0,f,c
  3243  000D02  D7FC               	bra	u1997
  3244  000D04  2E33               	decfsz	(??_Pot_Init+1)^0,f,c
  3245  000D06  D7FA               	bra	u1997
  3246  000D08  D000               	nop2	
  3247  000D0A  808C               	bsf	140,0,c	;volatile
  3248  000D0C                     
  3249                           ;Pot.c: 52:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3250  000D0C  0E1A               	movlw	26
  3251  000D0E  6E32               	movwf	??_Pot_Init^0,c
  3252  000D10  0EF8               	movlw	248
  3253  000D12                     u2007:
  3254  000D12  2EE8               	decfsz	wreg,f,c
  3255  000D14  D7FE               	bra	u2007
  3256  000D16  2E32               	decfsz	??_Pot_Init^0,f,c
  3257  000D18  D7FC               	bra	u2007
  3258  000D1A  D000               	nop2	
  3259  000D1C  828C               	bsf	140,1,c	;volatile
  3260  000D1E                     
  3261                           ;Pot.c: 54:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3262  000D1E  0E1A               	movlw	26
  3263  000D20  6E32               	movwf	??_Pot_Init^0,c
  3264  000D22  0EF8               	movlw	248
  3265  000D24                     u2017:
  3266  000D24  2EE8               	decfsz	wreg,f,c
  3267  000D26  D7FE               	bra	u2017
  3268  000D28  2E32               	decfsz	??_Pot_Init^0,f,c
  3269  000D2A  D7FC               	bra	u2017
  3270  000D2C  D000               	nop2	
  3271  000D2E  848C               	bsf	140,2,c	;volatile
  3272  000D30                     
  3273                           ;Pot.c: 56:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3274  000D30  0E1A               	movlw	26
  3275  000D32  6E32               	movwf	??_Pot_Init^0,c
  3276  000D34  0EF8               	movlw	248
  3277  000D36                     u2027:
  3278  000D36  2EE8               	decfsz	wreg,f,c
  3279  000D38  D7FE               	bra	u2027
  3280  000D3A  2E32               	decfsz	??_Pot_Init^0,f,c
  3281  000D3C  D7FC               	bra	u2027
  3282  000D3E  D000               	nop2	
  3283  000D40  868C               	bsf	140,3,c	;volatile
  3284  000D42                     
  3285                           ;Pot.c: 58:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3286  000D42  0E1A               	movlw	26
  3287  000D44  6E32               	movwf	??_Pot_Init^0,c
  3288  000D46  0EF8               	movlw	248
  3289  000D48                     u2037:
  3290  000D48  2EE8               	decfsz	wreg,f,c
  3291  000D4A  D7FE               	bra	u2037
  3292  000D4C  2E32               	decfsz	??_Pot_Init^0,f,c
  3293  000D4E  D7FC               	bra	u2037
  3294  000D50  D000               	nop2	
  3295  000D52  8C8C               	bsf	140,6,c	;volatile
  3296  000D54                     
  3297                           ;Pot.c: 60:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3298  000D54  0E1A               	movlw	26
  3299  000D56  6E32               	movwf	??_Pot_Init^0,c
  3300  000D58  0EF8               	movlw	248
  3301  000D5A                     u2047:
  3302  000D5A  2EE8               	decfsz	wreg,f,c
  3303  000D5C  D7FE               	bra	u2047
  3304  000D5E  2E32               	decfsz	??_Pot_Init^0,f,c
  3305  000D60  D7FC               	bra	u2047
  3306  000D62  D000               	nop2	
  3307  000D64  8E8C               	bsf	140,7,c	;volatile
  3308  000D66                     
  3309                           ;Pot.c: 62:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3310  000D66  0E1A               	movlw	26
  3311  000D68  6E32               	movwf	??_Pot_Init^0,c
  3312  000D6A  0EF8               	movlw	248
  3313  000D6C                     u2057:
  3314  000D6C  2EE8               	decfsz	wreg,f,c
  3315  000D6E  D7FE               	bra	u2057
  3316  000D70  2E32               	decfsz	??_Pot_Init^0,f,c
  3317  000D72  D7FC               	bra	u2057
  3318  000D74  D000               	nop2	
  3319  000D76  888C               	bsf	140,4,c	;volatile
  3320  000D78                     
  3321                           ;Pot.c: 64:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3322  000D78  0E1A               	movlw	26
  3323  000D7A  6E32               	movwf	??_Pot_Init^0,c
  3324  000D7C  0EF8               	movlw	248
  3325  000D7E                     u2067:
  3326  000D7E  2EE8               	decfsz	wreg,f,c
  3327  000D80  D7FE               	bra	u2067
  3328  000D82  2E32               	decfsz	??_Pot_Init^0,f,c
  3329  000D84  D7FC               	bra	u2067
  3330  000D86  D000               	nop2	
  3331  000D88  8A8C               	bsf	140,5,c	;volatile
  3332  000D8A  8C8A               	bsf	138,6,c	;volatile
  3333  000D8C  0012               	return		;funcret
  3334  000D8E                     __end_of_Pot_Init:
  3335                           	callstack 0
  3336                           
  3337 ;; *************** function _ADC_Init *****************
  3338 ;; Defined at:
  3339 ;;		line 30 in file "ADC.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  entradas_ana    1    wreg     unsigned char 
  3342 ;;  Vref            1    0[COMRAM] unsigned char 
  3343 ;;  Clock           1    1[COMRAM] unsigned char 
  3344 ;;  ADQT            1    2[COMRAM] unsigned char 
  3345 ;;  justificacio    1    3[COMRAM] unsigned char 
  3346 ;;  estado          1    4[COMRAM] unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  entradas_ana    1    6[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3358 ;;      Params:         5       0       0       0       0       0       0       0       0
  3359 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3360 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3361 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3362 ;;Total ram usage:        7 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_InitPort
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text21
  3372  001ADC                     __ptext21:
  3373                           	callstack 0
  3374  001ADC                     _ADC_Init:
  3375                           	callstack 29
  3376                           
  3377                           ;incstack = 0
  3378                           ;ADC_Init@entradas_analogicas stored from wreg
  3379  001ADC  6E38               	movwf	ADC_Init@entradas_analogicas^0,c
  3380  001ADE                     
  3381                           ;ADC.c: 30: void ADC_Init(uint8_t entradas_analogicas, uint8_t Vref, uint8_t Clock, uint
      +                          8_t ADQT, uint8_t justificacion, uint8_t estado);ADC.c: 31: {;ADC.c: 32:     ADCON1bits.
      +                          PCFG=entradas_analogicas;
  3382  001ADE  50C1               	movf	193,w,c	;volatile
  3383  001AE0  1838               	xorwf	ADC_Init@entradas_analogicas^0,w,c
  3384  001AE2  0BF0               	andlw	-16
  3385  001AE4  1838               	xorwf	ADC_Init@entradas_analogicas^0,w,c
  3386  001AE6  6EC1               	movwf	193,c	;volatile
  3387                           
  3388                           ;ADC.c: 51:     ADCON1bits.VCFG=Vref;
  3389  001AE8  C032  F037         	movff	ADC_Init@Vref,??_ADC_Init
  3390  001AEC  3A37               	swapf	??_ADC_Init^0,f,c
  3391  001AEE  50C1               	movf	193,w,c	;volatile
  3392  001AF0  1837               	xorwf	??_ADC_Init^0,w,c
  3393  001AF2  0BCF               	andlw	-49
  3394  001AF4  1837               	xorwf	??_ADC_Init^0,w,c
  3395  001AF6  6EC1               	movwf	193,c	;volatile
  3396                           
  3397                           ;ADC.c: 56:     ADCON2bits.ADCS=Clock;
  3398  001AF8  50C0               	movf	192,w,c	;volatile
  3399  001AFA  1833               	xorwf	ADC_Init@Clock^0,w,c
  3400  001AFC  0BF8               	andlw	-8
  3401  001AFE  1833               	xorwf	ADC_Init@Clock^0,w,c
  3402  001B00  6EC0               	movwf	192,c	;volatile
  3403                           
  3404                           ;ADC.c: 67:     ADCON2bits.ACQT=ADQT;
  3405  001B02  C034  F037         	movff	ADC_Init@ADQT,??_ADC_Init
  3406  001B06  4637               	rlncf	??_ADC_Init^0,f,c
  3407  001B08  4637               	rlncf	??_ADC_Init^0,f,c
  3408  001B0A  4637               	rlncf	??_ADC_Init^0,f,c
  3409  001B0C  50C0               	movf	192,w,c	;volatile
  3410  001B0E  1837               	xorwf	??_ADC_Init^0,w,c
  3411  001B10  0BC7               	andlw	-57
  3412  001B12  1837               	xorwf	??_ADC_Init^0,w,c
  3413  001B14  6EC0               	movwf	192,c	;volatile
  3414  001B16                     
  3415                           ;ADC.c: 78:     ADCON2bits.ADFM=justificacion;
  3416  001B16  B035               	btfsc	ADC_Init@justificacion^0,0,c
  3417  001B18  D002               	bra	u1495
  3418  001B1A  9EC0               	bcf	192,7,c	;volatile
  3419  001B1C  D001               	bra	u1496
  3420  001B1E                     u1495:
  3421  001B1E  8EC0               	bsf	192,7,c	;volatile
  3422  001B20                     u1496:
  3423  001B20                     
  3424                           ;ADC.c: 82:     ADCON0bits.ADON=estado;
  3425  001B20  B036               	btfsc	ADC_Init@estado^0,0,c
  3426  001B22  D002               	bra	u1505
  3427  001B24  90C2               	bcf	194,0,c	;volatile
  3428  001B26  D001               	bra	u1506
  3429  001B28                     u1505:
  3430  001B28  80C2               	bsf	194,0,c	;volatile
  3431  001B2A                     u1506:
  3432  001B2A  0012               	return		;funcret
  3433  001B2C                     __end_of_ADC_Init:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _Calibration_Run *****************
  3437 ;; Defined at:
  3438 ;;		line 41 in file "Calibration.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  i               2   32[COMRAM] int 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0
  3453 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3454 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3455 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3456 ;;Total ram usage:        3 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 6
  3459 ;; This function calls:
  3460 ;;		_Calibration_Automatic
  3461 ;;		_Calibration_Set
  3462 ;;		_EEPROM_Decodificacion_Memoria
  3463 ;;		_Escritura_Memoria
  3464 ;;		_USART_RxC
  3465 ;;		_USART_TxS
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text22
  3472  00132E                     __ptext22:
  3473                           	callstack 0
  3474  00132E                     _Calibration_Run:
  3475                           	callstack 24
  3476  00132E                     
  3477                           ;Calibration.c: 43:     CALIBRATION_RUN= 1;
  3478  00132E  0E01               	movlw	1
  3479  001330  6E2A               	movwf	_CALIBRATION_RUN^0,c
  3480                           
  3481                           ;Calibration.c: 44:     CALIBRATION_START='H';
  3482  001332  0E48               	movlw	72
  3483  001334  6E5D               	movwf	_CALIBRATION_START^0,c
  3484                           
  3485                           ;Calibration.c: 45:     SENSOR_ID=0;
  3486  001336  0E00               	movlw	0
  3487  001338  6E28               	movwf	_SENSOR_ID^0,c
  3488                           
  3489                           ;Calibration.c: 46:     SENSOR_I=0;
  3490  00133A  0E00               	movlw	0
  3491  00133C  6E27               	movwf	_SENSOR_I^0,c
  3492                           
  3493                           ;Calibration.c: 47:     Pot_Value=0;
  3494  00133E  0E00               	movlw	0
  3495  001340  6E0C               	movwf	(_Pot_Value+1)^0,c
  3496  001342  0E00               	movlw	0
  3497  001344  6E0B               	movwf	_Pot_Value^0,c
  3498                           
  3499                           ;Calibration.c: 48:     while(CALIBRATION_RUN){
  3500  001346  EF04  F00A         	goto	l383
  3501  00134A                     l2851:
  3502                           
  3503                           ;Calibration.c: 49:         if (SENSOR_ID<8){
  3504  00134A  0E08               	movlw	8
  3505  00134C  6028               	cpfslt	_SENSOR_ID^0,c
  3506  00134E  EFAB  F009         	goto	u1551
  3507  001352  EFAD  F009         	goto	u1550
  3508  001356                     u1551:
  3509  001356  EF02  F00A         	goto	l2889
  3510  00135A                     u1550:
  3511  00135A                     
  3512                           ;Calibration.c: 50:         CALIBRATION_START=USART_RxC();;
  3513  00135A  EC01  F00F         	call	_USART_RxC	;wreg free
  3514  00135E  6E5D               	movwf	_CALIBRATION_START^0,c
  3515  001360                     
  3516                           ;Calibration.c: 51:         if (CALIBRATION_START=='y'){
  3517  001360  0E79               	movlw	121
  3518  001362  185D               	xorwf	_CALIBRATION_START^0,w,c
  3519  001364  A4D8               	btfss	status,2,c
  3520  001366  EFB7  F009         	goto	u1561
  3521  00136A  EFB9  F009         	goto	u1560
  3522  00136E                     u1561:
  3523  00136E  EFD9  F009         	goto	l2873
  3524  001372                     u1560:
  3525  001372                     
  3526                           ;Calibration.c: 52:            for (int i=0; i<8; i++){
  3527  001372  0E00               	movlw	0
  3528  001374  6E53               	movwf	(Calibration_Run@i+1)^0,c
  3529  001376  0E00               	movlw	0
  3530  001378  6E52               	movwf	Calibration_Run@i^0,c
  3531  00137A                     l2863:
  3532                           
  3533                           ;Calibration.c: 53:           Calibration_Automatic(SENSOR_ID);
  3534  00137A  5028               	movf	_SENSOR_ID^0,w,c
  3535  00137C  ECEF  F00E         	call	_Calibration_Automatic
  3536  001380                     
  3537                           ;Calibration.c: 56:            SENSOR_ID++;}
  3538  001380  2A28               	incf	_SENSOR_ID^0,f,c
  3539  001382  4A52               	infsnz	Calibration_Run@i^0,f,c
  3540  001384  2A53               	incf	(Calibration_Run@i+1)^0,f,c
  3541  001386  BE53               	btfsc	(Calibration_Run@i+1)^0,7,c
  3542  001388  EFCF  F009         	goto	u1571
  3543  00138C  5053               	movf	(Calibration_Run@i+1)^0,w,c
  3544  00138E  E109               	bnz	u1570
  3545  001390  0E08               	movlw	8
  3546  001392  5C52               	subwf	Calibration_Run@i^0,w,c
  3547  001394  A0D8               	btfss	status,0,c
  3548  001396  EFCF  F009         	goto	u1571
  3549  00139A  EFD1  F009         	goto	u1570
  3550  00139E                     u1571:
  3551  00139E  EFBD  F009         	goto	l2863
  3552  0013A2                     u1570:
  3553  0013A2                     
  3554                           ;Calibration.c: 57:            USART_TxS("d\n");}
  3555  0013A2  0E05               	movlw	low STR_12
  3556  0013A4  6E36               	movwf	USART_TxS@str^0,c
  3557  0013A6  0E08               	movlw	high STR_12
  3558  0013A8  6E37               	movwf	(USART_TxS@str+1)^0,c
  3559  0013AA  EC24  F00C         	call	_USART_TxS	;wreg free
  3560  0013AE  EF04  F00A         	goto	l383
  3561  0013B2                     l2873:
  3562  0013B2  0E6E               	movlw	110
  3563  0013B4  185D               	xorwf	_CALIBRATION_START^0,w,c
  3564  0013B6  A4D8               	btfss	status,2,c
  3565  0013B8  EFE0  F009         	goto	u1581
  3566  0013BC  EFE2  F009         	goto	u1580
  3567  0013C0                     u1581:
  3568  0013C0  EF04  F00A         	goto	l383
  3569  0013C4                     u1580:
  3570  0013C4                     
  3571                           ;Calibration.c: 59:            Calibration_Set(SENSOR_ID);
  3572  0013C4  5028               	movf	_SENSOR_ID^0,w,c
  3573  0013C6  EC96  F00D         	call	_Calibration_Set
  3574  0013CA                     
  3575                           ;Calibration.c: 61:            Direction=SENSOR_ID;
  3576  0013CA  C028  F026         	movff	_SENSOR_ID,_Direction
  3577  0013CE                     
  3578                           ;Calibration.c: 62:            Direction=EEPROM_Decodificacion_Memoria(Direction);
  3579  0013CE  5026               	movf	_Direction^0,w,c
  3580  0013D0  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
  3581  0013D4  6E26               	movwf	_Direction^0,c
  3582  0013D6                     
  3583                           ;Calibration.c: 63:            Escritura_Memoria(Direction,Pot);
  3584  0013D6  0E30               	movlw	low _Pot
  3585  0013D8  6E34               	movwf	Escritura_Memoria@string_pot^0,c
  3586  0013DA  0E00               	movlw	high _Pot
  3587  0013DC  6E35               	movwf	(Escritura_Memoria@string_pot+1)^0,c
  3588  0013DE  5026               	movf	_Direction^0,w,c
  3589  0013E0  EC0B  F00E         	call	_Escritura_Memoria
  3590  0013E4                     
  3591                           ;Calibration.c: 64:            _delay((unsigned long)((1)*(8000000/4000.0)));
  3592  0013E4  0E03               	movlw	3
  3593  0013E6  6E51               	movwf	??_Calibration_Run^0,c
  3594  0013E8  0E98               	movlw	152
  3595  0013EA                     u2077:
  3596  0013EA  2EE8               	decfsz	wreg,f,c
  3597  0013EC  D7FE               	bra	u2077
  3598  0013EE  2E51               	decfsz	??_Calibration_Run^0,f,c
  3599  0013F0  D7FC               	bra	u2077
  3600  0013F2                     
  3601                           ;Calibration.c: 65:            USART_TxS("d");
  3602  0013F2  0E0E               	movlw	low STR_13
  3603  0013F4  6E36               	movwf	USART_TxS@str^0,c
  3604  0013F6  0E08               	movlw	high STR_13
  3605  0013F8  6E37               	movwf	(USART_TxS@str+1)^0,c
  3606  0013FA  EC24  F00C         	call	_USART_TxS	;wreg free
  3607  0013FE                     
  3608                           ;Calibration.c: 66:            SENSOR_ID++;}
  3609  0013FE  2A28               	incf	_SENSOR_ID^0,f,c
  3610  001400  EF04  F00A         	goto	l383
  3611  001404                     l2889:
  3612  001404  0E00               	movlw	0
  3613  001406  6E2A               	movwf	_CALIBRATION_RUN^0,c
  3614  001408                     l383:
  3615                           
  3616                           ;Calibration.c: 48:     while(CALIBRATION_RUN){
  3617  001408  502A               	movf	_CALIBRATION_RUN^0,w,c
  3618  00140A  A4D8               	btfss	status,2,c
  3619  00140C  EF0A  F00A         	goto	u1591
  3620  001410  EF0C  F00A         	goto	u1590
  3621  001414                     u1591:
  3622  001414  EFA5  F009         	goto	l2851
  3623  001418                     u1590:
  3624  001418  0012               	return		;funcret
  3625  00141A                     __end_of_Calibration_Run:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function _USART_RxC *****************
  3629 ;; Defined at:
  3630 ;;		line 38 in file "UART.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      unsigned char 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 3
  3651 ;; This function calls:
  3652 ;;		_USART_Overflow
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;;		_Calibration_Run
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text23
  3660  001E02                     __ptext23:
  3661                           	callstack 0
  3662  001E02                     _USART_RxC:
  3663                           	callstack 27
  3664  001E02                     
  3665                           ;UART.c: 39:     USART_Overflow();
  3666  001E02  ECBD  F00D         	call	_USART_Overflow	;wreg free
  3667  001E06                     l247:
  3668  001E06  AA9E               	btfss	158,5,c	;volatile
  3669  001E08  EF08  F00F         	goto	u1521
  3670  001E0C  EF0A  F00F         	goto	u1520
  3671  001E10                     u1521:
  3672  001E10  EF03  F00F         	goto	l247
  3673  001E14                     u1520:
  3674  001E14                     
  3675                           ;UART.c: 41:     return RCREG;
  3676  001E14  50AE               	movf	174,w,c	;volatile
  3677  001E16  0012               	return		;funcret
  3678  001E18                     __end_of_USART_RxC:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function _Escritura_Memoria *****************
  3682 ;; Defined at:
  3683 ;;		line 61 in file "EEPROM.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  direccion       1    wreg     unsigned char 
  3686 ;;  string_pot      2    2[COMRAM] PTR unsigned char 
  3687 ;;		 -> Pot(2), 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  direccion       1    4[COMRAM] unsigned char 
  3690 ;;  i               2    6[COMRAM] int 
  3691 ;;  direccionFin    1    5[COMRAM] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3701 ;;      Params:         2       0       0       0       0       0       0       0       0
  3702 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3704 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3705 ;;Total ram usage:        6 bytes
  3706 ;; Hardware stack levels used: 1
  3707 ;; Hardware stack levels required when called: 1
  3708 ;; This function calls:
  3709 ;;		_EEPROM_Tx
  3710 ;; This function is called by:
  3711 ;;		_Calibration_Run
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text24
  3716  001C16                     __ptext24:
  3717                           	callstack 0
  3718  001C16                     _Escritura_Memoria:
  3719                           	callstack 28
  3720                           
  3721                           ;incstack = 0
  3722                           ;Escritura_Memoria@direccion stored from wreg
  3723  001C16  6E36               	movwf	Escritura_Memoria@direccion^0,c
  3724  001C18                     
  3725                           ;EEPROM.c: 62:     char direccionFinal;;EEPROM.c: 63:     for (int i = 0; i < 2; i++) {
  3726  001C18  0E00               	movlw	0
  3727  001C1A  6E39               	movwf	(Escritura_Memoria@i+1)^0,c
  3728  001C1C  0E00               	movlw	0
  3729  001C1E  6E38               	movwf	Escritura_Memoria@i^0,c
  3730  001C20                     l2809:
  3731                           
  3732                           ;EEPROM.c: 64:         direccionFinal = direccion + i;
  3733  001C20  5036               	movf	Escritura_Memoria@direccion^0,w,c
  3734  001C22  2438               	addwf	Escritura_Memoria@i^0,w,c
  3735  001C24  6E37               	movwf	Escritura_Memoria@direccionFinal^0,c
  3736  001C26                     
  3737                           ;EEPROM.c: 65:         EEPROM_Tx(direccionFinal, string_pot[i]);
  3738  001C26  5038               	movf	Escritura_Memoria@i^0,w,c
  3739  001C28  2434               	addwf	Escritura_Memoria@string_pot^0,w,c
  3740  001C2A  6ED9               	movwf	fsr2l,c
  3741  001C2C  5039               	movf	(Escritura_Memoria@i+1)^0,w,c
  3742  001C2E  2035               	addwfc	(Escritura_Memoria@string_pot+1)^0,w,c
  3743  001C30  6EDA               	movwf	fsr2h,c
  3744  001C32  50DF               	movf	indf2,w,c
  3745  001C34  6E32               	movwf	EEPROM_Tx@dato^0,c
  3746  001C36  5037               	movf	Escritura_Memoria@direccionFinal^0,w,c
  3747  001C38  ECB0  F00E         	call	_EEPROM_Tx
  3748  001C3C                     
  3749                           ;EEPROM.c: 66:     }
  3750  001C3C  4A38               	infsnz	Escritura_Memoria@i^0,f,c
  3751  001C3E  2A39               	incf	(Escritura_Memoria@i+1)^0,f,c
  3752  001C40  BE39               	btfsc	(Escritura_Memoria@i+1)^0,7,c
  3753  001C42  EF2C  F00E         	goto	u1541
  3754  001C46  5039               	movf	(Escritura_Memoria@i+1)^0,w,c
  3755  001C48  E109               	bnz	u1540
  3756  001C4A  0E02               	movlw	2
  3757  001C4C  5C38               	subwf	Escritura_Memoria@i^0,w,c
  3758  001C4E  A0D8               	btfss	status,0,c
  3759  001C50  EF2C  F00E         	goto	u1541
  3760  001C54  EF2E  F00E         	goto	u1540
  3761  001C58                     u1541:
  3762  001C58  EF10  F00E         	goto	l2809
  3763  001C5C                     u1540:
  3764  001C5C  0012               	return		;funcret
  3765  001C5E                     __end_of_Escritura_Memoria:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _EEPROM_Tx *****************
  3769 ;; Defined at:
  3770 ;;		line 26 in file "EEPROM.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  direccion       1    wreg     unsigned char 
  3773 ;;  dato            1    0[COMRAM] unsigned char 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  direccion       1    1[COMRAM] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3785 ;;      Params:         1       0       0       0       0       0       0       0       0
  3786 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3788 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3789 ;;Total ram usage:        2 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_Escritura_Memoria
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text25
  3799  001D60                     __ptext25:
  3800                           	callstack 0
  3801  001D60                     _EEPROM_Tx:
  3802                           	callstack 28
  3803                           
  3804                           ;incstack = 0
  3805                           ;EEPROM_Tx@direccion stored from wreg
  3806  001D60  6E33               	movwf	EEPROM_Tx@direccion^0,c
  3807  001D62                     
  3808                           ;EEPROM.c: 27:     EEADR=direccion;
  3809  001D62  C033  FFA9         	movff	EEPROM_Tx@direccion,4009	;volatile
  3810  001D66                     
  3811                           ;EEPROM.c: 28:     EEDATA=dato;
  3812  001D66  C032  FFA8         	movff	EEPROM_Tx@dato,4008	;volatile
  3813  001D6A                     
  3814                           ;EEPROM.c: 29:      EECON1bits.EEPGD=0;
  3815  001D6A  9EA6               	bcf	166,7,c	;volsfr
  3816  001D6C                     
  3817                           ;EEPROM.c: 30:       EECON1bits.CFGS=0;
  3818  001D6C  9CA6               	bcf	166,6,c	;volsfr
  3819  001D6E                     
  3820                           ;EEPROM.c: 31:       EECON1bits.WREN=1;
  3821  001D6E  84A6               	bsf	166,2,c	;volsfr
  3822  001D70                     
  3823                           ;EEPROM.c: 32:       INTCONbits.GIE=0;
  3824  001D70  9EF2               	bcf	242,7,c	;volatile
  3825  001D72                     
  3826                           ;EEPROM.c: 34:       EECON2=0x55;
  3827  001D72  0E55               	movlw	85
  3828  001D74  6EA7               	movwf	167,c	;volsfr
  3829  001D76                     
  3830                           ;EEPROM.c: 35:       EECON2=0x0AA;
  3831  001D76  0EAA               	movlw	170
  3832  001D78  6EA7               	movwf	167,c	;volsfr
  3833  001D7A                     
  3834                           ;EEPROM.c: 36:       EECON1bits.WR=1;
  3835  001D7A  82A6               	bsf	166,1,c	;volsfr
  3836  001D7C                     
  3837                           ;EEPROM.c: 37:       INTCONbits.GIE=1;
  3838  001D7C  8EF2               	bsf	242,7,c	;volatile
  3839  001D7E                     l605:
  3840  001D7E  A8A1               	btfss	161,4,c	;volatile
  3841  001D80  EFC4  F00E         	goto	u1421
  3842  001D84  EFC6  F00E         	goto	u1420
  3843  001D88                     u1421:
  3844  001D88  EFBF  F00E         	goto	l605
  3845  001D8C                     u1420:
  3846  001D8C                     
  3847                           ;EEPROM.c: 39:       PIR2bits.EEIF=0;
  3848  001D8C  98A1               	bcf	161,4,c	;volatile
  3849                           
  3850                           ;EEPROM.c: 40:       EECON1bits.WREN=0 ;
  3851  001D8E  94A6               	bcf	166,2,c	;volsfr
  3852  001D90  0012               	return		;funcret
  3853  001D92                     __end_of_EEPROM_Tx:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function _Calibration_Set *****************
  3857 ;; Defined at:
  3858 ;;		line 112 in file "Calibration.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  s               1    wreg     unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  s               1   25[COMRAM] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0
  3873 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3875 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3876 ;;Total ram usage:        1 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 5
  3879 ;; This function calls:
  3880 ;;		_Pot_Set
  3881 ;;		_USART_RxS
  3882 ;;		_atoi
  3883 ;; This function is called by:
  3884 ;;		_Calibration_Run
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text26
  3889  001B2C                     __ptext26:
  3890                           	callstack 0
  3891  001B2C                     _Calibration_Set:
  3892                           	callstack 24
  3893                           
  3894                           ;incstack = 0
  3895                           ;Calibration_Set@s stored from wreg
  3896  001B2C  6E4B               	movwf	Calibration_Set@s^0,c
  3897  001B2E                     
  3898                           ;Calibration.c: 113:     Pot_Value=0;
  3899  001B2E  0E00               	movlw	0
  3900  001B30  6E0C               	movwf	(_Pot_Value+1)^0,c
  3901  001B32  0E00               	movlw	0
  3902  001B34  6E0B               	movwf	_Pot_Value^0,c
  3903                           
  3904                           ;Calibration.c: 114:     while(Pot_Value==0){
  3905  001B36  EFAE  F00D         	goto	l2799
  3906  001B3A                     l2795:
  3907                           
  3908                           ;Calibration.c: 115:       USART_RxS (2, Pot );
  3909  001B3A  0E30               	movlw	low _Pot
  3910  001B3C  6E3F               	movwf	USART_RxS@pointer^0,c
  3911  001B3E  0E00               	movlw	high _Pot
  3912  001B40  6E40               	movwf	(USART_RxS@pointer+1)^0,c
  3913  001B42  0E02               	movlw	2
  3914  001B44  ECD1  F00B         	call	_USART_RxS
  3915  001B48                     
  3916                           ;Calibration.c: 116:       Pot_Value = atoi(Pot);
  3917  001B48  0E30               	movlw	low _Pot
  3918  001B4A  6E39               	movwf	atoi@s^0,c
  3919  001B4C  0E00               	movlw	high _Pot
  3920  001B4E  6E3A               	movwf	(atoi@s+1)^0,c
  3921  001B50  ECC7  F006         	call	_atoi	;wreg free
  3922  001B54  C039  F00B         	movff	?_atoi,_Pot_Value
  3923  001B58  C03A  F00C         	movff	?_atoi+1,_Pot_Value+1
  3924  001B5C                     l2799:
  3925                           
  3926                           ;Calibration.c: 114:     while(Pot_Value==0){
  3927  001B5C  500B               	movf	_Pot_Value^0,w,c
  3928  001B5E  100C               	iorwf	(_Pot_Value+1)^0,w,c
  3929  001B60  B4D8               	btfsc	status,2,c
  3930  001B62  EFB5  F00D         	goto	u1531
  3931  001B66  EFB7  F00D         	goto	u1530
  3932  001B6A                     u1531:
  3933  001B6A  EF9D  F00D         	goto	l2795
  3934  001B6E                     u1530:
  3935  001B6E                     
  3936                           ;Calibration.c: 118:     Pot_Set(s,Pot_Value);
  3937  001B6E  C00B  F03E         	movff	_Pot_Value,Pot_Set@amount
  3938  001B72  504B               	movf	Calibration_Set@s^0,w,c
  3939  001B74  EC0C  F00F         	call	_Pot_Set
  3940  001B78  0012               	return		;funcret
  3941  001B7A                     __end_of_Calibration_Set:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _USART_RxS *****************
  3945 ;; Defined at:
  3946 ;;		line 65 in file "UART.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  length          1    wreg     unsigned char 
  3949 ;;  pointer         2   13[COMRAM] PTR unsigned char 
  3950 ;;		 -> Pot(2), 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  length          1   18[COMRAM] unsigned char 
  3953 ;;  i               2   23[COMRAM] int 
  3954 ;;  count           4   19[COMRAM] long 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3964 ;;      Params:         2       0       0       0       0       0       0       0       0
  3965 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3966 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3967 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3968 ;;Total ram usage:       12 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 3
  3971 ;; This function calls:
  3972 ;;		_USART_Overflow
  3973 ;; This function is called by:
  3974 ;;		_Calibration_Set
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text27
  3979  0017A2                     __ptext27:
  3980                           	callstack 0
  3981  0017A2                     _USART_RxS:
  3982                           	callstack 25
  3983                           
  3984                           ;incstack = 0
  3985                           ;USART_RxS@length stored from wreg
  3986  0017A2  6E44               	movwf	USART_RxS@length^0,c
  3987  0017A4                     
  3988                           ;UART.c: 66:     USART_Overflow();
  3989  0017A4  ECBD  F00D         	call	_USART_Overflow	;wreg free
  3990  0017A8                     
  3991                           ;UART.c: 67:     long count=0;
  3992  0017A8  0E00               	movlw	0
  3993  0017AA  6E45               	movwf	USART_RxS@count^0,c
  3994  0017AC  0E00               	movlw	0
  3995  0017AE  6E46               	movwf	(USART_RxS@count+1)^0,c
  3996  0017B0  0E00               	movlw	0
  3997  0017B2  6E47               	movwf	(USART_RxS@count+2)^0,c
  3998  0017B4  0E00               	movlw	0
  3999  0017B6  6E48               	movwf	(USART_RxS@count+3)^0,c
  4000  0017B8                     
  4001                           ;UART.c: 68:     Conexion_perdida=0;
  4002  0017B8  0E00               	movlw	0
  4003  0017BA  6E2B               	movwf	_Conexion_perdida^0,c
  4004  0017BC                     
  4005                           ;UART.c: 69:     for (int i = 0; i < (length); i++)
  4006  0017BC  0E00               	movlw	0
  4007  0017BE  6E4A               	movwf	(USART_RxS@i+1)^0,c
  4008  0017C0  0E00               	movlw	0
  4009  0017C2  6E49               	movwf	USART_RxS@i^0,c
  4010  0017C4  EF11  F00C         	goto	l2641
  4011  0017C8                     l2631:
  4012                           
  4013                           ;UART.c: 72:                 count++;
  4014  0017C8  0E01               	movlw	1
  4015  0017CA  2645               	addwf	USART_RxS@count^0,f,c
  4016  0017CC  0E00               	movlw	0
  4017  0017CE  2246               	addwfc	(USART_RxS@count+1)^0,f,c
  4018  0017D0  2247               	addwfc	(USART_RxS@count+2)^0,f,c
  4019  0017D2  2248               	addwfc	(USART_RxS@count+3)^0,f,c
  4020                           
  4021                           ;UART.c: 73:                 if (count>2500000){
  4022  0017D4  BE48               	btfsc	(USART_RxS@count+3)^0,7,c
  4023  0017D6  EFFA  F00B         	goto	u1391
  4024  0017DA  5048               	movf	(USART_RxS@count+3)^0,w,c
  4025  0017DC  E10D               	bnz	u1390
  4026  0017DE  0EA1               	movlw	161
  4027  0017E0  5C45               	subwf	USART_RxS@count^0,w,c
  4028  0017E2  0E25               	movlw	37
  4029  0017E4  5846               	subwfb	(USART_RxS@count+1)^0,w,c
  4030  0017E6  0E26               	movlw	38
  4031  0017E8  5847               	subwfb	(USART_RxS@count+2)^0,w,c
  4032  0017EA  A0D8               	btfss	status,0,c
  4033  0017EC  EFFA  F00B         	goto	u1391
  4034  0017F0  EFFC  F00B         	goto	u1390
  4035  0017F4                     u1391:
  4036  0017F4  EF00  F00C         	goto	l273
  4037  0017F8                     u1390:
  4038  0017F8                     
  4039                           ;UART.c: 74:                     Conexion_perdida=1;
  4040  0017F8  0E01               	movlw	1
  4041  0017FA  6E2B               	movwf	_Conexion_perdida^0,c
  4042  0017FC  EF23  F00C         	goto	l276
  4043  001800                     l273:
  4044                           
  4045                           ;UART.c: 71:             while (!RCIF){
  4046  001800  AA9E               	btfss	3998,5,c	;volatile
  4047  001802  EF05  F00C         	goto	u1401
  4048  001806  EF07  F00C         	goto	u1400
  4049  00180A                     u1401:
  4050  00180A  EFE4  F00B         	goto	l2631
  4051  00180E                     u1400:
  4052  00180E                     
  4053                           ;UART.c: 79:             pointer[i] = RCREG;
  4054  00180E  5049               	movf	USART_RxS@i^0,w,c
  4055  001810  243F               	addwf	USART_RxS@pointer^0,w,c
  4056  001812  6ED9               	movwf	fsr2l,c
  4057  001814  504A               	movf	(USART_RxS@i+1)^0,w,c
  4058  001816  2040               	addwfc	(USART_RxS@pointer+1)^0,w,c
  4059  001818  6EDA               	movwf	fsr2h,c
  4060  00181A  CFAE FFDF          	movff	4014,indf2	;volatile
  4061  00181E                     
  4062                           ;UART.c: 80:         }
  4063  00181E  4A49               	infsnz	USART_RxS@i^0,f,c
  4064  001820  2A4A               	incf	(USART_RxS@i+1)^0,f,c
  4065  001822                     l2641:
  4066  001822  5044               	movf	USART_RxS@length^0,w,c
  4067  001824  6E41               	movwf	??_USART_RxS^0,c
  4068  001826  6A42               	clrf	(??_USART_RxS+1)^0,c
  4069  001828  5041               	movf	??_USART_RxS^0,w,c
  4070  00182A  5C49               	subwf	USART_RxS@i^0,w,c
  4071  00182C  504A               	movf	(USART_RxS@i+1)^0,w,c
  4072  00182E  0A80               	xorlw	128
  4073  001830  6E43               	movwf	(??_USART_RxS+2)^0,c
  4074  001832  5042               	movf	(??_USART_RxS+1)^0,w,c
  4075  001834  0A80               	xorlw	128
  4076  001836  5843               	subwfb	(??_USART_RxS+2)^0,w,c
  4077  001838  A0D8               	btfss	status,0,c
  4078  00183A  EF21  F00C         	goto	u1411
  4079  00183E  EF23  F00C         	goto	u1410
  4080  001842                     u1411:
  4081  001842  EF00  F00C         	goto	l273
  4082  001846                     u1410:
  4083  001846                     l276:
  4084  001846  0012               	return		;funcret
  4085  001848                     __end_of_USART_RxS:
  4086                           	callstack 0
  4087                           
  4088 ;; *************** function _USART_Overflow *****************
  4089 ;; Defined at:
  4090 ;;		line 82 in file "UART.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  temp            1   12[COMRAM] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0
  4105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4107 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4108 ;;Total ram usage:        1 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 2
  4111 ;; This function calls:
  4112 ;;		_USART_TxS
  4113 ;; This function is called by:
  4114 ;;		_USART_RxC
  4115 ;;		_USART_RxS
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text28
  4120  001B7A                     __ptext28:
  4121                           	callstack 0
  4122  001B7A                     _USART_Overflow:
  4123                           	callstack 27
  4124  001B7A                     
  4125                           ;UART.c: 83:     char temp;;UART.c: 84:     if(OERR) {
  4126  001B7A  A2AB               	btfss	4011,1,c	;volatile
  4127  001B7C  EFC2  F00D         	goto	u1121
  4128  001B80  EFC4  F00D         	goto	u1120
  4129  001B84                     u1121:
  4130  001B84  EFD9  F00D         	goto	l2413
  4131  001B88                     u1120:
  4132  001B88                     l282:
  4133                           
  4134                           ;UART.c: 87:         {;UART.c: 88:             temp = RCREG;
  4135  001B88  CFAE F03E          	movff	4014,USART_Overflow@temp	;volatile
  4136                           
  4137                           ;UART.c: 89:             temp = RCREG;
  4138  001B8C  CFAE F03E          	movff	4014,USART_Overflow@temp	;volatile
  4139                           
  4140                           ;UART.c: 90:             temp = RCREG;
  4141  001B90  CFAE F03E          	movff	4014,USART_Overflow@temp	;volatile
  4142                           
  4143                           ;UART.c: 91:             CREN = 0;
  4144  001B94  98AB               	bcf	4011,4,c	;volatile
  4145                           
  4146                           ;UART.c: 92:             CREN = 1;
  4147  001B96  88AB               	bsf	4011,4,c	;volatile
  4148                           
  4149                           ;UART.c: 94:         } while(OERR);
  4150  001B98  B2AB               	btfsc	4011,1,c	;volatile
  4151  001B9A  EFD1  F00D         	goto	u1131
  4152  001B9E  EFD3  F00D         	goto	u1130
  4153  001BA2                     u1131:
  4154  001BA2  EFC4  F00D         	goto	l282
  4155  001BA6                     u1130:
  4156  001BA6                     
  4157                           ;UART.c: 95:          USART_TxS("E4\n");
  4158  001BA6  0E01               	movlw	low STR_11
  4159  001BA8  6E36               	movwf	USART_TxS@str^0,c
  4160  001BAA  0E08               	movlw	high STR_11
  4161  001BAC  6E37               	movwf	(USART_TxS@str+1)^0,c
  4162  001BAE  EC24  F00C         	call	_USART_TxS	;wreg free
  4163  001BB2                     l2413:
  4164                           
  4165                           ;UART.c: 98:     if(FERR)
  4166  001BB2  A4AB               	btfss	4011,2,c	;volatile
  4167  001BB4  EFDE  F00D         	goto	u1141
  4168  001BB8  EFE0  F00D         	goto	u1140
  4169  001BBC                     u1141:
  4170  001BBC  EFE3  F00D         	goto	l285
  4171  001BC0                     u1140:
  4172  001BC0  50AE               	movf	174,w,c	;volatile
  4173                           
  4174                           ;UART.c: 101:         TXEN = 0;
  4175  001BC2  9AAC               	bcf	4012,5,c	;volatile
  4176                           
  4177                           ;UART.c: 102:         TXEN = 1;
  4178  001BC4  8AAC               	bsf	4012,5,c	;volatile
  4179  001BC6                     l285:
  4180  001BC6  0012               	return		;funcret
  4181  001BC8                     __end_of_USART_Overflow:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function _USART_TxS *****************
  4185 ;; Defined at:
  4186 ;;		line 43 in file "UART.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  str             2    4[COMRAM] PTR unsigned char 
  4189 ;;		 -> STR_13(2), STR_12(3), STR_11(4), STR_3(3), 
  4190 ;;		 -> STR_2(2), result(33), 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  i               2   10[COMRAM] int 
  4193 ;;  length          2    8[COMRAM] int 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      unsigned char 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4203 ;;      Params:         2       0       0       0       0       0       0       0       0
  4204 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4205 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4206 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4207 ;;Total ram usage:        8 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 1
  4210 ;; This function calls:
  4211 ;;		_strlen
  4212 ;; This function is called by:
  4213 ;;		_Run_Protocol
  4214 ;;		_main
  4215 ;;		_USART_Overflow
  4216 ;;		_Calibration_Run
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text29
  4221  001848                     __ptext29:
  4222                           	callstack 0
  4223  001848                     _USART_TxS:
  4224                           	callstack 29
  4225  001848                     
  4226                           ;UART.c: 44:     int length=strlen(str);
  4227  001848  C036  F032         	movff	USART_TxS@str,strlen@s
  4228  00184C  C037  F033         	movff	USART_TxS@str+1,strlen@s+1
  4229  001850  ECE4  F00D         	call	_strlen	;wreg free
  4230  001854  C032  F03A         	movff	?_strlen,USART_TxS@length
  4231  001858  C033  F03B         	movff	?_strlen+1,USART_TxS@length+1
  4232  00185C                     
  4233                           ;UART.c: 45:     for (int i=0;i<length;i++){
  4234  00185C  0E00               	movlw	0
  4235  00185E  6E3D               	movwf	(USART_TxS@i+1)^0,c
  4236  001860  0E00               	movlw	0
  4237  001862  6E3C               	movwf	USART_TxS@i^0,c
  4238  001864  EF54  F00C         	goto	l2365
  4239  001868                     l255:
  4240  001868  A89E               	btfss	158,4,c	;volatile
  4241  00186A  EF39  F00C         	goto	u1021
  4242  00186E  EF3B  F00C         	goto	u1020
  4243  001872                     u1021:
  4244  001872  EF34  F00C         	goto	l255
  4245  001876                     u1020:
  4246  001876                     
  4247                           ;UART.c: 47:     TXREG = str[i];
  4248  001876  503C               	movf	USART_TxS@i^0,w,c
  4249  001878  2436               	addwf	USART_TxS@str^0,w,c
  4250  00187A  6E38               	movwf	??_USART_TxS^0,c
  4251  00187C  503D               	movf	(USART_TxS@i+1)^0,w,c
  4252  00187E  2037               	addwfc	(USART_TxS@str+1)^0,w,c
  4253  001880  6E39               	movwf	(??_USART_TxS+1)^0,c
  4254  001882  C038  FFF6         	movff	??_USART_TxS,tblptrl
  4255  001886  C039  FFF7         	movff	??_USART_TxS+1,tblptrh
  4256  00188A  6AF8               	clrf	tblptru,c
  4257  00188C  0E07               	movlw	(high __ramtop+-1)
  4258  00188E  64F7               	cpfsgt	tblptrh,c
  4259  001890  D003               	bra	u1037
  4260  001892  0008               	tblrd		*
  4261  001894  50F5               	movf	tablat,w,c
  4262  001896  D005               	bra	u1030
  4263  001898                     u1037:
  4264  001898  CFF6 FFE9          	movff	tblptrl,fsr0l
  4265  00189C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4266  0018A0  50EF               	movf	indf0,w,c
  4267  0018A2                     u1030:
  4268  0018A2  6EAD               	movwf	173,c	;volatile
  4269  0018A4                     
  4270                           ;UART.c: 48:     }
  4271  0018A4  4A3C               	infsnz	USART_TxS@i^0,f,c
  4272  0018A6  2A3D               	incf	(USART_TxS@i+1)^0,f,c
  4273  0018A8                     l2365:
  4274  0018A8  503A               	movf	USART_TxS@length^0,w,c
  4275  0018AA  5C3C               	subwf	USART_TxS@i^0,w,c
  4276  0018AC  503D               	movf	(USART_TxS@i+1)^0,w,c
  4277  0018AE  0A80               	xorlw	128
  4278  0018B0  6E38               	movwf	??_USART_TxS^0,c
  4279  0018B2  503B               	movf	(USART_TxS@length+1)^0,w,c
  4280  0018B4  0A80               	xorlw	128
  4281  0018B6  5838               	subwfb	??_USART_TxS^0,w,c
  4282  0018B8  A0D8               	btfss	status,0,c
  4283  0018BA  EF61  F00C         	goto	u1041
  4284  0018BE  EF63  F00C         	goto	u1040
  4285  0018C2                     u1041:
  4286  0018C2  EF34  F00C         	goto	l255
  4287  0018C6                     u1040:
  4288  0018C6  0012               	return		;funcret
  4289  0018C8                     __end_of_USART_TxS:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _strlen *****************
  4293 ;; Defined at:
  4294 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4297 ;;		 -> STR_13(2), STR_12(3), STR_11(4), STR_3(3), 
  4298 ;;		 -> STR_2(2), result(33), 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4301 ;;		 -> STR_13(2), STR_12(3), STR_11(4), STR_3(3), 
  4302 ;;		 -> STR_2(2), result(33), 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2    0[COMRAM] unsigned int 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4312 ;;      Params:         2       0       0       0       0       0       0       0       0
  4313 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4315 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4316 ;;Total ram usage:        4 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_USART_TxS
  4322 ;;		_strcat
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text30
  4327  001BC8                     __ptext30:
  4328                           	callstack 0
  4329  001BC8                     _strlen:
  4330                           	callstack 29
  4331  001BC8  C032  F034         	movff	strlen@s,strlen@a
  4332  001BCC  C033  F035         	movff	strlen@s+1,strlen@a+1
  4333  001BD0  EFEC  F00D         	goto	l2337
  4334  001BD4                     l2335:
  4335  001BD4  4A32               	infsnz	strlen@s^0,f,c
  4336  001BD6  2A33               	incf	(strlen@s+1)^0,f,c
  4337  001BD8                     l2337:
  4338  001BD8  C032  FFF6         	movff	strlen@s,tblptrl
  4339  001BDC  C033  FFF7         	movff	strlen@s+1,tblptrh
  4340  001BE0  6AF8               	clrf	tblptru,c
  4341  001BE2  0E07               	movlw	(high __ramtop+-1)
  4342  001BE4  64F7               	cpfsgt	tblptrh,c
  4343  001BE6  D003               	bra	u987
  4344  001BE8  0008               	tblrd		*
  4345  001BEA  50F5               	movf	tablat,w,c
  4346  001BEC  D005               	bra	u980
  4347  001BEE                     u987:
  4348  001BEE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4349  001BF2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4350  001BF6  50EF               	movf	indf0,w,c
  4351  001BF8                     u980:
  4352  001BF8  0900               	iorlw	0
  4353  001BFA  A4D8               	btfss	status,2,c
  4354  001BFC  EF02  F00E         	goto	u991
  4355  001C00  EF04  F00E         	goto	u990
  4356  001C04                     u991:
  4357  001C04  EFEA  F00D         	goto	l2335
  4358  001C08                     u990:
  4359  001C08  5034               	movf	strlen@a^0,w,c
  4360  001C0A  5C32               	subwf	strlen@s^0,w,c
  4361  001C0C  6E32               	movwf	?_strlen^0,c
  4362  001C0E  5035               	movf	(strlen@a+1)^0,w,c
  4363  001C10  5833               	subwfb	(strlen@s+1)^0,w,c
  4364  001C12  6E33               	movwf	(?_strlen+1)^0,c
  4365  001C14  0012               	return		;funcret
  4366  001C16                     __end_of_strlen:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function _Calibration_Automatic *****************
  4370 ;; Defined at:
  4371 ;;		line 72 in file "Calibration.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  s               1    wreg     unsigned char 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  s               1   30[COMRAM] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0
  4386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4388 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4389 ;;Total ram usage:        1 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 5
  4392 ;; This function calls:
  4393 ;;		_EEPROM_Decodificacion_Memoria
  4394 ;;		_Lectura_Memoria
  4395 ;;		_Pot_Set
  4396 ;; This function is called by:
  4397 ;;		_Calibration_Run
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text31
  4402  001DDE                     __ptext31:
  4403                           	callstack 0
  4404  001DDE                     _Calibration_Automatic:
  4405                           	callstack 24
  4406                           
  4407                           ;incstack = 0
  4408                           ;Calibration_Automatic@s stored from wreg
  4409  001DDE  6E50               	movwf	Calibration_Automatic@s^0,c
  4410  001DE0                     
  4411                           ;Calibration.c: 73:     Direction=EEPROM_Decodificacion_Memoria(s);
  4412  001DE0  5050               	movf	Calibration_Automatic@s^0,w,c
  4413  001DE2  EC04  F008         	call	_EEPROM_Decodificacion_Memoria
  4414  001DE6  6E26               	movwf	_Direction^0,c
  4415  001DE8                     
  4416                           ;Calibration.c: 74:     Pot_Value=Lectura_Memoria(Direction);
  4417  001DE8  5026               	movf	_Direction^0,w,c
  4418  001DEA  EC26  F00B         	call	_Lectura_Memoria
  4419  001DEE  C043  F00B         	movff	?_Lectura_Memoria,_Pot_Value
  4420  001DF2  C044  F00C         	movff	?_Lectura_Memoria+1,_Pot_Value+1
  4421  001DF6                     
  4422                           ;Calibration.c: 75:     Pot_Set(s,Pot_Value);
  4423  001DF6  C00B  F03E         	movff	_Pot_Value,Pot_Set@amount
  4424  001DFA  5050               	movf	Calibration_Automatic@s^0,w,c
  4425  001DFC  EC0C  F00F         	call	_Pot_Set
  4426  001E00  0012               	return		;funcret
  4427  001E02                     __end_of_Calibration_Automatic:
  4428                           	callstack 0
  4429                           
  4430 ;; *************** function _Pot_Set *****************
  4431 ;; Defined at:
  4432 ;;		line 78 in file "Pot.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  sensor          1    wreg     unsigned char 
  4435 ;;  amount          1   12[COMRAM] unsigned char 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  sensor          1   13[COMRAM] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      void 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4447 ;;      Params:         1       0       0       0       0       0       0       0       0
  4448 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4450 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4451 ;;Total ram usage:        2 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 4
  4454 ;; This function calls:
  4455 ;;		_Pot_Increase
  4456 ;;		_Pot_Reset
  4457 ;; This function is called by:
  4458 ;;		_Calibration_Automatic
  4459 ;;		_Calibration_Set
  4460 ;;		_Checar_PCB
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text32
  4465  001E18                     __ptext32:
  4466                           	callstack 0
  4467  001E18                     _Pot_Set:
  4468                           	callstack 24
  4469                           
  4470                           ;incstack = 0
  4471                           ;Pot_Set@sensor stored from wreg
  4472  001E18  6E3F               	movwf	Pot_Set@sensor^0,c
  4473  001E1A                     
  4474                           ;Pot.c: 79:    Pot_Reset(sensor);
  4475  001E1A  503F               	movf	Pot_Set@sensor^0,w,c
  4476  001E1C  EC47  F00F         	call	_Pot_Reset
  4477                           
  4478                           ;Pot.c: 80:    Pot_Increase(sensor,amount);
  4479  001E20  C03E  F03B         	movff	Pot_Set@amount,Pot_Increase@amount
  4480  001E24  503F               	movf	Pot_Set@sensor^0,w,c
  4481  001E26  EC29  F00F         	call	_Pot_Increase
  4482  001E2A  0012               	return		;funcret
  4483  001E2C                     __end_of_Pot_Set:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _Pot_Reset *****************
  4487 ;; Defined at:
  4488 ;;		line 69 in file "Pot.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  sensor          1    wreg     unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  sensor          1   11[COMRAM] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0
  4503 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4505 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4506 ;;Total ram usage:        1 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 3
  4509 ;; This function calls:
  4510 ;;		_Pot_Decrease
  4511 ;; This function is called by:
  4512 ;;		_Pot_Set
  4513 ;;		_Calibration_Auto
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text33
  4518  001E8E                     __ptext33:
  4519                           	callstack 0
  4520  001E8E                     _Pot_Reset:
  4521                           	callstack 24
  4522                           
  4523                           ;incstack = 0
  4524                           ;Pot_Reset@sensor stored from wreg
  4525  001E8E  6E3D               	movwf	Pot_Reset@sensor^0,c
  4526  001E90                     
  4527                           ;Pot.c: 70:     Pot_Decrease(sensor,99);
  4528  001E90  0E63               	movlw	99
  4529  001E92  6E3B               	movwf	Pot_Decrease@amount^0,c
  4530  001E94  503D               	movf	Pot_Reset@sensor^0,w,c
  4531  001E96  EC20  F00F         	call	_Pot_Decrease
  4532  001E9A  0012               	return		;funcret
  4533  001E9C                     __end_of_Pot_Reset:
  4534                           	callstack 0
  4535                           
  4536 ;; *************** function _Pot_Decrease *****************
  4537 ;; Defined at:
  4538 ;;		line 75 in file "Pot.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  sensor          1    wreg     unsigned char 
  4541 ;;  amount          1    9[COMRAM] unsigned char 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  sensor          1   10[COMRAM] unsigned char 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2, status,0, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4553 ;;      Params:         1       0       0       0       0       0       0       0       0
  4554 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4556 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4557 ;;Total ram usage:        2 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 2
  4560 ;; This function calls:
  4561 ;;		_Pot_Change
  4562 ;; This function is called by:
  4563 ;;		_Pot_Reset
  4564 ;;		_Calibration_Auto
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text34
  4569  001E40                     __ptext34:
  4570                           	callstack 0
  4571  001E40                     _Pot_Decrease:
  4572                           	callstack 24
  4573                           
  4574                           ;incstack = 0
  4575                           ;Pot_Decrease@sensor stored from wreg
  4576  001E40  6E3C               	movwf	Pot_Decrease@sensor^0,c
  4577  001E42                     
  4578                           ;Pot.c: 76:     Pot_Change(sensor,0, amount);
  4579  001E42  0E00               	movlw	0
  4580  001E44  6E36               	movwf	Pot_Change@direction^0,c
  4581  001E46  C03B  F037         	movff	Pot_Decrease@amount,Pot_Change@amount
  4582  001E4A  503C               	movf	Pot_Decrease@sensor^0,w,c
  4583  001E4C  EC1C  F00D         	call	_Pot_Change
  4584  001E50  0012               	return		;funcret
  4585  001E52                     __end_of_Pot_Decrease:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _Pot_Increase *****************
  4589 ;; Defined at:
  4590 ;;		line 72 in file "Pot.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  sensor          1    wreg     unsigned char 
  4593 ;;  amount          1    9[COMRAM] unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  sensor          1   10[COMRAM] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4605 ;;      Params:         1       0       0       0       0       0       0       0       0
  4606 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4608 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4609 ;;Total ram usage:        2 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; Hardware stack levels required when called: 2
  4612 ;; This function calls:
  4613 ;;		_Pot_Change
  4614 ;; This function is called by:
  4615 ;;		_Pot_Set
  4616 ;;		_Calibration_Auto
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text35
  4621  001E52                     __ptext35:
  4622                           	callstack 0
  4623  001E52                     _Pot_Increase:
  4624                           	callstack 25
  4625                           
  4626                           ;incstack = 0
  4627                           ;Pot_Increase@sensor stored from wreg
  4628  001E52  6E3C               	movwf	Pot_Increase@sensor^0,c
  4629  001E54                     
  4630                           ;Pot.c: 73:     Pot_Change(sensor,1, amount);
  4631  001E54  0E01               	movlw	1
  4632  001E56  6E36               	movwf	Pot_Change@direction^0,c
  4633  001E58  C03B  F037         	movff	Pot_Increase@amount,Pot_Change@amount
  4634  001E5C  503C               	movf	Pot_Increase@sensor^0,w,c
  4635  001E5E  EC1C  F00D         	call	_Pot_Change
  4636  001E62  0012               	return		;funcret
  4637  001E64                     __end_of_Pot_Increase:
  4638                           	callstack 0
  4639                           
  4640 ;; *************** function _Pot_Change *****************
  4641 ;; Defined at:
  4642 ;;		line 82 in file "Pot.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  sensor          1    wreg     unsigned char 
  4645 ;;  direction       1    4[COMRAM] _Bool 
  4646 ;;  amount          1    5[COMRAM] unsigned char 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  sensor          1    8[COMRAM] unsigned char 
  4649 ;;  i               1    7[COMRAM] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4659 ;;      Params:         2       0       0       0       0       0       0       0       0
  4660 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4661 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4662 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4663 ;;Total ram usage:        5 bytes
  4664 ;; Hardware stack levels used: 1
  4665 ;; Hardware stack levels required when called: 1
  4666 ;; This function calls:
  4667 ;;		_Pot_Selector
  4668 ;; This function is called by:
  4669 ;;		_Pot_Increase
  4670 ;;		_Pot_Decrease
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text36
  4675  001A38                     __ptext36:
  4676                           	callstack 0
  4677  001A38                     _Pot_Change:
  4678                           	callstack 24
  4679                           
  4680                           ;incstack = 0
  4681                           ;Pot_Change@sensor stored from wreg
  4682  001A38  6E3A               	movwf	Pot_Change@sensor^0,c
  4683  001A3A                     
  4684                           ;Pot.c: 83:     LATCbits.LATC1 = direction;
  4685  001A3A  B036               	btfsc	Pot_Change@direction^0,0,c
  4686  001A3C  D002               	bra	u1005
  4687  001A3E  928B               	bcf	139,1,c	;volatile
  4688  001A40  D001               	bra	u1006
  4689  001A42                     u1005:
  4690  001A42  828B               	bsf	139,1,c	;volatile
  4691  001A44                     u1006:
  4692  001A44  808B               	bsf	139,0,c	;volatile
  4693  001A46                     
  4694                           ;Pot.c: 85:     Pot_Selector(sensor,0);
  4695  001A46  0E00               	movlw	0
  4696  001A48  6E32               	movwf	Pot_Selector@status^0,c
  4697  001A4A  503A               	movf	Pot_Change@sensor^0,w,c
  4698  001A4C  EC1C  F009         	call	_Pot_Selector
  4699  001A50                     
  4700                           ;Pot.c: 86:     for (uint8_t i=0; i<amount; i++) {
  4701  001A50  0E00               	movlw	0
  4702  001A52  6E39               	movwf	Pot_Change@i^0,c
  4703  001A54  EF36  F00D         	goto	l532
  4704  001A58                     l534:
  4705  001A58  908B               	bcf	139,0,c	;volatile
  4706  001A5A                     
  4707                           ;Pot.c: 88:         _delay((unsigned long)((5)*(8000000/4000.0)));
  4708  001A5A  0E0D               	movlw	13
  4709  001A5C  6E38               	movwf	??_Pot_Change^0,c
  4710  001A5E  0EFC               	movlw	252
  4711  001A60                     u2087:
  4712  001A60  2EE8               	decfsz	wreg,f,c
  4713  001A62  D7FE               	bra	u2087
  4714  001A64  2E38               	decfsz	??_Pot_Change^0,f,c
  4715  001A66  D7FC               	bra	u2087
  4716  001A68  808B               	bsf	139,0,c	;volatile
  4717  001A6A                     
  4718                           ;Pot.c: 91:     }
  4719  001A6A  2A39               	incf	Pot_Change@i^0,f,c
  4720  001A6C                     l532:
  4721  001A6C  5037               	movf	Pot_Change@amount^0,w,c
  4722  001A6E  5C39               	subwf	Pot_Change@i^0,w,c
  4723  001A70  A0D8               	btfss	status,0,c
  4724  001A72  EF3D  F00D         	goto	u1011
  4725  001A76  EF3F  F00D         	goto	u1010
  4726  001A7A                     u1011:
  4727  001A7A  EF2C  F00D         	goto	l534
  4728  001A7E                     u1010:
  4729  001A7E                     
  4730                           ;Pot.c: 92:     Pot_Selector(sensor,1);
  4731  001A7E  0E01               	movlw	1
  4732  001A80  6E32               	movwf	Pot_Selector@status^0,c
  4733  001A82  503A               	movf	Pot_Change@sensor^0,w,c
  4734  001A84  EC1C  F009         	call	_Pot_Selector
  4735  001A88  0012               	return		;funcret
  4736  001A8A                     __end_of_Pot_Change:
  4737                           	callstack 0
  4738                           
  4739 ;; *************** function _Pot_Selector *****************
  4740 ;; Defined at:
  4741 ;;		line 94 in file "Pot.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  sensor          1    wreg     unsigned char 
  4744 ;;  status          1    0[COMRAM] _Bool 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  sensor          1    3[COMRAM] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4756 ;;      Params:         1       0       0       0       0       0       0       0       0
  4757 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4758 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4759 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4760 ;;Total ram usage:        4 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_Pot_Change
  4766 ;;		_Pot_Change_Vref
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text37
  4771  001238                     __ptext37:
  4772                           	callstack 0
  4773  001238                     _Pot_Selector:
  4774                           	callstack 26
  4775                           
  4776                           ;incstack = 0
  4777                           ;Pot_Selector@sensor stored from wreg
  4778  001238  6E35               	movwf	Pot_Selector@sensor^0,c
  4779  00123A                     
  4780                           ;Pot.c: 95:     switch (sensor){
  4781  00123A  EF65  F009         	goto	l2327
  4782  00123E                     l543:
  4783                           
  4784                           ;Pot.c: 97:             LATDbits.LATD0=status;
  4785  00123E  B032               	btfsc	Pot_Selector@status^0,0,c
  4786  001240  D002               	bra	u895
  4787  001242  908C               	bcf	140,0,c	;volatile
  4788  001244  D001               	bra	u896
  4789  001246                     u895:
  4790  001246  808C               	bsf	140,0,c	;volatile
  4791  001248                     u896:
  4792  001248                     l2307:
  4793                           
  4794                           ;Pot.c: 98:             _delay((unsigned long)((5)*(8000000/4000.0)));
  4795  001248  0E0D               	movlw	13
  4796  00124A  6E33               	movwf	??_Pot_Selector^0,c
  4797  00124C  0EFC               	movlw	252
  4798  00124E                     u2097:
  4799  00124E  2EE8               	decfsz	wreg,f,c
  4800  001250  D7FE               	bra	u2097
  4801  001252  2E33               	decfsz	??_Pot_Selector^0,f,c
  4802  001254  D7FC               	bra	u2097
  4803                           
  4804                           ;Pot.c: 99:             break;
  4805  001256  EF96  F009         	goto	l553
  4806  00125A                     l545:
  4807                           
  4808                           ;Pot.c: 101:             LATDbits.LATD1=status;
  4809  00125A  B032               	btfsc	Pot_Selector@status^0,0,c
  4810  00125C  D002               	bra	u905
  4811  00125E  928C               	bcf	140,1,c	;volatile
  4812  001260  D001               	bra	u906
  4813  001262                     u905:
  4814  001262  828C               	bsf	140,1,c	;volatile
  4815  001264                     u906:
  4816  001264  EF24  F009         	goto	l2307
  4817  001268                     l546:
  4818                           
  4819                           ;Pot.c: 105:             LATDbits.LATD2=status;
  4820  001268  B032               	btfsc	Pot_Selector@status^0,0,c
  4821  00126A  D002               	bra	u915
  4822  00126C  948C               	bcf	140,2,c	;volatile
  4823  00126E  D001               	bra	u916
  4824  001270                     u915:
  4825  001270  848C               	bsf	140,2,c	;volatile
  4826  001272                     u916:
  4827  001272  EF24  F009         	goto	l2307
  4828  001276                     l547:
  4829                           
  4830                           ;Pot.c: 109:             LATDbits.LATD3=status;
  4831  001276  B032               	btfsc	Pot_Selector@status^0,0,c
  4832  001278  D002               	bra	u925
  4833  00127A  968C               	bcf	140,3,c	;volatile
  4834  00127C  D001               	bra	u926
  4835  00127E                     u925:
  4836  00127E  868C               	bsf	140,3,c	;volatile
  4837  001280                     u926:
  4838  001280  EF24  F009         	goto	l2307
  4839  001284                     l548:
  4840                           
  4841                           ;Pot.c: 113:             LATDbits.LATD6=status;
  4842  001284  B032               	btfsc	Pot_Selector@status^0,0,c
  4843  001286  D002               	bra	u935
  4844  001288  9C8C               	bcf	140,6,c	;volatile
  4845  00128A  D001               	bra	u936
  4846  00128C                     u935:
  4847  00128C  8C8C               	bsf	140,6,c	;volatile
  4848  00128E                     u936:
  4849  00128E  EF24  F009         	goto	l2307
  4850  001292                     l549:
  4851                           
  4852                           ;Pot.c: 117:             LATDbits.LATD7=status;
  4853  001292  B032               	btfsc	Pot_Selector@status^0,0,c
  4854  001294  D002               	bra	u945
  4855  001296  9E8C               	bcf	140,7,c	;volatile
  4856  001298  D001               	bra	u946
  4857  00129A                     u945:
  4858  00129A  8E8C               	bsf	140,7,c	;volatile
  4859  00129C                     u946:
  4860  00129C  EF24  F009         	goto	l2307
  4861  0012A0                     l550:
  4862                           
  4863                           ;Pot.c: 121:             LATDbits.LATD4=status;
  4864  0012A0  B032               	btfsc	Pot_Selector@status^0,0,c
  4865  0012A2  D002               	bra	u955
  4866  0012A4  988C               	bcf	140,4,c	;volatile
  4867  0012A6  D001               	bra	u956
  4868  0012A8                     u955:
  4869  0012A8  888C               	bsf	140,4,c	;volatile
  4870  0012AA                     u956:
  4871  0012AA  EF24  F009         	goto	l2307
  4872  0012AE                     l551:
  4873                           
  4874                           ;Pot.c: 125:             LATDbits.LATD5=status;
  4875  0012AE  B032               	btfsc	Pot_Selector@status^0,0,c
  4876  0012B0  D002               	bra	u965
  4877  0012B2  9A8C               	bcf	140,5,c	;volatile
  4878  0012B4  D001               	bra	u966
  4879  0012B6                     u965:
  4880  0012B6  8A8C               	bsf	140,5,c	;volatile
  4881  0012B8                     u966:
  4882  0012B8  EF24  F009         	goto	l2307
  4883  0012BC                     l552:
  4884                           
  4885                           ;Pot.c: 129:             LATBbits.LATB6=status;
  4886  0012BC  B032               	btfsc	Pot_Selector@status^0,0,c
  4887  0012BE  D002               	bra	u975
  4888  0012C0  9C8A               	bcf	138,6,c	;volatile
  4889  0012C2  D001               	bra	u976
  4890  0012C4                     u975:
  4891  0012C4  8C8A               	bsf	138,6,c	;volatile
  4892  0012C6                     u976:
  4893  0012C6  EF24  F009         	goto	l2307
  4894  0012CA                     l2327:
  4895  0012CA  5035               	movf	Pot_Selector@sensor^0,w,c
  4896  0012CC  6E33               	movwf	??_Pot_Selector^0,c
  4897  0012CE  6A34               	clrf	(??_Pot_Selector+1)^0,c
  4898                           
  4899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4900                           ; Switch size 1, requested type "simple"
  4901                           ; Number of cases is 1, Range of values is 0 to 0
  4902                           ; switch strategies available:
  4903                           ; Name         Instructions Cycles
  4904                           ; simple_byte            4     3 (average)
  4905                           ;	Chosen strategy is simple_byte
  4906  0012D0  5034               	movf	(??_Pot_Selector+1)^0,w,c
  4907  0012D2  0A00               	xorlw	0	; case 0
  4908  0012D4  B4D8               	btfsc	status,2,c
  4909  0012D6  EF6F  F009         	goto	l3113
  4910  0012DA  EF96  F009         	goto	l553
  4911  0012DE                     l3113:
  4912                           
  4913                           ; Switch size 1, requested type "simple"
  4914                           ; Number of cases is 9, Range of values is 0 to 8
  4915                           ; switch strategies available:
  4916                           ; Name         Instructions Cycles
  4917                           ; simple_byte           28    15 (average)
  4918                           ;	Chosen strategy is simple_byte
  4919  0012DE  5033               	movf	??_Pot_Selector^0,w,c
  4920  0012E0  0A00               	xorlw	0	; case 0
  4921  0012E2  B4D8               	btfsc	status,2,c
  4922  0012E4  EF1F  F009         	goto	l543
  4923  0012E8  0A01               	xorlw	1	; case 1
  4924  0012EA  B4D8               	btfsc	status,2,c
  4925  0012EC  EF2D  F009         	goto	l545
  4926  0012F0  0A03               	xorlw	3	; case 2
  4927  0012F2  B4D8               	btfsc	status,2,c
  4928  0012F4  EF34  F009         	goto	l546
  4929  0012F8  0A01               	xorlw	1	; case 3
  4930  0012FA  B4D8               	btfsc	status,2,c
  4931  0012FC  EF3B  F009         	goto	l547
  4932  001300  0A07               	xorlw	7	; case 4
  4933  001302  B4D8               	btfsc	status,2,c
  4934  001304  EF42  F009         	goto	l548
  4935  001308  0A01               	xorlw	1	; case 5
  4936  00130A  B4D8               	btfsc	status,2,c
  4937  00130C  EF49  F009         	goto	l549
  4938  001310  0A03               	xorlw	3	; case 6
  4939  001312  B4D8               	btfsc	status,2,c
  4940  001314  EF50  F009         	goto	l550
  4941  001318  0A01               	xorlw	1	; case 7
  4942  00131A  B4D8               	btfsc	status,2,c
  4943  00131C  EF57  F009         	goto	l551
  4944  001320  0A0F               	xorlw	15	; case 8
  4945  001322  B4D8               	btfsc	status,2,c
  4946  001324  EF5E  F009         	goto	l552
  4947  001328  EF96  F009         	goto	l553
  4948  00132C                     l553:
  4949  00132C  0012               	return		;funcret
  4950  00132E                     __end_of_Pot_Selector:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _Lectura_Memoria *****************
  4954 ;; Defined at:
  4955 ;;		line 43 in file "EEPROM.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  direccion       1    wreg     unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  direccion       1   19[COMRAM] unsigned char 
  4960 ;;  i               2   28[COMRAM] int 
  4961 ;;  i               2   26[COMRAM] int 
  4962 ;;  potenciometr    2   24[COMRAM] unsigned char [2]
  4963 ;;  potenciometr    2   20[COMRAM] unsigned char [2]
  4964 ;;  counter         1   23[COMRAM] unsigned char 
  4965 ;;  direccionX      1   22[COMRAM] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  2   17[COMRAM] int 
  4968 ;; Registers used:
  4969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4975 ;;      Params:         2       0       0       0       0       0       0       0       0
  4976 ;;      Locals:        11       0       0       0       0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4978 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4979 ;;Total ram usage:       13 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 2
  4982 ;; This function calls:
  4983 ;;		_EEPROM_Rx
  4984 ;;		_atoi
  4985 ;; This function is called by:
  4986 ;;		_main
  4987 ;;		_Calibration_Automatic
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text38
  4992  00164C                     __ptext38:
  4993                           	callstack 0
  4994  00164C                     _Lectura_Memoria:
  4995                           	callstack 28
  4996                           
  4997                           ;incstack = 0
  4998                           ;Lectura_Memoria@direccion stored from wreg
  4999  00164C  6E45               	movwf	Lectura_Memoria@direccion^0,c
  5000  00164E                     
  5001                           ;EEPROM.c: 44:     char potenciometro[2];;EEPROM.c: 45:     char direccionX;;EEPROM.c: 4
      +                          6:     for (int i = 0; i < 2; i++) {
  5002  00164E  0E00               	movlw	0
  5003  001650  6E4D               	movwf	(Lectura_Memoria@i+1)^0,c
  5004  001652  0E00               	movlw	0
  5005  001654  6E4C               	movwf	Lectura_Memoria@i^0,c
  5006  001656                     l2557:
  5007                           
  5008                           ;EEPROM.c: 47:         direccionX = direccion + i;
  5009  001656  5045               	movf	Lectura_Memoria@direccion^0,w,c
  5010  001658  244C               	addwf	Lectura_Memoria@i^0,w,c
  5011  00165A  6E48               	movwf	Lectura_Memoria@direccionX^0,c
  5012  00165C                     
  5013                           ;EEPROM.c: 48:         potenciometro[i] = EEPROM_Rx(direccionX);
  5014  00165C  0E46               	movlw	low Lectura_Memoria@potenciometro
  5015  00165E  244C               	addwf	Lectura_Memoria@i^0,w,c
  5016  001660  6ED9               	movwf	fsr2l,c
  5017  001662  0E00               	movlw	high Lectura_Memoria@potenciometro
  5018  001664  204D               	addwfc	(Lectura_Memoria@i+1)^0,w,c
  5019  001666  6EDA               	movwf	fsr2h,c
  5020  001668  5048               	movf	Lectura_Memoria@direccionX^0,w,c
  5021  00166A  EC16  F00F         	call	_EEPROM_Rx
  5022  00166E  6EDF               	movwf	indf2,c
  5023  001670                     
  5024                           ;EEPROM.c: 49:     }
  5025  001670  4A4C               	infsnz	Lectura_Memoria@i^0,f,c
  5026  001672  2A4D               	incf	(Lectura_Memoria@i+1)^0,f,c
  5027  001674  BE4D               	btfsc	(Lectura_Memoria@i+1)^0,7,c
  5028  001676  EF46  F00B         	goto	u1331
  5029  00167A  504D               	movf	(Lectura_Memoria@i+1)^0,w,c
  5030  00167C  E109               	bnz	u1330
  5031  00167E  0E02               	movlw	2
  5032  001680  5C4C               	subwf	Lectura_Memoria@i^0,w,c
  5033  001682  A0D8               	btfss	status,0,c
  5034  001684  EF46  F00B         	goto	u1331
  5035  001688  EF48  F00B         	goto	u1330
  5036  00168C                     u1331:
  5037  00168C  EF2B  F00B         	goto	l2557
  5038  001690                     u1330:
  5039  001690                     
  5040                           ;EEPROM.c: 52:     char potenciometro_value[2];;EEPROM.c: 53:     char counter=0;
  5041  001690  0E00               	movlw	0
  5042  001692  6E49               	movwf	Lectura_Memoria@counter^0,c
  5043                           
  5044                           ;EEPROM.c: 54:      for (int i = 0; i < 2; i++) {
  5045  001694  0E00               	movlw	0
  5046  001696  6E4F               	movwf	(Lectura_Memoria@i_1218+1)^0,c
  5047  001698  0E00               	movlw	0
  5048  00169A  6E4E               	movwf	Lectura_Memoria@i_1218^0,c
  5049  00169C                     l2571:
  5050                           
  5051                           ;EEPROM.c: 55:         counter = counter + i;
  5052  00169C  5049               	movf	Lectura_Memoria@counter^0,w,c
  5053  00169E  244E               	addwf	Lectura_Memoria@i_1218^0,w,c
  5054  0016A0  6E49               	movwf	Lectura_Memoria@counter^0,c
  5055  0016A2                     
  5056                           ;EEPROM.c: 56:         potenciometro_value[i]=potenciometro[i];
  5057  0016A2  0E46               	movlw	low Lectura_Memoria@potenciometro
  5058  0016A4  244E               	addwf	Lectura_Memoria@i_1218^0,w,c
  5059  0016A6  6ED9               	movwf	fsr2l,c
  5060  0016A8  0E00               	movlw	high Lectura_Memoria@potenciometro
  5061  0016AA  204F               	addwfc	(Lectura_Memoria@i_1218+1)^0,w,c
  5062  0016AC  6EDA               	movwf	fsr2h,c
  5063  0016AE  0E4A               	movlw	low Lectura_Memoria@potenciometro_value
  5064  0016B0  244E               	addwf	Lectura_Memoria@i_1218^0,w,c
  5065  0016B2  6EE1               	movwf	fsr1l,c
  5066  0016B4  0E00               	movlw	high Lectura_Memoria@potenciometro_value
  5067  0016B6  204F               	addwfc	(Lectura_Memoria@i_1218+1)^0,w,c
  5068  0016B8  6EE2               	movwf	fsr1h,c
  5069  0016BA  CFDF FFE7          	movff	indf2,indf1
  5070  0016BE                     
  5071                           ;EEPROM.c: 57:     }
  5072  0016BE  4A4E               	infsnz	Lectura_Memoria@i_1218^0,f,c
  5073  0016C0  2A4F               	incf	(Lectura_Memoria@i_1218+1)^0,f,c
  5074  0016C2  BE4F               	btfsc	(Lectura_Memoria@i_1218+1)^0,7,c
  5075  0016C4  EF6D  F00B         	goto	u1341
  5076  0016C8  504F               	movf	(Lectura_Memoria@i_1218+1)^0,w,c
  5077  0016CA  E109               	bnz	u1340
  5078  0016CC  0E02               	movlw	2
  5079  0016CE  5C4E               	subwf	Lectura_Memoria@i_1218^0,w,c
  5080  0016D0  A0D8               	btfss	status,0,c
  5081  0016D2  EF6D  F00B         	goto	u1341
  5082  0016D6  EF6F  F00B         	goto	u1340
  5083  0016DA                     u1341:
  5084  0016DA  EF4E  F00B         	goto	l2571
  5085  0016DE                     u1340:
  5086  0016DE                     
  5087                           ;EEPROM.c: 58:     Calibration_value=atoi(potenciometro_value);
  5088  0016DE  0E4A               	movlw	low Lectura_Memoria@potenciometro_value
  5089  0016E0  6E39               	movwf	atoi@s^0,c
  5090  0016E2  0E00               	movlw	high Lectura_Memoria@potenciometro_value
  5091  0016E4  6E3A               	movwf	(atoi@s+1)^0,c
  5092  0016E6  ECC7  F006         	call	_atoi	;wreg free
  5093  0016EA  C039  F005         	movff	?_atoi,_Calibration_value
  5094  0016EE  C03A  F006         	movff	?_atoi+1,_Calibration_value+1
  5095  0016F2                     
  5096                           ;EEPROM.c: 59:     return Calibration_value;
  5097  0016F2  C005  F043         	movff	_Calibration_value,?_Lectura_Memoria
  5098  0016F6  C006  F044         	movff	_Calibration_value+1,?_Lectura_Memoria+1
  5099  0016FA  0012               	return		;funcret
  5100  0016FC                     __end_of_Lectura_Memoria:
  5101                           	callstack 0
  5102                           
  5103 ;; *************** function _atoi *****************
  5104 ;; Defined at:
  5105 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\atoi.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5108 ;;		 -> Lectura_Memoria@potenciometro_value(2), Pot(2), 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  n               2   15[COMRAM] int 
  5111 ;;  neg             2   13[COMRAM] int 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  2    7[COMRAM] int 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5121 ;;      Params:         2       0       0       0       0       0       0       0       0
  5122 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5123 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5124 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5125 ;;Total ram usage:       10 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 1
  5128 ;; This function calls:
  5129 ;;		___wmul
  5130 ;;		_isdigit
  5131 ;;		_isspace
  5132 ;; This function is called by:
  5133 ;;		_Calibration_Set
  5134 ;;		_Lectura_Memoria
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text39
  5139  000D8E                     __ptext39:
  5140                           	callstack 0
  5141  000D8E                     _atoi:
  5142                           	callstack 28
  5143  000D8E  0E00               	movlw	0
  5144  000D90  6E42               	movwf	(atoi@n+1)^0,c
  5145  000D92  0E00               	movlw	0
  5146  000D94  6E41               	movwf	atoi@n^0,c
  5147  000D96  0E00               	movlw	0
  5148  000D98  6E40               	movwf	(atoi@neg+1)^0,c
  5149  000D9A  0E00               	movlw	0
  5150  000D9C  6E3F               	movwf	atoi@neg^0,c
  5151  000D9E  EFD3  F006         	goto	l2427
  5152  000DA2                     l2423:
  5153  000DA2  4A39               	infsnz	atoi@s^0,f,c
  5154  000DA4  2A3A               	incf	(atoi@s+1)^0,f,c
  5155  000DA6                     l2427:
  5156  000DA6  C039  FFD9         	movff	atoi@s,fsr2l
  5157  000DAA  C03A  FFDA         	movff	atoi@s+1,fsr2h
  5158  000DAE  0E20               	movlw	32
  5159  000DB0  18DE               	xorwf	postinc2,w,c
  5160  000DB2  B4D8               	btfsc	status,2,c
  5161  000DB4  EFDE  F006         	goto	u1151
  5162  000DB8  EFE0  F006         	goto	u1150
  5163  000DBC                     u1151:
  5164  000DBC  EFD1  F006         	goto	l2423
  5165  000DC0                     u1150:
  5166  000DC0  0EF7               	movlw	247
  5167  000DC2  6E3B               	movwf	??_atoi^0,c
  5168  000DC4  0EFF               	movlw	255
  5169  000DC6  6E3C               	movwf	(??_atoi+1)^0,c
  5170  000DC8  C039  FFD9         	movff	atoi@s,fsr2l
  5171  000DCC  C03A  FFDA         	movff	atoi@s+1,fsr2h
  5172  000DD0  50DF               	movf	indf2,w,c
  5173  000DD2  6E3D               	movwf	(??_atoi+2)^0,c
  5174  000DD4  6A3E               	clrf	(??_atoi+3)^0,c
  5175  000DD6  503B               	movf	??_atoi^0,w,c
  5176  000DD8  263D               	addwf	(??_atoi+2)^0,f,c
  5177  000DDA  503C               	movf	(??_atoi+1)^0,w,c
  5178  000DDC  223E               	addwfc	(??_atoi+3)^0,f,c
  5179  000DDE  503E               	movf	(??_atoi+3)^0,w,c
  5180  000DE0  E109               	bnz	u1160
  5181  000DE2  0E05               	movlw	5
  5182  000DE4  5C3D               	subwf	(??_atoi+2)^0,w,c
  5183  000DE6  A0D8               	btfss	status,0,c
  5184  000DE8  EFF8  F006         	goto	u1161
  5185  000DEC  EFFA  F006         	goto	u1160
  5186  000DF0                     u1161:
  5187  000DF0  EFD1  F006         	goto	l2423
  5188  000DF4                     u1160:
  5189  000DF4  EF04  F007         	goto	l2435
  5190  000DF8                     l2431:
  5191  000DF8  0E00               	movlw	0
  5192  000DFA  6E40               	movwf	(atoi@neg+1)^0,c
  5193  000DFC  0E01               	movlw	1
  5194  000DFE  6E3F               	movwf	atoi@neg^0,c
  5195  000E00                     l2433:
  5196  000E00  4A39               	infsnz	atoi@s^0,f,c
  5197  000E02  2A3A               	incf	(atoi@s+1)^0,f,c
  5198  000E04  EF39  F007         	goto	l2443
  5199  000E08                     l2435:
  5200  000E08  C039  FFD9         	movff	atoi@s,fsr2l
  5201  000E0C  C03A  FFDA         	movff	atoi@s+1,fsr2h
  5202  000E10  50DF               	movf	indf2,w,c
  5203  000E12  6E3B               	movwf	??_atoi^0,c
  5204  000E14  6A3C               	clrf	(??_atoi+1)^0,c
  5205                           
  5206                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5207                           ; Switch size 1, requested type "simple"
  5208                           ; Number of cases is 1, Range of values is 0 to 0
  5209                           ; switch strategies available:
  5210                           ; Name         Instructions Cycles
  5211                           ; simple_byte            4     3 (average)
  5212                           ;	Chosen strategy is simple_byte
  5213  000E16  503C               	movf	(??_atoi+1)^0,w,c
  5214  000E18  0A00               	xorlw	0	; case 0
  5215  000E1A  B4D8               	btfsc	status,2,c
  5216  000E1C  EF12  F007         	goto	l3115
  5217  000E20  EF39  F007         	goto	l2443
  5218  000E24                     l3115:
  5219                           
  5220                           ; Switch size 1, requested type "simple"
  5221                           ; Number of cases is 2, Range of values is 43 to 45
  5222                           ; switch strategies available:
  5223                           ; Name         Instructions Cycles
  5224                           ; simple_byte            7     4 (average)
  5225                           ;	Chosen strategy is simple_byte
  5226  000E24  503B               	movf	??_atoi^0,w,c
  5227  000E26  0A2B               	xorlw	43	; case 43
  5228  000E28  B4D8               	btfsc	status,2,c
  5229  000E2A  EF00  F007         	goto	l2433
  5230  000E2E  0A06               	xorlw	6	; case 45
  5231  000E30  B4D8               	btfsc	status,2,c
  5232  000E32  EFFC  F006         	goto	l2431
  5233  000E36  EF39  F007         	goto	l2443
  5234  000E3A                     l2437:
  5235  000E3A  C041  F032         	movff	atoi@n,___wmul@multiplier
  5236  000E3E  C042  F033         	movff	atoi@n+1,___wmul@multiplier+1
  5237  000E42  0E00               	movlw	0
  5238  000E44  6E35               	movwf	(___wmul@multiplicand+1)^0,c
  5239  000E46  0E0A               	movlw	10
  5240  000E48  6E34               	movwf	___wmul@multiplicand^0,c
  5241  000E4A  ECDC  F00E         	call	___wmul	;wreg free
  5242  000E4E  C039  FFD9         	movff	atoi@s,fsr2l
  5243  000E52  C03A  FFDA         	movff	atoi@s+1,fsr2h
  5244  000E56  50DF               	movf	indf2,w,c
  5245  000E58  6E3B               	movwf	??_atoi^0,c
  5246  000E5A  503B               	movf	??_atoi^0,w,c
  5247  000E5C  5E32               	subwf	?___wmul^0,f,c
  5248  000E5E  0E00               	movlw	0
  5249  000E60  5A33               	subwfb	(?___wmul+1)^0,f,c
  5250  000E62  0E30               	movlw	48
  5251  000E64  2432               	addwf	?___wmul^0,w,c
  5252  000E66  6E41               	movwf	atoi@n^0,c
  5253  000E68  0E00               	movlw	0
  5254  000E6A  2033               	addwfc	(?___wmul+1)^0,w,c
  5255  000E6C  6E42               	movwf	(atoi@n+1)^0,c
  5256  000E6E  EF00  F007         	goto	l2433
  5257  000E72                     l2443:
  5258  000E72  0ED0               	movlw	208
  5259  000E74  6E3B               	movwf	??_atoi^0,c
  5260  000E76  0EFF               	movlw	255
  5261  000E78  6E3C               	movwf	(??_atoi+1)^0,c
  5262  000E7A  C039  FFD9         	movff	atoi@s,fsr2l
  5263  000E7E  C03A  FFDA         	movff	atoi@s+1,fsr2h
  5264  000E82  50DF               	movf	indf2,w,c
  5265  000E84  6E3D               	movwf	(??_atoi+2)^0,c
  5266  000E86  6A3E               	clrf	(??_atoi+3)^0,c
  5267  000E88  503B               	movf	??_atoi^0,w,c
  5268  000E8A  263D               	addwf	(??_atoi+2)^0,f,c
  5269  000E8C  503C               	movf	(??_atoi+1)^0,w,c
  5270  000E8E  223E               	addwfc	(??_atoi+3)^0,f,c
  5271  000E90  503E               	movf	(??_atoi+3)^0,w,c
  5272  000E92  E109               	bnz	u1170
  5273  000E94  0E0A               	movlw	10
  5274  000E96  5C3D               	subwf	(??_atoi+2)^0,w,c
  5275  000E98  A0D8               	btfss	status,0,c
  5276  000E9A  EF51  F007         	goto	u1171
  5277  000E9E  EF53  F007         	goto	u1170
  5278  000EA2                     u1171:
  5279  000EA2  EF1D  F007         	goto	l2437
  5280  000EA6                     u1170:
  5281  000EA6  503F               	movf	atoi@neg^0,w,c
  5282  000EA8  1040               	iorwf	(atoi@neg+1)^0,w,c
  5283  000EAA  A4D8               	btfss	status,2,c
  5284  000EAC  EF5A  F007         	goto	u1181
  5285  000EB0  EF5C  F007         	goto	u1180
  5286  000EB4                     u1181:
  5287  000EB4  EF6A  F007         	goto	l1337
  5288  000EB8                     u1180:
  5289  000EB8  C041  F03B         	movff	atoi@n,??_atoi
  5290  000EBC  C042  F03C         	movff	atoi@n+1,??_atoi+1
  5291  000EC0  1E3B               	comf	??_atoi^0,f,c
  5292  000EC2  1E3C               	comf	(??_atoi+1)^0,f,c
  5293  000EC4  4A3B               	infsnz	??_atoi^0,f,c
  5294  000EC6  2A3C               	incf	(??_atoi+1)^0,f,c
  5295  000EC8  C03B  F039         	movff	??_atoi,?_atoi
  5296  000ECC  C03C  F03A         	movff	??_atoi+1,?_atoi+1
  5297  000ED0  EF6E  F007         	goto	l1340
  5298  000ED4                     l1337:
  5299  000ED4  C041  F039         	movff	atoi@n,?_atoi
  5300  000ED8  C042  F03A         	movff	atoi@n+1,?_atoi+1
  5301  000EDC                     l1340:
  5302  000EDC  0012               	return		;funcret
  5303  000EDE                     __end_of_atoi:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _isspace *****************
  5307 ;; Defined at:
  5308 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isspace.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  c               2    0[COMRAM] int 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  2    0[COMRAM] int 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5322 ;;      Params:         2       0       0       0       0       0       0       0       0
  5323 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5324 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5325 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5326 ;;Total ram usage:        7 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		_atoi
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text40
  5336  001A8A                     __ptext40:
  5337                           	callstack 0
  5338  001A8A                     _isspace:
  5339                           	callstack 28
  5340  001A8A  0E01               	movlw	1
  5341  001A8C  6E38               	movwf	_isspace$1693^0,c
  5342  001A8E  0E20               	movlw	32
  5343  001A90  1832               	xorwf	isspace@c^0,w,c
  5344  001A92  1033               	iorwf	(isspace@c+1)^0,w,c
  5345  001A94  B4D8               	btfsc	status,2,c
  5346  001A96  EF4F  F00D         	goto	u1051
  5347  001A9A  EF51  F00D         	goto	u1050
  5348  001A9E                     u1051:
  5349  001A9E  EF6A  F00D         	goto	l2383
  5350  001AA2                     u1050:
  5351  001AA2  0EF7               	movlw	247
  5352  001AA4  6E34               	movwf	??_isspace^0,c
  5353  001AA6  0EFF               	movlw	255
  5354  001AA8  6E35               	movwf	(??_isspace+1)^0,c
  5355  001AAA  C032  F036         	movff	isspace@c,??_isspace+2
  5356  001AAE  C033  F037         	movff	isspace@c+1,??_isspace+3
  5357  001AB2  5034               	movf	??_isspace^0,w,c
  5358  001AB4  2636               	addwf	(??_isspace+2)^0,f,c
  5359  001AB6  5035               	movf	(??_isspace+1)^0,w,c
  5360  001AB8  2237               	addwfc	(??_isspace+3)^0,f,c
  5361  001ABA  5037               	movf	(??_isspace+3)^0,w,c
  5362  001ABC  E109               	bnz	u1060
  5363  001ABE  0E05               	movlw	5
  5364  001AC0  5C36               	subwf	(??_isspace+2)^0,w,c
  5365  001AC2  A0D8               	btfss	status,0,c
  5366  001AC4  EF66  F00D         	goto	u1061
  5367  001AC8  EF68  F00D         	goto	u1060
  5368  001ACC                     u1061:
  5369  001ACC  EF6A  F00D         	goto	l2383
  5370  001AD0                     u1060:
  5371  001AD0  0E00               	movlw	0
  5372  001AD2  6E38               	movwf	_isspace$1693^0,c
  5373  001AD4                     l2383:
  5374  001AD4  C038  F032         	movff	_isspace$1693,?_isspace
  5375  001AD8  6A33               	clrf	(?_isspace+1)^0,c
  5376  001ADA  0012               	return		;funcret
  5377  001ADC                     __end_of_isspace:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _isdigit *****************
  5381 ;; Defined at:
  5382 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\isdigit.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  c               2    0[COMRAM] int 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;		None
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  2    0[COMRAM] int 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, status,0
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5396 ;;      Params:         2       0       0       0       0       0       0       0       0
  5397 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5398 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5399 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5400 ;;Total ram usage:        6 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_atoi
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text41
  5410  001D28                     __ptext41:
  5411                           	callstack 0
  5412  001D28                     _isdigit:
  5413                           	callstack 28
  5414  001D28  0ED0               	movlw	208
  5415  001D2A  6E34               	movwf	??_isdigit^0,c
  5416  001D2C  0EFF               	movlw	255
  5417  001D2E  6E35               	movwf	(??_isdigit+1)^0,c
  5418  001D30  C032  F036         	movff	isdigit@c,??_isdigit+2
  5419  001D34  C033  F037         	movff	isdigit@c+1,??_isdigit+3
  5420  001D38  5034               	movf	??_isdigit^0,w,c
  5421  001D3A  2636               	addwf	(??_isdigit+2)^0,f,c
  5422  001D3C  5035               	movf	(??_isdigit+1)^0,w,c
  5423  001D3E  2237               	addwfc	(??_isdigit+3)^0,f,c
  5424  001D40  5037               	movf	(??_isdigit+3)^0,w,c
  5425  001D42  E10A               	bnz	u1070
  5426  001D44  0E0A               	movlw	10
  5427  001D46  5C36               	subwf	(??_isdigit+2)^0,w,c
  5428  001D48  A0D8               	btfss	status,0,c
  5429  001D4A  EFA9  F00E         	goto	u1071
  5430  001D4E  EFAC  F00E         	goto	u1070
  5431  001D52                     u1071:
  5432  001D52  0E01               	movlw	1
  5433  001D54  EFAD  F00E         	goto	u1080
  5434  001D58                     u1070:
  5435  001D58  0E00               	movlw	0
  5436  001D5A                     u1080:
  5437  001D5A  6E32               	movwf	?_isdigit^0,c
  5438  001D5C  6A33               	clrf	(?_isdigit+1)^0,c
  5439  001D5E  0012               	return		;funcret
  5440  001D60                     __end_of_isdigit:
  5441                           	callstack 0
  5442                           
  5443 ;; *************** function ___wmul *****************
  5444 ;; Defined at:
  5445 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  multiplier      2    0[COMRAM] unsigned int 
  5448 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  product         2    4[COMRAM] unsigned int 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  2    0[COMRAM] unsigned int 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0, prodl, prodh
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5460 ;;      Params:         4       0       0       0       0       0       0       0       0
  5461 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5463 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5464 ;;Total ram usage:        6 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_atoi
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text42
  5474  001DB8                     __ptext42:
  5475                           	callstack 0
  5476  001DB8                     ___wmul:
  5477                           	callstack 28
  5478  001DB8  5032               	movf	___wmul@multiplier^0,w,c
  5479  001DBA  0234               	mulwf	___wmul@multiplicand^0,c
  5480  001DBC  CFF3 F036          	movff	prodl,___wmul@product
  5481  001DC0  CFF4 F037          	movff	prodh,___wmul@product+1
  5482  001DC4  5032               	movf	___wmul@multiplier^0,w,c
  5483  001DC6  0235               	mulwf	(___wmul@multiplicand+1)^0,c
  5484  001DC8  50F3               	movf	243,w,c
  5485  001DCA  2637               	addwf	(___wmul@product+1)^0,f,c
  5486  001DCC  5033               	movf	(___wmul@multiplier+1)^0,w,c
  5487  001DCE  0234               	mulwf	___wmul@multiplicand^0,c
  5488  001DD0  50F3               	movf	243,w,c
  5489  001DD2  2637               	addwf	(___wmul@product+1)^0,f,c
  5490  001DD4  C036  F032         	movff	___wmul@product,?___wmul
  5491  001DD8  C037  F033         	movff	___wmul@product+1,?___wmul+1
  5492  001DDC  0012               	return		;funcret
  5493  001DDE                     __end_of___wmul:
  5494                           	callstack 0
  5495                           
  5496 ;; *************** function _EEPROM_Rx *****************
  5497 ;; Defined at:
  5498 ;;		line 18 in file "EEPROM.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  direccion       1    wreg     unsigned char 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  direccion       1    0[COMRAM] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      unsigned char 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0
  5513 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5515 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5516 ;;Total ram usage:        1 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_Lectura_Memoria
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text43
  5526  001E2C                     __ptext43:
  5527                           	callstack 0
  5528  001E2C                     _EEPROM_Rx:
  5529                           	callstack 29
  5530                           
  5531                           ;incstack = 0
  5532                           ;EEPROM_Rx@direccion stored from wreg
  5533  001E2C  6E32               	movwf	EEPROM_Rx@direccion^0,c
  5534  001E2E                     
  5535                           ;EEPROM.c: 19:     EEADR=direccion;
  5536  001E2E  C032  FFA9         	movff	EEPROM_Rx@direccion,4009	;volatile
  5537  001E32                     
  5538                           ;EEPROM.c: 20:     EECON1bits.EEPGD=0;
  5539  001E32  9EA6               	bcf	166,7,c	;volsfr
  5540  001E34                     
  5541                           ;EEPROM.c: 21:       EECON1bits.CFGS=0;
  5542  001E34  9CA6               	bcf	166,6,c	;volsfr
  5543  001E36                     
  5544                           ;EEPROM.c: 22:       EECON1bits.RD=1;
  5545  001E36  80A6               	bsf	166,0,c	;volsfr
  5546  001E38                     
  5547                           ;EEPROM.c: 23:       data=EEDATA;
  5548  001E38  CFA8 F025          	movff	4008,_data	;volatile
  5549  001E3C                     
  5550                           ;EEPROM.c: 24:       return data;
  5551  001E3C  5025               	movf	_data^0,w,c
  5552  001E3E  0012               	return		;funcret
  5553  001E40                     __end_of_EEPROM_Rx:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _EEPROM_Decodificacion_Memoria *****************
  5557 ;; Defined at:
  5558 ;;		line 68 in file "EEPROM.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  direccion       1    wreg     unsigned char 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  direccion       1    2[COMRAM] unsigned char 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      unsigned char 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2, status,0
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5572 ;;      Params:         0       0       0       0       0       0       0       0       0
  5573 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5574 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5575 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5576 ;;Total ram usage:        3 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_main
  5582 ;;		_Calibration_Run
  5583 ;;		_Calibration_Automatic
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text44
  5588  001008                     __ptext44:
  5589                           	callstack 0
  5590  001008                     _EEPROM_Decodificacion_Memoria:
  5591                           	callstack 30
  5592                           
  5593                           ;incstack = 0
  5594                           ;EEPROM_Decodificacion_Memoria@direccion stored from wreg
  5595  001008  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5596  00100A                     
  5597                           ;EEPROM.c: 69:     switch (direccion) {
  5598  00100A  EF47  F008         	goto	l1671
  5599  00100E                     l1637:
  5600                           
  5601                           ;EEPROM.c: 71:             direccion = 0x00;
  5602  00100E  0E00               	movlw	0
  5603  001010  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5604                           
  5605                           ;EEPROM.c: 73:             break;
  5606  001012  EF94  F008         	goto	l1673
  5607  001016                     l1639:
  5608                           
  5609                           ;EEPROM.c: 75:             direccion = 0x10;
  5610  001016  0E10               	movlw	16
  5611  001018  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5612                           
  5613                           ;EEPROM.c: 77:             break;
  5614  00101A  EF94  F008         	goto	l1673
  5615  00101E                     l1641:
  5616                           
  5617                           ;EEPROM.c: 79:             direccion = 0x20;
  5618  00101E  0E20               	movlw	32
  5619  001020  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5620                           
  5621                           ;EEPROM.c: 81:             break;
  5622  001022  EF94  F008         	goto	l1673
  5623  001026                     l1643:
  5624                           
  5625                           ;EEPROM.c: 83:             direccion = 0x30;
  5626  001026  0E30               	movlw	48
  5627  001028  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5628                           
  5629                           ;EEPROM.c: 85:             break;
  5630  00102A  EF94  F008         	goto	l1673
  5631  00102E                     l1645:
  5632                           
  5633                           ;EEPROM.c: 87:             direccion = 0x40;
  5634  00102E  0E40               	movlw	64
  5635  001030  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5636                           
  5637                           ;EEPROM.c: 89:             break;
  5638  001032  EF94  F008         	goto	l1673
  5639  001036                     l1647:
  5640                           
  5641                           ;EEPROM.c: 91:             direccion = 0x50;
  5642  001036  0E50               	movlw	80
  5643  001038  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5644                           
  5645                           ;EEPROM.c: 93:             break;
  5646  00103A  EF94  F008         	goto	l1673
  5647  00103E                     l1649:
  5648                           
  5649                           ;EEPROM.c: 95:             direccion = 0x60;
  5650  00103E  0E60               	movlw	96
  5651  001040  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5652                           
  5653                           ;EEPROM.c: 97:             break;
  5654  001042  EF94  F008         	goto	l1673
  5655  001046                     l1651:
  5656                           
  5657                           ;EEPROM.c: 99:             direccion = 0x70;
  5658  001046  0E70               	movlw	112
  5659  001048  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5660                           
  5661                           ;EEPROM.c: 101:             break;
  5662  00104A  EF94  F008         	goto	l1673
  5663  00104E                     l1653:
  5664                           
  5665                           ;EEPROM.c: 103:             direccion = 0x80;
  5666  00104E  0E80               	movlw	128
  5667  001050  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5668                           
  5669                           ;EEPROM.c: 105:             break;
  5670  001052  EF94  F008         	goto	l1673
  5671  001056                     l1655:
  5672                           
  5673                           ;EEPROM.c: 107:             direccion = 0x90;
  5674  001056  0E90               	movlw	144
  5675  001058  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5676                           
  5677                           ;EEPROM.c: 109:             break;
  5678  00105A  EF94  F008         	goto	l1673
  5679  00105E                     l1657:
  5680                           
  5681                           ;EEPROM.c: 111:             direccion = 0xA0;
  5682  00105E  0EA0               	movlw	160
  5683  001060  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5684                           
  5685                           ;EEPROM.c: 113:             break;
  5686  001062  EF94  F008         	goto	l1673
  5687  001066                     l1659:
  5688                           
  5689                           ;EEPROM.c: 115:             direccion = 0xB0;
  5690  001066  0EB0               	movlw	176
  5691  001068  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5692                           
  5693                           ;EEPROM.c: 117:             break;
  5694  00106A  EF94  F008         	goto	l1673
  5695  00106E                     l1661:
  5696                           
  5697                           ;EEPROM.c: 119:             direccion = 0xC0;
  5698  00106E  0EC0               	movlw	192
  5699  001070  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5700                           
  5701                           ;EEPROM.c: 121:             break;
  5702  001072  EF94  F008         	goto	l1673
  5703  001076                     l1663:
  5704                           
  5705                           ;EEPROM.c: 123:             direccion = 0xD0;
  5706  001076  0ED0               	movlw	208
  5707  001078  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5708                           
  5709                           ;EEPROM.c: 125:             break;
  5710  00107A  EF94  F008         	goto	l1673
  5711  00107E                     l1665:
  5712                           
  5713                           ;EEPROM.c: 127:             direccion = 0xE0;
  5714  00107E  0EE0               	movlw	224
  5715  001080  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5716                           
  5717                           ;EEPROM.c: 129:             break;
  5718  001082  EF94  F008         	goto	l1673
  5719  001086                     l1667:
  5720                           
  5721                           ;EEPROM.c: 131:             direccion = 0xF0;
  5722  001086  0EF0               	movlw	240
  5723  001088  6E34               	movwf	EEPROM_Decodificacion_Memoria@direccion^0,c
  5724                           
  5725                           ;EEPROM.c: 133:             break;
  5726  00108A  EF94  F008         	goto	l1673
  5727  00108E                     l1671:
  5728  00108E  5034               	movf	EEPROM_Decodificacion_Memoria@direccion^0,w,c
  5729  001090  6E32               	movwf	??_EEPROM_Decodificacion_Memoria^0,c
  5730  001092  6A33               	clrf	(??_EEPROM_Decodificacion_Memoria+1)^0,c
  5731                           
  5732                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5733                           ; Switch size 1, requested type "simple"
  5734                           ; Number of cases is 1, Range of values is 0 to 0
  5735                           ; switch strategies available:
  5736                           ; Name         Instructions Cycles
  5737                           ; simple_byte            4     3 (average)
  5738                           ;	Chosen strategy is simple_byte
  5739  001094  5033               	movf	(??_EEPROM_Decodificacion_Memoria+1)^0,w,c
  5740  001096  0A00               	xorlw	0	; case 0
  5741  001098  B4D8               	btfsc	status,2,c
  5742  00109A  EF51  F008         	goto	l3117
  5743  00109E  EF94  F008         	goto	l1673
  5744  0010A2                     l3117:
  5745                           
  5746                           ; Switch size 1, requested type "simple"
  5747                           ; Number of cases is 16, Range of values is 0 to 70
  5748                           ; switch strategies available:
  5749                           ; Name         Instructions Cycles
  5750                           ; simple_byte           49    25 (average)
  5751                           ;	Chosen strategy is simple_byte
  5752  0010A2  5032               	movf	??_EEPROM_Decodificacion_Memoria^0,w,c
  5753  0010A4  0A00               	xorlw	0	; case 0
  5754  0010A6  B4D8               	btfsc	status,2,c
  5755  0010A8  EF07  F008         	goto	l1637
  5756  0010AC  0A01               	xorlw	1	; case 1
  5757  0010AE  B4D8               	btfsc	status,2,c
  5758  0010B0  EF0B  F008         	goto	l1639
  5759  0010B4  0A03               	xorlw	3	; case 2
  5760  0010B6  B4D8               	btfsc	status,2,c
  5761  0010B8  EF0F  F008         	goto	l1641
  5762  0010BC  0A01               	xorlw	1	; case 3
  5763  0010BE  B4D8               	btfsc	status,2,c
  5764  0010C0  EF13  F008         	goto	l1643
  5765  0010C4  0A07               	xorlw	7	; case 4
  5766  0010C6  B4D8               	btfsc	status,2,c
  5767  0010C8  EF17  F008         	goto	l1645
  5768  0010CC  0A01               	xorlw	1	; case 5
  5769  0010CE  B4D8               	btfsc	status,2,c
  5770  0010D0  EF1B  F008         	goto	l1647
  5771  0010D4  0A03               	xorlw	3	; case 6
  5772  0010D6  B4D8               	btfsc	status,2,c
  5773  0010D8  EF1F  F008         	goto	l1649
  5774  0010DC  0A01               	xorlw	1	; case 7
  5775  0010DE  B4D8               	btfsc	status,2,c
  5776  0010E0  EF23  F008         	goto	l1651
  5777  0010E4  0A0F               	xorlw	15	; case 8
  5778  0010E6  B4D8               	btfsc	status,2,c
  5779  0010E8  EF27  F008         	goto	l1653
  5780  0010EC  0A31               	xorlw	49	; case 57
  5781  0010EE  B4D8               	btfsc	status,2,c
  5782  0010F0  EF2B  F008         	goto	l1655
  5783  0010F4  0A78               	xorlw	120	; case 65
  5784  0010F6  B4D8               	btfsc	status,2,c
  5785  0010F8  EF2F  F008         	goto	l1657
  5786  0010FC  0A03               	xorlw	3	; case 66
  5787  0010FE  B4D8               	btfsc	status,2,c
  5788  001100  EF33  F008         	goto	l1659
  5789  001104  0A01               	xorlw	1	; case 67
  5790  001106  B4D8               	btfsc	status,2,c
  5791  001108  EF37  F008         	goto	l1661
  5792  00110C  0A07               	xorlw	7	; case 68
  5793  00110E  B4D8               	btfsc	status,2,c
  5794  001110  EF3B  F008         	goto	l1663
  5795  001114  0A01               	xorlw	1	; case 69
  5796  001116  B4D8               	btfsc	status,2,c
  5797  001118  EF3F  F008         	goto	l1665
  5798  00111C  0A03               	xorlw	3	; case 70
  5799  00111E  B4D8               	btfsc	status,2,c
  5800  001120  EF43  F008         	goto	l1667
  5801  001124  EF94  F008         	goto	l1673
  5802  001128                     l1673:
  5803                           
  5804                           ;EEPROM.c: 135:     return direccion;
  5805  001128  5034               	movf	EEPROM_Decodificacion_Memoria@direccion^0,w,c
  5806  00112A  0012               	return		;funcret
  5807  00112C                     __end_of_EEPROM_Decodificacion_Memoria:
  5808                           	callstack 0
  5809                           
  5810                           	psect	rparam
  5811  0000                     
  5812                           	psect	idloc
  5813                           
  5814                           ;Config register IDLOC0 @ 0x200000
  5815                           ;	unspecified, using default values
  5816  200000                     	org	2097152
  5817  200000  FF                 	db	255
  5818                           
  5819                           ;Config register IDLOC1 @ 0x200001
  5820                           ;	unspecified, using default values
  5821  200001                     	org	2097153
  5822  200001  FF                 	db	255
  5823                           
  5824                           ;Config register IDLOC2 @ 0x200002
  5825                           ;	unspecified, using default values
  5826  200002                     	org	2097154
  5827  200002  FF                 	db	255
  5828                           
  5829                           ;Config register IDLOC3 @ 0x200003
  5830                           ;	unspecified, using default values
  5831  200003                     	org	2097155
  5832  200003  FF                 	db	255
  5833                           
  5834                           ;Config register IDLOC4 @ 0x200004
  5835                           ;	unspecified, using default values
  5836  200004                     	org	2097156
  5837  200004  FF                 	db	255
  5838                           
  5839                           ;Config register IDLOC5 @ 0x200005
  5840                           ;	unspecified, using default values
  5841  200005                     	org	2097157
  5842  200005  FF                 	db	255
  5843                           
  5844                           ;Config register IDLOC6 @ 0x200006
  5845                           ;	unspecified, using default values
  5846  200006                     	org	2097158
  5847  200006  FF                 	db	255
  5848                           
  5849                           ;Config register IDLOC7 @ 0x200007
  5850                           ;	unspecified, using default values
  5851  200007                     	org	2097159
  5852  200007  FF                 	db	255
  5853                           
  5854                           	psect	config
  5855                           
  5856                           ;Config register CONFIG1L @ 0x300000
  5857                           ;	PLL Prescaler Selection bits
  5858                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  5859                           ;	System Clock Postscaler Selection bits
  5860                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5861                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5862                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5863  300000                     	org	3145728
  5864  300000  00                 	db	0
  5865                           
  5866                           ;Config register CONFIG1H @ 0x300001
  5867                           ;	Oscillator Selection bits
  5868                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5869                           ;	Fail-Safe Clock Monitor Enable bit
  5870                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5871                           ;	Internal/External Oscillator Switchover bit
  5872                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5873  300001                     	org	3145729
  5874  300001  09                 	db	9
  5875                           
  5876                           ;Config register CONFIG2L @ 0x300002
  5877                           ;	Power-up Timer Enable bit
  5878                           ;	PWRT = ON, PWRT enabled
  5879                           ;	Brown-out Reset Enable bits
  5880                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5881                           ;	Brown-out Reset Voltage bits
  5882                           ;	BORV = 3, Minimum setting 2.05V
  5883                           ;	USB Voltage Regulator Enable bit
  5884                           ;	VREGEN = OFF, USB voltage regulator disabled
  5885  300002                     	org	3145730
  5886  300002  18                 	db	24
  5887                           
  5888                           ;Config register CONFIG2H @ 0x300003
  5889                           ;	Watchdog Timer Enable bit
  5890                           ;	WDT = ON, WDT enabled
  5891                           ;	Watchdog Timer Postscale Select bits
  5892                           ;	WDTPS = 32768, 1:32768
  5893  300003                     	org	3145731
  5894  300003  1F                 	db	31
  5895                           
  5896                           ; Padding undefined space
  5897  300004                     	org	3145732
  5898  300004  FF                 	db	255
  5899                           
  5900                           ;Config register CONFIG3H @ 0x300005
  5901                           ;	CCP2 MUX bit
  5902                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5903                           ;	PORTB A/D Enable bit
  5904                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5905                           ;	Low-Power Timer 1 Oscillator Enable bit
  5906                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5907                           ;	MCLR Pin Enable bit
  5908                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5909  300005                     	org	3145733
  5910  300005  83                 	db	131
  5911                           
  5912                           ;Config register CONFIG4L @ 0x300006
  5913                           ;	Stack Full/Underflow Reset Enable bit
  5914                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5915                           ;	Single-Supply ICSP Enable bit
  5916                           ;	LVP = ON, Single-Supply ICSP enabled
  5917                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5918                           ;	ICPRT = OFF, ICPORT disabled
  5919                           ;	Extended Instruction Set Enable bit
  5920                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5921                           ;	Background Debugger Enable bit
  5922                           ;	DEBUG = 0x1, unprogrammed default
  5923  300006                     	org	3145734
  5924  300006  85                 	db	133
  5925                           
  5926                           ; Padding undefined space
  5927  300007                     	org	3145735
  5928  300007  FF                 	db	255
  5929                           
  5930                           ;Config register CONFIG5L @ 0x300008
  5931                           ;	Code Protection bit
  5932                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5933                           ;	Code Protection bit
  5934                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5935                           ;	Code Protection bit
  5936                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5937                           ;	Code Protection bit
  5938                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5939  300008                     	org	3145736
  5940  300008  0F                 	db	15
  5941                           
  5942                           ;Config register CONFIG5H @ 0x300009
  5943                           ;	Boot Block Code Protection bit
  5944                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5945                           ;	Data EEPROM Code Protection bit
  5946                           ;	CPD = OFF, Data EEPROM is not code-protected
  5947  300009                     	org	3145737
  5948  300009  C0                 	db	192
  5949                           
  5950                           ;Config register CONFIG6L @ 0x30000A
  5951                           ;	Write Protection bit
  5952                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5953                           ;	Write Protection bit
  5954                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5955                           ;	Write Protection bit
  5956                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5957                           ;	Write Protection bit
  5958                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5959  30000A                     	org	3145738
  5960  30000A  0F                 	db	15
  5961                           
  5962                           ;Config register CONFIG6H @ 0x30000B
  5963                           ;	Configuration Register Write Protection bit
  5964                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5965                           ;	Boot Block Write Protection bit
  5966                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5967                           ;	Data EEPROM Write Protection bit
  5968                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5969  30000B                     	org	3145739
  5970  30000B  E0                 	db	224
  5971                           
  5972                           ;Config register CONFIG7L @ 0x30000C
  5973                           ;	Table Read Protection bit
  5974                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5975                           ;	Table Read Protection bit
  5976                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5977                           ;	Table Read Protection bit
  5978                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5979                           ;	Table Read Protection bit
  5980                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5981  30000C                     	org	3145740
  5982  30000C  0F                 	db	15
  5983                           
  5984                           ;Config register CONFIG7H @ 0x30000D
  5985                           ;	Boot Block Table Read Protection bit
  5986                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5987  30000D                     	org	3145741
  5988  30000D  40                 	db	64
  5989                           tosu	equ	0xFFF
  5990                           tosh	equ	0xFFE
  5991                           tosl	equ	0xFFD
  5992                           stkptr	equ	0xFFC
  5993                           pclatu	equ	0xFFB
  5994                           pclath	equ	0xFFA
  5995                           pcl	equ	0xFF9
  5996                           tblptru	equ	0xFF8
  5997                           tblptrh	equ	0xFF7
  5998                           tblptrl	equ	0xFF6
  5999                           tablat	equ	0xFF5
  6000                           prodh	equ	0xFF4
  6001                           prodl	equ	0xFF3
  6002                           indf0	equ	0xFEF
  6003                           postinc0	equ	0xFEE
  6004                           postdec0	equ	0xFED
  6005                           preinc0	equ	0xFEC
  6006                           plusw0	equ	0xFEB
  6007                           fsr0h	equ	0xFEA
  6008                           fsr0l	equ	0xFE9
  6009                           wreg	equ	0xFE8
  6010                           indf1	equ	0xFE7
  6011                           postinc1	equ	0xFE6
  6012                           postdec1	equ	0xFE5
  6013                           preinc1	equ	0xFE4
  6014                           plusw1	equ	0xFE3
  6015                           fsr1h	equ	0xFE2
  6016                           fsr1l	equ	0xFE1
  6017                           bsr	equ	0xFE0
  6018                           indf2	equ	0xFDF
  6019                           postinc2	equ	0xFDE
  6020                           postdec2	equ	0xFDD
  6021                           preinc2	equ	0xFDC
  6022                           plusw2	equ	0xFDB
  6023                           fsr2h	equ	0xFDA
  6024                           fsr2l	equ	0xFD9
  6025                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        5
    BSS         82
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      93
    BANK0           160      0      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[2]), result(BANK0[33]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[2]), result(BANK0[33]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 33
		 -> result(BANK0[33]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 33
		 -> result(BANK0[33]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), cadena(COMRAM[4]), 
		 -> STR_1(CODE[3]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), cadena(COMRAM[4]), 
		 -> STR_1(CODE[3]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), cadena(COMRAM[4]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 33
		 -> result(BANK0[33]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 2
		 -> Lectura_Memoria@potenciometro_value(COMRAM[2]), Pot(COMRAM[2]), 

    Escritura_Memoria@string_pot	PTR unsigned char  size(2) Largest target is 2
		 -> Pot(COMRAM[2]), 

    USART_RxS@pointer	PTR unsigned char  size(2) Largest target is 2
		 -> Pot(COMRAM[2]), 

    USART_TxS@str	PTR unsigned char  size(2) Largest target is 33
		 -> STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[2]), result(BANK0[33]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 33
		 -> result(BANK0[33]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 33
		 -> result(BANK0[33]), 

    Concat_Value@id	PTR unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    changeInt@str	PTR unsigned char  size(2) Largest target is 4
		 -> cadena(COMRAM[4]), 

    changeInt@wstr	PTR unsigned char  size(2) Largest target is 4
		 -> cadena(COMRAM[4]), 

    strreverse@begin	PTR unsigned char  size(2) Largest target is 4
		 -> cadena(COMRAM[4]), 

    strreverse@end	PTR unsigned char  size(2) Largest target is 4
		 -> cadena(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _Run_Protocol->_Concat_Value
    _Concat_Value->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _changeInt->___awdiv
    _ADC_LecturaFiltro->___aldiv
    _Pot_Set_Vref->_Pot_Increase_Vref
    _Pot_Reset_Vref->_Pot_Decrease_Vref
    _Pot_Decrease_Vref->_Pot_Change_Vref
    _Pot_Increase_Vref->_Pot_Change_Vref
    _Pot_Change_Vref->_Pot_Selector
    _InitPort->_USART_Init
    _USART_Init->___aldiv
    _Calibration_Init->_Pot_Init
    _Calibration_Run->_Calibration_Automatic
    _USART_RxC->_USART_Overflow
    _Escritura_Memoria->_EEPROM_Tx
    _Calibration_Set->_USART_RxS
    _USART_RxS->_USART_Overflow
    _USART_Overflow->_USART_TxS
    _USART_TxS->_strlen
    _Calibration_Automatic->_Lectura_Memoria
    _Pot_Set->_Pot_Reset
    _Pot_Reset->_Pot_Decrease
    _Pot_Decrease->_Pot_Change
    _Pot_Increase->_Pot_Change
    _Pot_Change->_Pot_Selector
    _Lectura_Memoria->_atoi
    _atoi->_isspace

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   28598
                                             36 COMRAM     3     3      0
                    _Calibration_Run
      _EEPROM_Decodificacion_Memoria
                           _InitPort
                    _Lectura_Memoria
                       _Pot_Set_Vref
                       _Run_Protocol
                          _USART_RxC
                          _USART_TxS
 ---------------------------------------------------------------------------------
 (1) _Run_Protocol                                         0     0      0   10523
                  _ADC_LecturaFiltro
                       _Concat_Value
                          _USART_TxS
 ---------------------------------------------------------------------------------
 (2) _Concat_Value                                        18     0     18    7253
                                             18 COMRAM    18     0     18
                          _changeInt
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     0      4    2994
                                             14 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                              10     6      4     400
                                              4 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _changeInt                                           12     8      4    2977
                                              8 COMRAM     8     4      4
                            ___awdiv
                            ___awmod
                         _strreverse
 ---------------------------------------------------------------------------------
 (4) _strreverse                                           5     1      4     309
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_LecturaFiltro                                   11     8      3    2459
                                             14 COMRAM    11     8      3
                     _Leer_Canal_ADC
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) _Leer_Canal_ADC                                       6     4      2      69
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Pot_Set_Vref                                         1     1      0    1554
                                              9 COMRAM     1     1      0
                  _Pot_Increase_Vref
                     _Pot_Reset_Vref
 ---------------------------------------------------------------------------------
 (2) _Pot_Reset_Vref                                       0     0      0     766
                  _Pot_Decrease_Vref
 ---------------------------------------------------------------------------------
 (3) _Pot_Decrease_Vref                                    1     1      0     766
                                              8 COMRAM     1     1      0
                    _Pot_Change_Vref
 ---------------------------------------------------------------------------------
 (2) _Pot_Increase_Vref                                    1     1      0     766
                                              8 COMRAM     1     1      0
                    _Pot_Change_Vref
 ---------------------------------------------------------------------------------
 (4) _Pot_Change_Vref                                      4     3      1     744
                                              4 COMRAM     4     3      1
                       _Pot_Selector
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0    1389
                           _ADC_Init
                   _Calibration_Init
                         _USART_Init
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           8     4      4     877
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     756
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _Calibration_Init                                     0     0      0       0
                           _Pot_Init
 ---------------------------------------------------------------------------------
 (3) _Pot_Init                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             7     2      5     512
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (1) _Calibration_Run                                      3     3      0   11943
                                             31 COMRAM     3     3      0
              _Calibration_Automatic
                    _Calibration_Set
      _EEPROM_Decodificacion_Memoria
                  _Escritura_Memoria
                          _USART_RxC
                          _USART_TxS
 ---------------------------------------------------------------------------------
 (1) _USART_RxC                                            0     0      0     815
                     _USART_Overflow
 ---------------------------------------------------------------------------------
 (2) _Escritura_Memoria                                    6     4      2     353
                                              2 COMRAM     6     4      2
                          _EEPROM_Tx
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Tx                                            2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Calibration_Set                                      1     1      0    5228
                                             25 COMRAM     1     1      0
                            _Pot_Set
                          _USART_RxS
                               _atoi
 ---------------------------------------------------------------------------------
 (3) _USART_RxS                                           12    10      2    1006
                                             13 COMRAM    12    10      2
                     _USART_Overflow
 ---------------------------------------------------------------------------------
 (2) _USART_Overflow                                       1     1      0     815
                                             12 COMRAM     1     1      0
                          _USART_TxS
 ---------------------------------------------------------------------------------
 (1) _USART_TxS                                            8     6      2     811
                                              4 COMRAM     8     6      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Calibration_Automatic                                1     1      0    4660
                                             30 COMRAM     1     1      0
      _EEPROM_Decodificacion_Memoria
                    _Lectura_Memoria
                            _Pot_Set
 ---------------------------------------------------------------------------------
 (3) _Pot_Set                                              2     1      1    3120
                                             12 COMRAM     2     1      1
                       _Pot_Increase
                          _Pot_Reset
 ---------------------------------------------------------------------------------
 (4) _Pot_Reset                                            1     1      0    1158
                                             11 COMRAM     1     1      0
                       _Pot_Decrease
 ---------------------------------------------------------------------------------
 (5) _Pot_Decrease                                         2     1      1    1136
                                              9 COMRAM     2     1      1
                         _Pot_Change
 ---------------------------------------------------------------------------------
 (4) _Pot_Increase                                         2     1      1    1136
                                              9 COMRAM     2     1      1
                         _Pot_Change
 ---------------------------------------------------------------------------------
 (6) _Pot_Change                                           5     3      2     940
                                              4 COMRAM     5     3      2
                       _Pot_Selector
 ---------------------------------------------------------------------------------
 (5) _Pot_Selector                                         4     3      1     524
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lectura_Memoria                                     13    11      2    1466
                                             17 COMRAM    13    11      2
                          _EEPROM_Rx
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Rx                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Decodificacion_Memoria                        3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Calibration_Run
     _Calibration_Automatic
       _EEPROM_Decodificacion_Memoria
       _Lectura_Memoria
         _EEPROM_Rx
         _atoi
           ___wmul
           _isdigit
           _isspace
       _Pot_Set
         _Pot_Increase
           _Pot_Change
             _Pot_Selector
         _Pot_Reset
           _Pot_Decrease
             _Pot_Change
     _Calibration_Set
       _Pot_Set
       _USART_RxS
         _USART_Overflow
           _USART_TxS
             _strlen
       _atoi
     _EEPROM_Decodificacion_Memoria
     _Escritura_Memoria
       _EEPROM_Tx
     _USART_RxC
       _USART_Overflow
     _USART_TxS
   _EEPROM_Decodificacion_Memoria
   _InitPort
     _ADC_Init
     _Calibration_Init
       _Pot_Init
     _USART_Init
       ___aldiv
   _Lectura_Memoria
   _Pot_Set_Vref
     _Pot_Increase_Vref
       _Pot_Change_Vref
         _Pot_Selector
     _Pot_Reset_Vref
       _Pot_Decrease_Vref
         _Pot_Change_Vref
   _Run_Protocol
     _ADC_LecturaFiltro
       _Leer_Canal_ADC
       ___aldiv
     _Concat_Value
       _changeInt
         ___awdiv
         ___awmod
         _strreverse
       _strcat
         _strcpy
           _strlen (ARG)
         _strlen
       _strcpy
     _USART_TxS
   _USART_RxC
   _USART_TxS

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      21       5       20.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      5D       1       97.9%
BITBIGSFRll         2A      0       0      29        0.0%
BITBIGSFRhl         1E      0       0      21        0.0%
BITBIGSFRlhhhlh     10      0       0      23        0.0%
BITBIGSFRlhhhhh      E      0       0      22        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRlhhhll      8      0       0      27        0.0%
BITBIGSFRlhhl        5      0       0      28        0.0%
BITBIGSFRlhhhll      4      0       0      25        0.0%
BITBIGSFRlhhhll      2      0       0      26        0.0%
BITBIGSFRlhhhll      1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7E      30        0.0%
DATA                 0      0      7E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Nov 14 14:52:18 2022

                          ___awdiv@sign 0037                     ___wmul@multiplicand 0034  
                         strreverse@end 0034                           strreverse@aux 0036  
                         _LecturaFiltro 0011                                     l103 1CA2  
                                   l202 159A                                     l106 0EDE  
                                   l122 0A1C                                     l205 0C00  
                                   l250 1E16                                     l170 1D0C  
                                   l171 1D26                                     l500 0D1E  
                                   l165 1B2A                                     l510 0D78  
                                   l502 0D30                                     l238 1936  
                                   l255 1868                                     l247 1E06  
                                   l504 0D42                                     l168 1CFE  
                                   l521 1E62                                     l273 1800  
                                   l177 17A0                                     l602 1E3E  
                                   l530 1A44                                     l282 1B88  
                                   l418 1B78                                     l506 0D54  
                                   l259 18C6                                     l515 0D8C  
                                   l195 19E4                                     l532 1A6C  
                                   l524 1E50                                     l276 1846  
                                   l620 1C5C                                     l508 0D66  
                                   l380 1EA8                                     l285 1BC6  
                                   l605 1D7E                                     l550 12A0  
                                   l534 1A58                                     l518 1E9A  
                                   l615 16FA                                     l551 12AE  
                                   l543 123E                                     l527 1E2A  
                                   l607 1D8C                                     l383 1408  
                                   l552 12BC                                     l608 1D90  
                                   l480 0C4A                                     l641 112A  
                                   l545 125A                                     l553 132C  
                                   l393 1418                                     l473 0C02  
                                   l546 1268                                     l490 0CAC  
                                   l482 0C64                                     l562 1EA2  
                                   l547 1276                                     l539 1A88  
                                   l723 1236                                     l644 1DDC  
                                   l548 1284                                     l396 1E00  
                                   l492 0CBE                                     l484 0C76  
                                   l476 0C16                                     l556 1E8C  
                                   l549 1292                                     l494 0CD0  
                                   l486 0C88                                     l478 0C30  
                                   l574 1A36                                     l567 1A1A  
                                   l559 1E7E                                     l496 0CE2  
                                   l488 0C9A                                     l569 1A06  
                                   l577 1E70                                     l498 0D0C  
                                   l875 14DC                                     l888 164A  
                                   u905 1262                                     u906 1264  
                                   u915 1270                                     u916 1272  
                                   u925 127E                                     u926 1280  
                                   u935 128C                                     u936 128E  
                                   u945 129A                                     u946 129C  
                                   u955 12A8                                     u956 12AA  
                                   u980 1BF8                                     u965 12B6  
                                   u966 12B8                                     u990 1C08  
                                   u975 12C4                                     u895 1246  
                                   u991 1C04                                     u976 12C6  
                                   u896 1248                                     u987 1BEE  
                __end_of_USART_Overflow 1BC8                                     _Pot 0030  
                          ___awmod@sign 0037                                     wreg 000FE8  
                                  l3001 09E8                                    l3003 09EE  
                                  l1340 0EDC                                    l3005 0A06  
                                  l1343 1D5E                                    l1351 1ADA  
                                  l1337 0ED4                                    l3113 12DE  
                                  l2305 123A                                    l2401 19CA  
                                  l1361 1DB6                                    l3115 0E24  
                                  l2307 1248                                    l2411 1BA6  
                                  l2403 19CE                                    l3117 10A2  
                                  l1541 1E32                                    l2421 0D8E  
                                  l1373 1C14                                    l2333 1BC8  
                                  l2413 1BB2                                    l2501 14B0  
                                  l2405 1938                                    l1543 1E34  
                                  l2431 0DF8                                    l2423 0DA2  
                                  l2327 12CA                                    l2351 1A68  
                                  l2343 1A3A                                    l2335 1BD4  
                                  l2415 1BC0                                    l2503 14B6  
                                  l1367 1992                                    l2407 1948  
                                  l1641 101E                                    l1545 1E36  
                                  l2433 0E00                                    l2353 1A6A  
                                  l2345 1A46                                    l2417 1E90  
                                  l2337 1BD8                                    l2361 1876  
                                  l2409 1B7A                                    l1801 0D2E  
                                  l2505 14BC                                    l2521 15BA  
                                  l2513 159C                                    l2601 14FC  
                                  l1651 1046                                    l1643 1026  
                                  l1635 100A                                    l1547 1E38  
                                  l1539 1E2E                                    l2371 1DD4  
                                  l2443 0E72                                    l2435 0E08  
                                  l2427 0DA6                                    l2355 1A7E  
                                  l2347 1A50                                    l2419 1E54  
                                  l2339 1C08                                    l2363 18A4  
                                  l1811 0D88                                    l1803 0D40  
                                  l2507 14CC                                    l2531 15F2  
                                  l2523 15C8                                    l2515 15A0  
                                  l2611 1566                                    l2603 1504  
                                  l1661 106E                                    l1653 104E  
                                  l1645 102E                                    l1637 100E  
                                  l1549 1E3C                                    l2381 1AD0  
                                  l2445 0EA6                                    l2437 0E3A  
                                  l2429 0DC0                                    l2349 1A5A  
                                  l2365 18A8                                    l2357 1848  
                                  l1813 0D8A                                    l1805 0D52  
                                  l2701 1206                                    l2461 1A08  
                                  l2453 19E8                                    l2509 14D4  
                                  l2533 1600                                    l2541 162A  
                                  l2525 15D0                                    l2517 15AE  
                                  l2613 1572                                    l2605 1526  
                                  l1663 1076                                    l1655 1056  
                                  l1647 1036                                    l1639 1016  
                                  l1671 108E                                    l2383 1AD4  
                                  l2375 1A8A                                    l2447 0EB8  
                                  l2551 164E                                    l2367 1E42  
                                  l2359 185C                                    l2631 17C8  
                                  l2623 17A4                                    l1807 0D64  
                                  l2703 1216                                    l2711 18CC  
                                  l2463 1A16                                    l2455 19F2  
                                  l2471 141E                                    l2543 163A  
                                  l2535 1616                                    l2527 15E2  
                                  l2519 15B6                                    l2391 1994  
                                  l2615 1576                                    l2607 152A  
                                  l1665 107E                                    l1657 105E  
                                  l1649 103E                                    l1673 1128  
                                  l2369 1DB8                                    l2377 1A8E  
                                  l2561 1670                                    l2633 17F8  
                                  l2641 1822                                    l2625 17A8  
                                  l2801 1B6E                                    l1809 0D76  
                                  l1905 1EA4                                    l2705 1226  
                                  l2721 1930                                    l2713 1928  
                                  l2465 1A18                                    l2457 19F4  
                                  l2481 144E                                    l2473 142C  
                                  l2545 1642                                    l2537 161E  
                                  l2529 15EA                                    l2393 1998  
                                  l2617 1582                                    l2609 1558  
                                  l1667 1086                                    l1659 1066  
                                  l2387 1D28                                    l2379 1AA2  
                                  l2571 169C                                    l2563 1674  
                                  l2627 17B8                                    l2651 1D6C  
                                  l2811 1C26                                    l2803 1C18  
                                  l2731 1B20                                    l2723 1932  
                                  l2715 192A                                    l2467 1A2C  
                                  l2459 19FE                                    l2643 1E74  
                                  l2491 147C                                    l2483 1452  
                                  l2475 1434                                    l2539 1624  
                                  l2395 19A4                                    l2619 1D92  
                                  l2581 16F2                                    l2573 16A2  
                                  l2565 1690                                    l2557 1656  
                                  l2549 1E1A                                    l2637 180E  
                                  l2629 17BC                                    l2661 1D7A  
                                  l2653 1D6E                                    l2645 1D62  
                                  l2813 1C3C                                    l1781 0C62  
                                  l1773 0C04                                    l2725 1934  
                                  l2717 192C                                    l2709 18C8  
                                  l2821 1C5E                                    l2741 1754  
                                  l2733 16FC                                    l2493 148A  
                                  l2485 145A                                    l2477 1438  
                                  l2469 141A                                    l2397 19B8  
                                  l2575 16BE                                    l2559 165C  
                                  l2639 181E                                    l2663 1D7C  
                                  l2655 1D70                                    l2647 1D66  
                                  l2815 1C40                                    l2727 1ADE  
                                  l1791 0CBC                                    l1783 0C74  
                                  l1775 0C14                                    l2671 114E  
                                  l2719 192E                                    l2831 1C98  
                                  l2823 1C62                                    l2591 1D14  
                                  l2743 1772                                    l2735 1718  
                                  l2495 1490                                    l2487 146C  
                                  l2479 1446                                    l2399 19BE  
                                  l2751 0A48                                    l2577 16C2  
                                  l2657 1D72                                    l2649 1D6A  
                                  l2809 1C20                                    l2729 1B16  
                                  l1793 0CCE                                    l1785 0C86  
                                  l1777 0C2E                                    l2681 1184  
                                  l2673 1152                                    l2665 112C  
                                  l2833 1C9A                                    l2825 1C76  
                                  l2817 1E82                                    l2593 1D1A  
                                  l2585 1CE8                                    l2737 1726  
                                  l2497 14A6                                    l2489 1474  
                                  l2761 0AD4                                    l2753 0A5C  
                                  l2841 0F9E                                    l2921 0836  
                                  l2579 16DE                                    l2659 1D76  
                                  l2851 134A                                    l1795 0CE0  
                                  l1787 0C98                                    l1779 0C48  
                                  l2691 11C6                                    l2683 119A  
                                  l2675 1160                                    l2667 1130  
                                  l2835 1C9C                                    l2827 1C7A  
                                  l2819 1E9C                                    l2595 1D1E  
                                  l2587 1CFA                                    l2739 1750  
                                  l2499 14AE                                    l2771 0B60  
                                  l2763 0AE8                                    l2755 0A70  
                                  l2747 0A20                                    l2843 0FEA  
                                  l2931 0882                                    l2923 083C  
                                  l2781 1E02                                    l2853 135A  
                                  l1797 0D0A                                    l1789 0CAA  
                                  l2693 11E4                                    l2685 11A2  
                                  l2677 1170                                    l2669 113E  
                                  l2837 1C9E                                    l2829 1C7E  
                                  l2589 1CFC                                    l2773 0B9C  
                                  l2765 0B24                                    l2757 0AAC  
                                  l2749 0A34                                    l2845 0FF6  
                                  l2941 08BE                                    l2925 084E  
                                  l2933 088A                                    l2917 0814  
                                  l2791 1DF6                                    l2783 1E14  
                                  l2871 13A2                                    l2863 137A  
                                  l2855 1360                                    l1799 0D1C  
                                  l2695 11F4                                    l2687 11AE  
                                  l2679 1174                                    l2847 1E66  
                                  l2599 14DE                                    l2775 0BB0  
                                  l2767 0B38                                    l2759 0AC0  
                                  l2839 0EDE                                    l2951 08E4  
                                  l2943 08C2                                    l2927 0866  
                                  l2919 081E                                    l2793 1B2E  
                                  l2881 13D6                                    l2865 1380  
                                  l2857 1372                                    l2873 13B2  
                                  l2849 132E                                    l2697 11F6  
                                  l2689 11BC                                    l2777 0BC4  
                                  l2769 0B4C                                    l2961 0916  
                                  l2953 08EC                                    l2945 08CA  
                                  l2937 08A0                                    l2929 086A  
                                  l2787 1DE0                                    l2795 1B3A  
                                  l2883 13E4                                    l2875 13C4  
                                  l2867 1382                                    l2699 1200  
                                  l2779 0BD8                                    l2971 0946  
                                  l2963 091C                                    l2955 08F2  
                                  l2947 08D0                                    l2939 08B2  
                                  l2789 1DE8                                    l2797 1B48  
                                  l2885 13F2                                    l2877 13CA  
                                  l2869 1386                                    l2981 0988  
                                  l2973 095E                                    l2965 0934  
                                  l2957 090A                                    l2949 08E0  
                                  l2799 1B5C                                    l2887 13FE  
                                  l2879 13CE                                    l2991 09B6  
                                  l2983 098C                                    l2975 0962  
                                  l2967 0938                                    l2959 090E  
                                  l2889 1404                                    l2993 09BE  
                                  l2985 0994                                    l2977 096A  
                                  l2969 0940                                    l2995 09C4  
                                  l2987 099A                                    l2979 0970  
                                  l2997 09DC                                    l2989 09B2  
                                  l2999 09E0                                    STR_1 080B  
                                  STR_2 0803                                    STR_3 0808  
                                  STR_4 0810                                    STR_5 0810  
                                  STR_6 0810                                    STR_7 0810  
                                  STR_8 0810                                    STR_9 0810  
                                  _CREN 007D5C                                    u1010 1A7E  
                                  _FERR 007D5A                                    u1011 1A7A  
                                  u1020 1876                                    u1100 1980  
                                  u1005 1A42                                    u1021 1872  
                                  u1006 1A44                                    u1030 18A2  
                                  u1110 1992                                    u1111 198E  
                                  u1040 18C6                                    u1120 1B88  
                                  u1200 1A2C                                    u1041 18C2  
                                  u1121 1B84                                    u1201 1A28  
                                  u1050 1AA2                                    u1130 1BA6  
                                  u1210 142C                                    u1051 1A9E  
                                  u1131 1BA2                                    u1211 1428  
                                  u1107 1976                                    u1060 1AD0  
                                  u1140 1BC0                                    u1220 1446  
                                  u1300 1600                                    u1061 1ACC  
                                  u1037 1898                                    u1141 1BBC  
                                  u1221 1442                                    u1301 15FC  
                                  u1070 1D58                                    u1150 0DC0  
                                  u1230 146C                                    u1310 1616  
                                  u1071 1D52                                    u1151 0DBC  
                                  u2007 0D12                                    u1231 1468  
                                  u1311 1612                                    u1080 1D5A  
                                  u1160 0DF4                                    u1400 180E  
                                  u1240 148A                                    u1320 163A  
                                  u1161 0DF0                                    u1401 180A  
                                  u2017 0D24                                    u1241 1486  
                                  u1321 1636                                    u1170 0EA6  
                                  u1330 1690                                    u1410 1846  
                                  u1250 14A6                                    u1090 19E4  
                                  u1171 0EA2                                    u1331 168C  
                                  u1411 1842                                    u2027 0D36  
                                  u1251 14A2                                    u1091 19E0  
                                  u1180 0EB8                                    u1340 16DE  
                                  u1420 1D8C                                    u1260 14CC  
                                  u1181 0EB4                                    u1341 16DA  
                                  u1421 1D88                                    u2037 0D48  
                                  u1261 14C8                                    u1430 113E  
                                  u1350 1D0C                                    u1510 1772  
                                  u1270 15AE                                    _LATB 000F8A  
                                  u2047 0D5A                                    u1431 113A  
                                  u1351 1D08                                    u1511 176E  
                                  u1271 15AA                                    u1520 1E14  
                                  u1440 1160                                    u1280 15C8  
                                  u1360 14FC                                    u1600 084E  
                                  u1521 1E10                                    u1505 1B28  
                                  u2057 0D6C                                    u1441 115C  
                                  u1281 15C4                                    u1361 14F8  
                                  u1601 084A                                    _LATE 000F8D  
                                  u1530 1B6E                                    u1506 1B2A  
                                  u1450 119A                                    u1290 15E2  
                                  u1370 1558                                    u1610 089C  
                                  u1531 1B6A                                    u2067 0D7E  
                                  u1451 1196                                    u1195 19F0  
                                  u1291 15DE                                    u1371 1554  
                                  u1611 0898                                    u1540 1C5C  
                                  u1460 11BC                                    u1196 19F2  
                                  u1380 1566                                    u1620 08B2  
                                  u1541 1C58                                    u2077 13EA  
                                  u1461 11B8                                    u1381 1562  
                                  u1621 08AE                                    u1390 17F8  
                                  u1550 135A                                    u1470 11E4  
                                  u2087 1A60                                    u1391 17F4  
                                  u1551 1356                                    u1471 11E0  
                                  u1560 1372                                    u1480 1216  
                                  u2097 124E                                    u1561 136E  
                                  u1481 1212                                    u1570 13A2  
                                  u1571 139E                                    u1580 13C4  
                                  u1581 13C0                                    u1590 1418  
                                  u1591 1414                                    u1495 1B1E  
                                  u1807 0950                                    u1496 1B20  
                                  u1817 097A                                    u1907 0C54  
                                  u1827 09A4                                    u1747 0828  
                                  u1917 0C6A                                    u1837 09CE  
                                  u1757 0858                                    u1927 0C7C  
                                  u1847 09F8                                    u1767 0874  
                                  u1937 0C8E                                    u1857 0A10  
                                  u1777 08D6                                    u1947 0CA0  
                                  u1867 1A0E                                    u1787 08FC  
                                  u1957 0CB2                                    u1877 0C0A  
                                  u1797 0926                                    u1967 0CC4  
                                  u1887 0C20                                    u1977 0CD6  
                                  u1897 0C3A                                    u1987 0CE8  
                                  _RCIF 007CF5                                    u1997 0CFC  
                                  _OERR 007D59                                    _TXEN 007D65  
                                  _Suma 0001                                    _data 0025  
                                  _flag 0029                                    _atoi 0D8E  
                                  _main 0814                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                      __end_of_ADC_Init 1B2C                                    prodh 000FF4  
                                  prodl 000FF3                         strreverse@begin 0032  
                                  start 0000                   Lectura_Memoria@i_1218 004E  
                          ___param_bank 000000         Escritura_Memoria@direccionFinal 0037  
                    EEPROM_Rx@direccion 0032                         __end_of_Pot_Set 1E2C  
                     _Pot_Increase_Vref 1E80                         __end_of___aldiv 1238  
                                 ?_atoi 0039                                   ?_main 0032  
                       __end_of___awdiv 14DE                                   _EEADR 000FA9  
                                 STR_10 0810                                   STR_11 0801  
                                 STR_12 0805                                   STR_13 080E  
                       __end_of___awmod 164C                         ___awdiv@divisor 0034  
                       ___awdiv@counter 0036                                   _RCREG 000FAE  
                       ?_USART_Overflow 0032                      ?_Pot_Increase_Vref 0032  
                                 _SPBRG 000FAF                                   _TXREG 000FAD  
                Calibration_Automatic@s 0050                        ??_Leer_Canal_ADC 0034  
                       _Pot_Change_Vref 19E6                         _Lectura_Memoria 164C  
           Escritura_Memoria@string_pot 0034                         __end_of_isdigit 1D60  
                   ??_Pot_Increase_Vref 003A                                   atoi@n 0041  
                                 atoi@s 0039                         __end_of_isspace 1ADC  
                       _Calibration_Set 1B2C                         _Calibration_Run 132E  
                                 tablat 000FF5                            USART_TxS@str 0036  
                                 status 000FD8                    __end_of_Concat_Value 0C02  
                           ?_USART_Init 0040                         __initialization 1CA4  
                     __end_of_EEPROM_Rx 1E40                       __end_of_EEPROM_Tx 1D92  
                          __end_of_atoi 0EDE                            __end_of_main 0A20  
             __end_of_Pot_Increase_Vref 1E8E   __end_of_EEPROM_Decodificacion_Memoria 112C  
         _EEPROM_Decodificacion_Memoria 1008                        __end_of_InitPort 1CA4  
                    EEPROM_Tx@direccion 0033                                  ??_atoi 003B  
                                ??_main 0056                              _Range_High 0059  
                         __activetblptr 000002                        __end_of_Pot_Init 0D8E  
                Lectura_Memoria@counter 0049              Escritura_Memoria@direccion 0036  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                                _EEDATA 000FA8                                  _EECON2 000FA7  
                      ___awdiv@dividend 0032                                  _OSCCON 000FD3  
                            _Pot_Change 1A38                          _Pot_Reset_Vref 1E9C  
                             ??_Pot_Set 003F                   _Calibration_Automatic 1DDE  
                             ??___aldiv 003A                                  _cadena 002C  
                                ___wmul 1DB8                               ??___awdiv 0036  
                             ??___awmod 0036                                  clear_0 1CCA  
                                clear_1 1CD6                        ___awdiv@quotient 0038  
                       ___awmod@divisor 0034                                  isa$std 000001  
               __end_of_Pot_Change_Vref 1A38                                  _result 0060  
                       ___awmod@counter 0036                 __end_of_Lectura_Memoria 16FC  
                     __end_of_USART_RxC 1E18                       __end_of_USART_RxS 1848  
                     __end_of_USART_TxS 18C8                                  _strcat 1D92  
                                _strcpy 1938                                  _strlen 1BC8  
                      _Calibration_Init 1EA4                            __pdataCOMRAM 0059  
                             ??_isdigit 0034                               ?_ADC_Init 0032  
               __end_of_Calibration_Set 1B7A                 __end_of_Calibration_Run 141A  
                          __mediumconst 0000                               ??_isspace 0034  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                              __accesstop 0060  
               __end_of__initialization 1CDC                  __end_of_Pot_Reset_Vref 1EA4  
                         ___rparam_used 000001                       _ADC_LecturaFiltro 16FC  
                    ?_ADC_LecturaFiltro 0040                          __pcstackCOMRAM 0032  
                         changeInt@sign 003E                           changeInt@wstr 0040  
               Pot_Increase_Vref@amount 003A                     ??_ADC_LecturaFiltro 0043  
                   Pot_Change@direction 0036          ?_EEPROM_Decodificacion_Memoria 0032  
                         ?_Pot_Decrease 003B                              ??_ADC_Init 0037  
                            __pbssBANK0 0060                           ?_Pot_Increase 003B  
                             ?_InitPort 0032               __end_of_ADC_LecturaFiltro 17A2  
                     __end_of_Pot_Reset 1E9C                             ?_Pot_Change 0036  
                       ?_Pot_Reset_Vref 0032                             Pot_Change@i 0039  
                         ?_Pot_Selector 0032                           ?_Pot_Set_Vref 0032  
                    Escritura_Memoria@i 0038                  ?_Calibration_Automatic 0032  
                             ?_Pot_Init 0032                                 ?___wmul 0032  
                      ??_USART_Overflow 003E                        ?_Pot_Change_Vref 0036  
                      ?_Lectura_Memoria 0043                                 ?_strcat 0040  
                               ?_strcpy 0036                                 ?_strlen 0032  
                          _Concat_Value 0A20                          ??_Pot_Decrease 003C  
                      ?_Calibration_Set 0032                        ?_Calibration_Run 0032  
    Lectura_Memoria@potenciometro_value 004A                       __end_of_changeInt 159C  
                        ??_Pot_Increase 003C                      Pot_Decrease@amount 003B  
                   Leer_Canal_ADC@Canal 0035                              ??_InitPort 0048  
           ADC_Init@entradas_analogicas 0038                      Pot_Decrease@sensor 003C  
                               _Lectura 0013                            ADC_Init@ADQT 0034  
                        ??_Pot_Selector 0033                          ??_Pot_Set_Vref 003B  
                          ??_USART_Init 0044                                 __Hparam 0000  
                          ADC_Init@Vref 0032                                 __Lparam 0000  
                            ??_Pot_Init 0032                                 _Pot_Set 1E18  
                        Concat_Value@id 0044                                 ___aldiv 112C  
                               ___awdiv 141A                                 ___awmod 159C  
                          __psmallconst 0800                               _EEPROM_Rx 1E2C  
                             _EEPROM_Tx 1D60                          USART_Init@BAUD 0040  
                               __pcinit 1CA4                                 __ramtop 0800  
                               __ptext0 0814                                 __ptext1 0EDE  
                               __ptext2 0A20                                 __ptext3 1D92  
                               __ptext4 1938                                 __ptext5 14DE  
                               __ptext6 1994                                 __ptext7 159C  
                               __ptext8 141A                                 __ptext9 16FC  
EEPROM_Decodificacion_Memoria@direccion 0034                                 _isdigit 1D28  
                      ___awmod@dividend 0032                        ___aldiv@dividend 0032  
                               _isspace 1A8A                                 atoi@neg 003F  
                         Pot_Set@amount 003E                      __end_of_USART_Init 1938  
                     _Pot_Decrease_Vref 1E72                          USART_RxS@count 0045  
                  end_of_initialization 1CDC                           Pot_Set@sensor 003F  
                    ?_Pot_Decrease_Vref 0032                           __Lmediumconst 0000  
                       _CALIBRATION_RUN 002A                __end_of_Calibration_Init 1EAA  
                     _Calibration_value 0005                           ?_Run_Protocol 0032  
              Pot_Change_Vref@direction 0038                     ??_Pot_Decrease_Vref 003A  
                             _RCSTAbits 000FAB                        ___aldiv@quotient 003C  
                             _SENSOR_ID 0028                                 postdec1 000FE5  
                               postinc0 000FEE                                 postinc2 000FDE  
                            ?_EEPROM_Rx 0032                              ?_EEPROM_Tx 0032  
                               strcpy@d 003E                                 strlen@a 0034  
                               strcpy@s 003C                                 strlen@s 0032  
                             _USART_RxC 1E02                               _USART_RxS 17A2  
                             _USART_TxS 1848                               _TRISBbits 000F93  
                             _TRISCbits 000F94               __end_of_Pot_Decrease_Vref 1E80  
                             _TRISDbits 000F95                           EEPROM_Tx@dato 0032  
                             _TXSTAbits 000FAC                          ??_Run_Protocol 0056  
                  __end_of_Pot_Decrease 1E52                        Pot_Change@amount 0037  
                    USART_Overflow@temp 003E                        Pot_Change@sensor 003A  
                             _Direction 0026                          changeInt@value 003A  
                        __end_of___wmul 1DDE                              _strreverse 1994  
                  __end_of_Pot_Increase 1E64                           __pidataCOMRAM 1EAA  
                      Pot_Change_Vref@i 0039                          __end_of_strcat 1DB8  
                        __end_of_strcpy 1994                          __end_of_strlen 1C16  
                  __end_of_Pot_Selector 132E                     start_initialization 1CA4  
                  __end_of_Pot_Set_Vref 1E72                              ?_USART_RxC 0032  
                      Lectura_Memoria@i 004C                              ?_USART_RxS 003F  
                            ?_USART_TxS 0036                ADC_LecturaFiltro@lectura 0047  
                      ??_Pot_Reset_Vref 003B                               _Range_Low 005B  
       ??_EEPROM_Decodificacion_Memoria 0032                 ??_Calibration_Automatic 0050  
                          ??_Pot_Change 0038                    Concat_Value@Lectura0 0046  
                  Concat_Value@Lectura1 0048                    Concat_Value@Lectura2 004A  
                  Concat_Value@Lectura3 004C                    Concat_Value@Lectura4 004E  
                  Concat_Value@Lectura5 0050                    Concat_Value@Lectura6 0052  
                  Concat_Value@Lectura7 0054                               _Pot_Reset 1E8E  
                             _Pot_Value 000B                          ADC_Init@estado 0036  
                              ??___wmul 0036                           _Pot_Value_str 0009  
                      Calibration_Set@s 004B                             ??_EEPROM_Rx 0032  
                           ??_EEPROM_Tx 0033                        Calibration_Run@i 0052  
                              ??_strcat 0044                                ??_strcpy 003A  
                              ??_strlen 0034                             __pbssCOMRAM 0001  
              Lectura_Memoria@direccion 0045                      __end_of_Pot_Change 1A8A  
                          changeInt@str 003C                               _changeInt 14DE  
                            ?_Pot_Reset 0032                                ?_Pot_Set 003E  
                              ?___aldiv 0032                                ?___awdiv 0032  
          Lectura_Memoria@potenciometro 0046                                ?___awmod 0032  
                           ?_strreverse 0032                      ADC_LecturaFiltro@i 0049  
                    ADC_LecturaFiltro@n 0040                        _Conexion_perdida 002B  
                           __smallconst 0800                                ?_isdigit 0032  
                  __end_of_Run_Protocol 1008                                _ADC_Init 1ADC  
                           ??_USART_RxC 003F                                ?_isspace 0032  
                           ??_USART_RxS 0041                             ??_USART_TxS 0038  
                 ADC_Init@justificacion 0035                         ___aldiv@divisor 0036  
                       ___aldiv@counter 003A                          ___wmul@product 0036  
                        _Leer_Canal_ADC 1CE6                                _LATBbits 000F8A  
                              _LATCbits 000F8B                                _LATDbits 000F8C  
                            ?_changeInt 003A                       ?_Calibration_Init 0032  
                              _PIR1bits 000F9E                                _PIR2bits 000FA1  
                              _SENSOR_0 0023                                _SENSOR_1 0021  
                              _SENSOR_2 001F                                _SENSOR_3 001D  
                              _SENSOR_4 001B                                _SENSOR_5 0019  
                              _SENSOR_6 0017                                _SENSOR_7 0015  
                              _SENSOR_I 0027                      ??_Calibration_Init 0034  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 0032  
                    Pot_Selector@sensor 0035                      Pot_Selector@status 0032  
                          _Pot_Decrease 1E40                            _SENSOR_VALUE 000F  
                          _isspace$1693 0038                               copy_data0 1CB8  
                            USART_RxS@i 0049                              USART_TxS@i 003C  
                __end_of_Leer_Canal_ADC 1D28                        USART_RxS@pointer 003F  
                    Pot_Set_Vref@amount 003B                            _Pot_Increase 1E52  
                              _InitPort 1C5E                              _EECON1bits 000FA6  
                         ADC_Init@Clock 0033                                __Hrparam 0000  
                          _Pot_Selector 1238                            _Pot_Set_Vref 1E64  
                              _Pot_Init 0C02                             ??_Pot_Reset 003D  
                              __Lrparam 0000                       _CALIBRATION_START 005D  
                            strcat@dest 0040                                __ptext10 1CE6  
                              __ptext11 1E64                                __ptext20 0C02  
                              __ptext12 1E9C                                __ptext21 1ADC  
                              __ptext13 1E72                                __ptext30 1BC8  
                              __ptext22 132E                                __ptext14 1E80  
                              __ptext31 1DDE                                __ptext23 1E02  
                              __ptext15 19E6                                __ptext40 1A8A  
                              __ptext32 1E18                                __ptext24 1C16  
                              __ptext16 1C5E                                __ptext41 1D28  
                              __ptext33 1E8E                                __ptext25 1D60  
                              __ptext17 18C8                                __ptext42 1DB8  
                              __ptext34 1E40                                __ptext26 1B2C  
                              __ptext18 112C                                __ptext43 1E2C  
                              __ptext35 1E52                                __ptext27 17A2  
                              __ptext19 1EA4                                __ptext44 1008  
                              __ptext36 1A38                                __ptext28 1B7A  
                              __ptext37 1238                                __ptext29 1848  
                              __ptext38 164C                                __ptext39 0D8E  
                     Leer_Canal_ADC@ADC 0036                         ?_Leer_Canal_ADC 0032  
                            strcpy@dest 0036               Lectura_Memoria@direccionX 0048  
                           ??_changeInt 003E                         Pot_Reset@sensor 003D  
                     ??_Pot_Change_Vref 0037                       ??_Lectura_Memoria 0045  
         __end_of_Calibration_Automatic 1E02                         _USART_Init$1929 0044  
                     ??_Calibration_Set 004B                       ??_Calibration_Run 0051  
                              isa$xinst 000000                                main@code 0058  
                ADC_LecturaFiltro@Canal 0042                         USART_RxS@length 0044  
                         ?_Concat_Value 0044                              _INTCONbits 000FF2  
                              isdigit@c 0032                         USART_TxS@length 003A  
                             strcat@src 0042                                isspace@c 0032  
                     _Escritura_Memoria 1C16                               strcpy@src 0038  
                         _potenciometro 0007                            _Run_Protocol 0EDE  
                    ?_Escritura_Memoria 0034                   Pot_Change_Vref@amount 0036  
               Pot_Decrease_Vref@amount 003A                            ??_strreverse 0036  
                   ??_Escritura_Memoria 0036                   _CALIBRATION_REFERENCE 000D  
                        ??_Concat_Value 0056                      Pot_Increase@amount 003B  
                    Pot_Increase@sensor 003C                          _USART_Overflow 1B7A  
                          ___aldiv@sign 003B               __end_of_Escritura_Memoria 1C5E  
                    __end_of_strreverse 19E6                              _USART_Init 18C8  
